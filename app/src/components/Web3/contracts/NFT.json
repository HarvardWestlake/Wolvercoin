{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "inputs": [
        {
          "name": "activeUserAddress",
          "type": "address"
        },
        {
          "name": "_password",
          "type": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "name": "interface_id",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_auctionAddress",
          "type": "address"
        },
        {
          "name": "_tokenMetaDataUri",
          "type": "string"
        },
        {
          "name": "_password",
          "type": "uint256"
        }
      ],
      "name": "safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "_editTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "addTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getTokenURIByTokenId",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_approved",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_new_address",
          "type": "address"
        }
      ],
      "name": "transferMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "new_uri",
          "type": "string"
        }
      ],
      "name": "set_contract_uri",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "coin",
          "type": "address"
        },
        {
          "name": "target",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "admin_withdraw_erc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activeUserContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/NFT.vy"
  },
  "ast": {
    "ast_type": "Module",
    "body": [
      {
        "alias": null,
        "ast_type": "ImportFrom",
        "col_offset": 0,
        "end_col_offset": 34,
        "end_lineno": 9,
        "level": 0,
        "lineno": 9,
        "module": "vyper.interfaces",
        "name": "ERC20",
        "node_id": 1,
        "src": "422:34:0"
      },
      {
        "alias": null,
        "ast_type": "ImportFrom",
        "col_offset": 0,
        "end_col_offset": 35,
        "end_lineno": 10,
        "level": 0,
        "lineno": 10,
        "module": "vyper.interfaces",
        "name": "ERC165",
        "node_id": 3,
        "src": "457:35:0"
      },
      {
        "alias": null,
        "ast_type": "ImportFrom",
        "col_offset": 0,
        "end_col_offset": 35,
        "end_lineno": 11,
        "level": 0,
        "lineno": 11,
        "module": "vyper.interfaces",
        "name": "ERC721",
        "node_id": 5,
        "src": "493:35:0"
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 12,
          "end_col_offset": 18,
          "end_lineno": 13,
          "id": "ERC721",
          "lineno": 13,
          "node_id": 10,
          "src": "542:6:0"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 18,
        "end_lineno": 13,
        "lineno": 13,
        "node_id": 7,
        "simple": 1,
        "src": "530:18:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 10,
          "end_lineno": 13,
          "id": "implements",
          "lineno": 13,
          "node_id": 8,
          "src": "530:10:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 12,
          "end_col_offset": 18,
          "end_lineno": 14,
          "id": "ERC165",
          "lineno": 14,
          "node_id": 15,
          "src": "561:6:0"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 18,
        "end_lineno": 14,
        "lineno": 14,
        "node_id": 12,
        "simple": 1,
        "src": "549:18:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 10,
          "end_lineno": 14,
          "id": "implements",
          "lineno": 14,
          "node_id": 13,
          "src": "549:10:0"
        },
        "value": null
      },
      {
        "ast_type": "InterfaceDef",
        "body": [
          {
            "args": {
              "args": [
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 23,
                    "end_col_offset": 30,
                    "end_lineno": 19,
                    "id": "address",
                    "lineno": 19,
                    "node_id": 21,
                    "src": "702:7:0"
                  },
                  "arg": "_operator",
                  "ast_type": "arg",
                  "col_offset": 12,
                  "end_col_offset": 30,
                  "end_lineno": 19,
                  "lineno": 19,
                  "node_id": 20,
                  "src": "691:18:0"
                },
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 26,
                    "end_lineno": 20,
                    "id": "address",
                    "lineno": 20,
                    "node_id": 24,
                    "src": "730:7:0"
                  },
                  "arg": "_from",
                  "ast_type": "arg",
                  "col_offset": 12,
                  "end_col_offset": 26,
                  "end_lineno": 20,
                  "lineno": 20,
                  "node_id": 23,
                  "src": "723:14:0"
                },
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 22,
                    "end_col_offset": 29,
                    "end_lineno": 21,
                    "id": "uint256",
                    "lineno": 21,
                    "node_id": 27,
                    "src": "761:7:0"
                  },
                  "arg": "_tokenId",
                  "ast_type": "arg",
                  "col_offset": 12,
                  "end_col_offset": 29,
                  "end_lineno": 21,
                  "lineno": 21,
                  "node_id": 26,
                  "src": "751:17:0"
                },
                {
                  "annotation": {
                    "ast_type": "Subscript",
                    "col_offset": 19,
                    "end_col_offset": 30,
                    "end_lineno": 22,
                    "lineno": 22,
                    "node_id": 30,
                    "slice": {
                      "ast_type": "Index",
                      "col_offset": 19,
                      "end_col_offset": 30,
                      "end_lineno": 22,
                      "lineno": 22,
                      "node_id": 35,
                      "src": "789:11:0",
                      "value": {
                        "ast_type": "Int",
                        "col_offset": 25,
                        "end_col_offset": 29,
                        "end_lineno": 22,
                        "lineno": 22,
                        "node_id": 33,
                        "src": "795:4:0",
                        "value": 1024
                      }
                    },
                    "src": "789:11:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 19,
                      "end_col_offset": 24,
                      "end_lineno": 22,
                      "id": "Bytes",
                      "lineno": 22,
                      "node_id": 31,
                      "src": "789:5:0"
                    }
                  },
                  "arg": "_data",
                  "ast_type": "arg",
                  "col_offset": 12,
                  "end_col_offset": 30,
                  "end_lineno": 22,
                  "lineno": 22,
                  "node_id": 29,
                  "src": "782:18:0"
                }
              ],
              "ast_type": "arguments",
              "col_offset": 12,
              "default": null,
              "defaults": [],
              "end_col_offset": 30,
              "end_lineno": 22,
              "lineno": 19,
              "node_id": 19,
              "src": "691:109:0"
            },
            "ast_type": "FunctionDef",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 21,
                "end_col_offset": 31,
                "end_lineno": 23,
                "lineno": 23,
                "node_id": 36,
                "src": "822:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 31,
                  "end_lineno": 23,
                  "id": "nonpayable",
                  "lineno": 23,
                  "node_id": 37,
                  "src": "822:10:0"
                }
              }
            ],
            "col_offset": 4,
            "decorator_list": [],
            "doc_string": null,
            "end_col_offset": 31,
            "end_lineno": 23,
            "lineno": 18,
            "name": "onERC721Received",
            "node_id": 18,
            "pos": null,
            "returns": {
              "ast_type": "Name",
              "col_offset": 13,
              "end_col_offset": 19,
              "end_lineno": 23,
              "id": "bytes4",
              "lineno": 23,
              "node_id": 39,
              "src": "814:6:0"
            },
            "src": "657:175:0"
          }
        ],
        "col_offset": 0,
        "end_col_offset": 31,
        "end_lineno": 23,
        "lineno": 17,
        "name": "ERC721Receiver",
        "node_id": 17,
        "src": "627:205:0"
      },
      {
        "ast_type": "EventDef",
        "body": [
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 27,
                  "end_lineno": 34,
                  "id": "address",
                  "lineno": 34,
                  "node_id": 48,
                  "src": "1462:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 12,
              "end_col_offset": 28,
              "end_lineno": 34,
              "func": {
                "ast_type": "Name",
                "col_offset": 12,
                "end_col_offset": 19,
                "end_lineno": 34,
                "id": "indexed",
                "lineno": 34,
                "node_id": 46,
                "src": "1454:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 34,
              "node_id": 45,
              "src": "1454:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 28,
            "end_lineno": 34,
            "lineno": 34,
            "node_id": 42,
            "simple": 1,
            "src": "1446:24:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 10,
              "end_lineno": 34,
              "id": "sender",
              "lineno": 34,
              "node_id": 43,
              "src": "1446:6:0"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 22,
                  "end_col_offset": 29,
                  "end_lineno": 35,
                  "id": "address",
                  "lineno": 35,
                  "node_id": 56,
                  "src": "1493:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 14,
              "end_col_offset": 30,
              "end_lineno": 35,
              "func": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 21,
                "end_lineno": 35,
                "id": "indexed",
                "lineno": 35,
                "node_id": 54,
                "src": "1485:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 35,
              "node_id": 53,
              "src": "1485:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 35,
            "lineno": 35,
            "node_id": 50,
            "simple": 1,
            "src": "1475:26:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 35,
              "id": "receiver",
              "lineno": 35,
              "node_id": 51,
              "src": "1475:8:0"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 28,
                  "end_lineno": 36,
                  "id": "uint256",
                  "lineno": 36,
                  "node_id": 64,
                  "src": "1523:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 13,
              "end_col_offset": 29,
              "end_lineno": 36,
              "func": {
                "ast_type": "Name",
                "col_offset": 13,
                "end_col_offset": 20,
                "end_lineno": 36,
                "id": "indexed",
                "lineno": 36,
                "node_id": 62,
                "src": "1515:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 36,
              "node_id": 61,
              "src": "1515:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 36,
            "lineno": 36,
            "node_id": 58,
            "simple": 1,
            "src": "1506:25:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 11,
              "end_lineno": 36,
              "id": "tokenId",
              "lineno": 36,
              "node_id": 59,
              "src": "1506:7:0"
            },
            "value": null
          }
        ],
        "col_offset": 0,
        "end_col_offset": 29,
        "end_lineno": 36,
        "lineno": 33,
        "name": "Transfer",
        "node_id": 41,
        "src": "1426:105:0"
      },
      {
        "ast_type": "EventDef",
        "body": [
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 26,
                  "end_lineno": 45,
                  "id": "address",
                  "lineno": 45,
                  "node_id": 73,
                  "src": "1961:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 11,
              "end_col_offset": 27,
              "end_lineno": 45,
              "func": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 18,
                "end_lineno": 45,
                "id": "indexed",
                "lineno": 45,
                "node_id": 71,
                "src": "1953:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 45,
              "node_id": 70,
              "src": "1953:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 45,
            "lineno": 45,
            "node_id": 67,
            "simple": 1,
            "src": "1946:23:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 45,
              "id": "owner",
              "lineno": 45,
              "node_id": 68,
              "src": "1946:5:0"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 22,
                  "end_col_offset": 29,
                  "end_lineno": 46,
                  "id": "address",
                  "lineno": 46,
                  "node_id": 81,
                  "src": "1992:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 14,
              "end_col_offset": 30,
              "end_lineno": 46,
              "func": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 21,
                "end_lineno": 46,
                "id": "indexed",
                "lineno": 46,
                "node_id": 79,
                "src": "1984:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 46,
              "node_id": 78,
              "src": "1984:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 46,
            "lineno": 46,
            "node_id": 75,
            "simple": 1,
            "src": "1974:26:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 46,
              "id": "approved",
              "lineno": 46,
              "node_id": 76,
              "src": "1974:8:0"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 28,
                  "end_lineno": 47,
                  "id": "uint256",
                  "lineno": 47,
                  "node_id": 89,
                  "src": "2022:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 13,
              "end_col_offset": 29,
              "end_lineno": 47,
              "func": {
                "ast_type": "Name",
                "col_offset": 13,
                "end_col_offset": 20,
                "end_lineno": 47,
                "id": "indexed",
                "lineno": 47,
                "node_id": 87,
                "src": "2014:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 47,
              "node_id": 86,
              "src": "2014:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 47,
            "lineno": 47,
            "node_id": 83,
            "simple": 1,
            "src": "2005:25:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 11,
              "end_lineno": 47,
              "id": "tokenId",
              "lineno": 47,
              "node_id": 84,
              "src": "2005:7:0"
            },
            "value": null
          }
        ],
        "col_offset": 0,
        "end_col_offset": 29,
        "end_lineno": 47,
        "lineno": 44,
        "name": "Approval",
        "node_id": 66,
        "src": "1926:104:0"
      },
      {
        "ast_type": "EventDef",
        "body": [
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 26,
                  "end_lineno": 56,
                  "id": "address",
                  "lineno": 56,
                  "node_id": 98,
                  "src": "2401:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 11,
              "end_col_offset": 27,
              "end_lineno": 56,
              "func": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 18,
                "end_lineno": 56,
                "id": "indexed",
                "lineno": 56,
                "node_id": 96,
                "src": "2393:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 56,
              "node_id": 95,
              "src": "2393:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 56,
            "lineno": 56,
            "node_id": 92,
            "simple": 1,
            "src": "2386:23:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 56,
              "id": "owner",
              "lineno": 56,
              "node_id": 93,
              "src": "2386:5:0"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 22,
                  "end_col_offset": 29,
                  "end_lineno": 57,
                  "id": "address",
                  "lineno": 57,
                  "node_id": 106,
                  "src": "2432:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 14,
              "end_col_offset": 30,
              "end_lineno": 57,
              "func": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 21,
                "end_lineno": 57,
                "id": "indexed",
                "lineno": 57,
                "node_id": 104,
                "src": "2424:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 57,
              "node_id": 103,
              "src": "2424:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 57,
            "lineno": 57,
            "node_id": 100,
            "simple": 1,
            "src": "2414:26:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 57,
              "id": "operator",
              "lineno": 57,
              "node_id": 101,
              "src": "2414:8:0"
            },
            "value": null
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 14,
              "end_col_offset": 18,
              "end_lineno": 58,
              "id": "bool",
              "lineno": 58,
              "node_id": 111,
              "src": "2455:4:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 18,
            "end_lineno": 58,
            "lineno": 58,
            "node_id": 108,
            "simple": 1,
            "src": "2445:14:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 58,
              "id": "approved",
              "lineno": 58,
              "node_id": 109,
              "src": "2445:8:0"
            },
            "value": null
          }
        ],
        "col_offset": 0,
        "end_col_offset": 18,
        "end_lineno": 58,
        "lineno": 55,
        "name": "ApprovalForAll",
        "node_id": 91,
        "src": "2360:99:0"
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 11,
          "end_col_offset": 36,
          "end_lineno": 62,
          "lineno": 62,
          "node_id": 116,
          "slice": {
            "ast_type": "Index",
            "col_offset": 11,
            "end_col_offset": 36,
            "end_lineno": 62,
            "lineno": 62,
            "node_id": 126,
            "src": "2529:25:0",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 19,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 26,
                  "end_lineno": 62,
                  "id": "uint256",
                  "lineno": 62,
                  "node_id": 120,
                  "src": "2537:7:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 28,
                  "end_col_offset": 35,
                  "end_lineno": 62,
                  "id": "address",
                  "lineno": 62,
                  "node_id": 122,
                  "src": "2546:7:0"
                }
              ],
              "end_col_offset": 35,
              "end_lineno": 62,
              "lineno": 62,
              "node_id": 119,
              "src": "2537:16:0"
            }
          },
          "src": "2529:25:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 11,
            "end_col_offset": 18,
            "end_lineno": 62,
            "id": "HashMap",
            "lineno": 62,
            "node_id": 117,
            "src": "2529:7:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 36,
        "end_lineno": 62,
        "is_constant": false,
        "is_immutable": false,
        "is_public": false,
        "lineno": 62,
        "node_id": 113,
        "src": "2518:36:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 9,
          "end_lineno": 62,
          "id": "idToOwner",
          "lineno": 62,
          "node_id": 114,
          "src": "2518:9:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 15,
          "end_col_offset": 40,
          "end_lineno": 65,
          "lineno": 65,
          "node_id": 130,
          "slice": {
            "ast_type": "Index",
            "col_offset": 15,
            "end_col_offset": 40,
            "end_lineno": 65,
            "lineno": 65,
            "node_id": 140,
            "src": "2619:25:0",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 23,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 23,
                  "end_col_offset": 30,
                  "end_lineno": 65,
                  "id": "uint256",
                  "lineno": 65,
                  "node_id": 134,
                  "src": "2627:7:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 32,
                  "end_col_offset": 39,
                  "end_lineno": 65,
                  "id": "address",
                  "lineno": 65,
                  "node_id": 136,
                  "src": "2636:7:0"
                }
              ],
              "end_col_offset": 39,
              "end_lineno": 65,
              "lineno": 65,
              "node_id": 133,
              "src": "2627:16:0"
            }
          },
          "src": "2619:25:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 15,
            "end_col_offset": 22,
            "end_lineno": 65,
            "id": "HashMap",
            "lineno": 65,
            "node_id": 131,
            "src": "2619:7:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 40,
        "end_lineno": 65,
        "is_constant": false,
        "is_immutable": false,
        "is_public": false,
        "lineno": 65,
        "node_id": 127,
        "src": "2604:40:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 13,
          "end_lineno": 65,
          "id": "idToApprovals",
          "lineno": 65,
          "node_id": 128,
          "src": "2604:13:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 21,
          "end_col_offset": 46,
          "end_lineno": 68,
          "lineno": 68,
          "node_id": 144,
          "slice": {
            "ast_type": "Index",
            "col_offset": 21,
            "end_col_offset": 46,
            "end_lineno": 68,
            "lineno": 68,
            "node_id": 154,
            "src": "2725:25:0",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 29,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 36,
                  "end_lineno": 68,
                  "id": "address",
                  "lineno": 68,
                  "node_id": 148,
                  "src": "2733:7:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 38,
                  "end_col_offset": 45,
                  "end_lineno": 68,
                  "id": "uint256",
                  "lineno": 68,
                  "node_id": 150,
                  "src": "2742:7:0"
                }
              ],
              "end_col_offset": 45,
              "end_lineno": 68,
              "lineno": 68,
              "node_id": 147,
              "src": "2733:16:0"
            }
          },
          "src": "2725:25:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 21,
            "end_col_offset": 28,
            "end_lineno": 68,
            "id": "HashMap",
            "lineno": 68,
            "node_id": 145,
            "src": "2725:7:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 46,
        "end_lineno": 68,
        "is_constant": false,
        "is_immutable": false,
        "is_public": false,
        "lineno": 68,
        "node_id": 141,
        "src": "2704:46:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 19,
          "end_lineno": 68,
          "id": "ownerToNFTokenCount",
          "lineno": 68,
          "node_id": 142,
          "src": "2704:19:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 18,
          "end_col_offset": 58,
          "end_lineno": 71,
          "lineno": 71,
          "node_id": 158,
          "slice": {
            "ast_type": "Index",
            "col_offset": 18,
            "end_col_offset": 58,
            "end_lineno": 71,
            "lineno": 71,
            "node_id": 177,
            "src": "2838:40:0",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 26,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 33,
                  "end_lineno": 71,
                  "id": "address",
                  "lineno": 71,
                  "node_id": 162,
                  "src": "2846:7:0"
                },
                {
                  "ast_type": "Subscript",
                  "col_offset": 35,
                  "end_col_offset": 57,
                  "end_lineno": 71,
                  "lineno": 71,
                  "node_id": 164,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 35,
                    "end_col_offset": 57,
                    "end_lineno": 71,
                    "lineno": 71,
                    "node_id": 174,
                    "src": "2855:22:0",
                    "value": {
                      "ast_type": "Tuple",
                      "col_offset": 43,
                      "elements": [
                        {
                          "ast_type": "Name",
                          "col_offset": 43,
                          "end_col_offset": 50,
                          "end_lineno": 71,
                          "id": "address",
                          "lineno": 71,
                          "node_id": 168,
                          "src": "2863:7:0"
                        },
                        {
                          "ast_type": "Name",
                          "col_offset": 52,
                          "end_col_offset": 56,
                          "end_lineno": 71,
                          "id": "bool",
                          "lineno": 71,
                          "node_id": 170,
                          "src": "2872:4:0"
                        }
                      ],
                      "end_col_offset": 56,
                      "end_lineno": 71,
                      "lineno": 71,
                      "node_id": 167,
                      "src": "2863:13:0"
                    }
                  },
                  "src": "2855:22:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 35,
                    "end_col_offset": 42,
                    "end_lineno": 71,
                    "id": "HashMap",
                    "lineno": 71,
                    "node_id": 165,
                    "src": "2855:7:0"
                  }
                }
              ],
              "end_col_offset": 57,
              "end_lineno": 71,
              "lineno": 71,
              "node_id": 161,
              "src": "2846:31:0"
            }
          },
          "src": "2838:40:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 18,
            "end_col_offset": 25,
            "end_lineno": 71,
            "id": "HashMap",
            "lineno": 71,
            "node_id": 159,
            "src": "2838:7:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 58,
        "end_lineno": 71,
        "is_constant": false,
        "is_immutable": false,
        "is_public": false,
        "lineno": 71,
        "node_id": 155,
        "src": "2820:58:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 16,
          "end_lineno": 71,
          "id": "ownerToOperators",
          "lineno": 71,
          "node_id": 156,
          "src": "2820:16:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 8,
          "end_col_offset": 15,
          "end_lineno": 74,
          "id": "address",
          "lineno": 74,
          "node_id": 181,
          "src": "2935:7:0"
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 15,
        "end_lineno": 74,
        "is_constant": false,
        "is_immutable": false,
        "is_public": false,
        "lineno": 74,
        "node_id": 178,
        "src": "2927:15:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 6,
          "end_lineno": 74,
          "id": "minter",
          "lineno": 74,
          "node_id": 179,
          "src": "2927:6:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 30,
          "end_col_offset": 37,
          "end_lineno": 77,
          "id": "address",
          "lineno": 77,
          "node_id": 189,
          "src": "3016:7:0"
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 83,
        "end_lineno": 77,
        "is_constant": true,
        "is_immutable": false,
        "is_public": false,
        "lineno": 77,
        "node_id": 183,
        "src": "2986:83:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 19,
          "end_lineno": 77,
          "id": "IDENTITY_PRECOMPILE",
          "lineno": 77,
          "node_id": 184,
          "src": "2986:19:0"
        },
        "value": {
          "ast_type": "Hex",
          "col_offset": 41,
          "end_col_offset": 83,
          "end_lineno": 77,
          "lineno": 77,
          "node_id": 191,
          "src": "3027:42:0",
          "value": "0x0000000000000000000000000000000000000004"
        }
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 11,
          "end_col_offset": 18,
          "end_lineno": 83,
          "id": "uint256",
          "lineno": 83,
          "node_id": 195,
          "src": "3204:7:0"
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 18,
        "end_lineno": 83,
        "is_constant": false,
        "is_immutable": false,
        "is_public": false,
        "lineno": 83,
        "node_id": 192,
        "src": "3193:18:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 8,
          "end_lineno": 83,
          "id": "gradYear",
          "lineno": 83,
          "node_id": 193,
          "src": "3193:8:0"
        },
        "value": null
      },
      {
        "ast_type": "InterfaceDef",
        "body": [
          {
            "args": {
              "args": [],
              "ast_type": "arguments",
              "col_offset": 4,
              "default": null,
              "defaults": [],
              "end_col_offset": 7,
              "end_lineno": 87,
              "lineno": 87,
              "node_id": 199,
              "src": "3277:3:0"
            },
            "ast_type": "FunctionDef",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 41,
                "end_col_offset": 45,
                "end_lineno": 87,
                "lineno": 87,
                "node_id": 200,
                "src": "3314:4:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 41,
                  "end_col_offset": 45,
                  "end_lineno": 87,
                  "id": "view",
                  "lineno": 87,
                  "node_id": 201,
                  "src": "3314:4:0"
                }
              }
            ],
            "col_offset": 4,
            "decorator_list": [],
            "doc_string": null,
            "end_col_offset": 45,
            "end_lineno": 87,
            "lineno": 87,
            "name": "getCurrentGradYear",
            "node_id": 198,
            "pos": null,
            "returns": {
              "ast_type": "Name",
              "col_offset": 32,
              "end_col_offset": 39,
              "end_lineno": 87,
              "id": "uint256",
              "lineno": 87,
              "node_id": 203,
              "src": "3305:7:0"
            },
            "src": "3277:41:0"
          },
          {
            "args": {
              "args": [
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 39,
                    "end_col_offset": 46,
                    "end_lineno": 88,
                    "id": "address",
                    "lineno": 88,
                    "node_id": 208,
                    "src": "3358:7:0"
                  },
                  "arg": "potentialUser",
                  "ast_type": "arg",
                  "col_offset": 24,
                  "end_col_offset": 46,
                  "end_lineno": 88,
                  "lineno": 88,
                  "node_id": 207,
                  "src": "3343:22:0"
                }
              ],
              "ast_type": "arguments",
              "col_offset": 24,
              "default": null,
              "defaults": [],
              "end_col_offset": 46,
              "end_lineno": 88,
              "lineno": 88,
              "node_id": 206,
              "src": "3343:22:0"
            },
            "ast_type": "FunctionDef",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 57,
                "end_col_offset": 61,
                "end_lineno": 88,
                "lineno": 88,
                "node_id": 210,
                "src": "3376:4:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 57,
                  "end_col_offset": 61,
                  "end_lineno": 88,
                  "id": "view",
                  "lineno": 88,
                  "node_id": 211,
                  "src": "3376:4:0"
                }
              }
            ],
            "col_offset": 4,
            "decorator_list": [],
            "doc_string": null,
            "end_col_offset": 61,
            "end_lineno": 88,
            "lineno": 88,
            "name": "getIsActiveUser",
            "node_id": 205,
            "pos": null,
            "returns": {
              "ast_type": "Name",
              "col_offset": 51,
              "end_col_offset": 55,
              "end_lineno": 88,
              "id": "bool",
              "lineno": 88,
              "node_id": 213,
              "src": "3370:4:0"
            },
            "src": "3323:57:0"
          },
          {
            "args": {
              "args": [
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 35,
                    "end_col_offset": 42,
                    "end_lineno": 89,
                    "id": "address",
                    "lineno": 89,
                    "node_id": 218,
                    "src": "3416:7:0"
                  },
                  "arg": "potentialAdmin",
                  "ast_type": "arg",
                  "col_offset": 19,
                  "end_col_offset": 42,
                  "end_lineno": 89,
                  "lineno": 89,
                  "node_id": 217,
                  "src": "3400:23:0"
                }
              ],
              "ast_type": "arguments",
              "col_offset": 19,
              "default": null,
              "defaults": [],
              "end_col_offset": 42,
              "end_lineno": 89,
              "lineno": 89,
              "node_id": 216,
              "src": "3400:23:0"
            },
            "ast_type": "FunctionDef",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 53,
                "end_col_offset": 57,
                "end_lineno": 89,
                "lineno": 89,
                "node_id": 220,
                "src": "3434:4:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 53,
                  "end_col_offset": 57,
                  "end_lineno": 89,
                  "id": "view",
                  "lineno": 89,
                  "node_id": 221,
                  "src": "3434:4:0"
                }
              }
            ],
            "col_offset": 4,
            "decorator_list": [],
            "doc_string": null,
            "end_col_offset": 57,
            "end_lineno": 89,
            "lineno": 89,
            "name": "getIsAdmin",
            "node_id": 215,
            "pos": null,
            "returns": {
              "ast_type": "Name",
              "col_offset": 47,
              "end_col_offset": 51,
              "end_lineno": 89,
              "id": "bool",
              "lineno": 89,
              "node_id": 223,
              "src": "3428:4:0"
            },
            "src": "3385:53:0"
          },
          {
            "args": {
              "args": [
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 49,
                    "end_col_offset": 56,
                    "end_lineno": 90,
                    "id": "address",
                    "lineno": 90,
                    "node_id": 228,
                    "src": "3488:7:0"
                  },
                  "arg": "_contractAddress",
                  "ast_type": "arg",
                  "col_offset": 31,
                  "end_col_offset": 56,
                  "end_lineno": 90,
                  "lineno": 90,
                  "node_id": 227,
                  "src": "3470:25:0"
                }
              ],
              "ast_type": "arguments",
              "col_offset": 31,
              "default": null,
              "defaults": [],
              "end_col_offset": 56,
              "end_lineno": 90,
              "lineno": 90,
              "node_id": 226,
              "src": "3470:25:0"
            },
            "ast_type": "FunctionDef",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 67,
                "end_col_offset": 71,
                "end_lineno": 90,
                "lineno": 90,
                "node_id": 230,
                "src": "3506:4:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 67,
                  "end_col_offset": 71,
                  "end_lineno": 90,
                  "id": "view",
                  "lineno": 90,
                  "node_id": 231,
                  "src": "3506:4:0"
                }
              }
            ],
            "col_offset": 4,
            "decorator_list": [],
            "doc_string": null,
            "end_col_offset": 71,
            "end_lineno": 90,
            "lineno": 90,
            "name": "getContractWhitelisted",
            "node_id": 225,
            "pos": null,
            "returns": {
              "ast_type": "Name",
              "col_offset": 61,
              "end_col_offset": 65,
              "end_lineno": 90,
              "id": "bool",
              "lineno": 90,
              "node_id": 233,
              "src": "3500:4:0"
            },
            "src": "3443:67:0"
          }
        ],
        "col_offset": 0,
        "end_col_offset": 71,
        "end_lineno": 90,
        "lineno": 86,
        "name": "ActiveUser",
        "node_id": 197,
        "src": "3251:259:0"
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 27,
          "end_col_offset": 37,
          "end_lineno": 91,
          "id": "ActiveUser",
          "lineno": 91,
          "node_id": 241,
          "src": "3538:10:0"
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 38,
        "end_lineno": 91,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 91,
        "node_id": 235,
        "src": "3511:38:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 18,
          "end_lineno": 91,
          "id": "activeUserContract",
          "lineno": 91,
          "node_id": 236,
          "src": "3511:18:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 22,
          "end_col_offset": 47,
          "end_lineno": 96,
          "lineno": 96,
          "node_id": 246,
          "slice": {
            "ast_type": "Index",
            "col_offset": 22,
            "end_col_offset": 47,
            "end_lineno": 96,
            "lineno": 96,
            "node_id": 256,
            "src": "3698:25:0",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 30,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 30,
                  "end_col_offset": 37,
                  "end_lineno": 96,
                  "id": "bytes32",
                  "lineno": 96,
                  "node_id": 250,
                  "src": "3706:7:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 39,
                  "end_col_offset": 46,
                  "end_lineno": 96,
                  "id": "uint256",
                  "lineno": 96,
                  "node_id": 252,
                  "src": "3715:7:0"
                }
              ],
              "end_col_offset": 46,
              "end_lineno": 96,
              "lineno": 96,
              "node_id": 249,
              "src": "3706:16:0"
            }
          },
          "src": "3698:25:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 22,
            "end_col_offset": 29,
            "end_lineno": 96,
            "id": "HashMap",
            "lineno": 96,
            "node_id": 247,
            "src": "3698:7:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 47,
        "end_lineno": 96,
        "is_constant": false,
        "is_immutable": false,
        "is_public": false,
        "lineno": 96,
        "node_id": 243,
        "src": "3676:47:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 20,
          "end_lineno": 96,
          "id": "uniqueHashesForToken",
          "lineno": 96,
          "node_id": 244,
          "src": "3676:20:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 11,
          "end_col_offset": 39,
          "end_lineno": 97,
          "lineno": 97,
          "node_id": 260,
          "slice": {
            "ast_type": "Index",
            "col_offset": 11,
            "end_col_offset": 39,
            "end_lineno": 97,
            "lineno": 97,
            "node_id": 274,
            "src": "3735:28:0",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 19,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 26,
                  "end_lineno": 97,
                  "id": "uint256",
                  "lineno": 97,
                  "node_id": 264,
                  "src": "3743:7:0"
                },
                {
                  "ast_type": "Subscript",
                  "col_offset": 28,
                  "end_col_offset": 38,
                  "end_lineno": 97,
                  "lineno": 97,
                  "node_id": 266,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 28,
                    "end_col_offset": 38,
                    "end_lineno": 97,
                    "lineno": 97,
                    "node_id": 271,
                    "src": "3752:10:0",
                    "value": {
                      "ast_type": "Int",
                      "col_offset": 35,
                      "end_col_offset": 37,
                      "end_lineno": 97,
                      "lineno": 97,
                      "node_id": 269,
                      "src": "3759:2:0",
                      "value": 64
                    }
                  },
                  "src": "3752:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 28,
                    "end_col_offset": 34,
                    "end_lineno": 97,
                    "id": "String",
                    "lineno": 97,
                    "node_id": 267,
                    "src": "3752:6:0"
                  }
                }
              ],
              "end_col_offset": 38,
              "end_lineno": 97,
              "lineno": 97,
              "node_id": 263,
              "src": "3743:19:0"
            }
          },
          "src": "3735:28:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 11,
            "end_col_offset": 18,
            "end_lineno": 97,
            "id": "HashMap",
            "lineno": 97,
            "node_id": 261,
            "src": "3735:7:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 39,
        "end_lineno": 97,
        "is_constant": false,
        "is_immutable": false,
        "is_public": false,
        "lineno": 97,
        "node_id": 257,
        "src": "3724:39:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 9,
          "end_lineno": 97,
          "id": "tokenURIs",
          "lineno": 97,
          "node_id": 258,
          "src": "3724:9:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 10,
          "end_col_offset": 17,
          "end_lineno": 98,
          "id": "uint256",
          "lineno": 98,
          "node_id": 278,
          "src": "3774:7:0"
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 17,
        "end_lineno": 98,
        "is_constant": false,
        "is_immutable": false,
        "is_public": false,
        "lineno": 98,
        "node_id": 275,
        "src": "3764:17:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 8,
          "end_lineno": 98,
          "id": "password",
          "lineno": 98,
          "node_id": 276,
          "src": "3764:8:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 19,
          "end_col_offset": 26,
          "end_lineno": 102,
          "id": "uint256",
          "lineno": 102,
          "node_id": 286,
          "src": "3823:7:0"
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 27,
        "end_lineno": 102,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 102,
        "node_id": 280,
        "src": "3804:27:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 10,
          "end_lineno": 102,
          "id": "tokenCount",
          "lineno": 102,
          "node_id": 281,
          "src": "3804:10:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 13,
          "end_col_offset": 23,
          "end_lineno": 105,
          "lineno": 105,
          "node_id": 294,
          "slice": {
            "ast_type": "Index",
            "col_offset": 13,
            "end_col_offset": 23,
            "end_lineno": 105,
            "lineno": 105,
            "node_id": 299,
            "src": "3864:10:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 20,
              "end_col_offset": 22,
              "end_lineno": 105,
              "lineno": 105,
              "node_id": 297,
              "src": "3871:2:0",
              "value": 64
            }
          },
          "src": "3864:10:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 13,
            "end_col_offset": 19,
            "end_lineno": 105,
            "id": "String",
            "lineno": 105,
            "node_id": 295,
            "src": "3864:6:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 24,
        "end_lineno": 105,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 105,
        "node_id": 288,
        "src": "3851:24:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 4,
          "end_lineno": 105,
          "id": "name",
          "lineno": 105,
          "node_id": 289,
          "src": "3851:4:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 15,
          "end_col_offset": 25,
          "end_lineno": 106,
          "lineno": 106,
          "node_id": 306,
          "slice": {
            "ast_type": "Index",
            "col_offset": 15,
            "end_col_offset": 25,
            "end_lineno": 106,
            "lineno": 106,
            "node_id": 311,
            "src": "3891:10:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 22,
              "end_col_offset": 24,
              "end_lineno": 106,
              "lineno": 106,
              "node_id": 309,
              "src": "3898:2:0",
              "value": 32
            }
          },
          "src": "3891:10:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 15,
            "end_col_offset": 21,
            "end_lineno": 106,
            "id": "String",
            "lineno": 106,
            "node_id": 307,
            "src": "3891:6:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 26,
        "end_lineno": 106,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 106,
        "node_id": 300,
        "src": "3876:26:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 6,
          "end_lineno": 106,
          "id": "symbol",
          "lineno": 106,
          "node_id": 301,
          "src": "3876:6:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 9,
          "end_col_offset": 19,
          "end_lineno": 107,
          "lineno": 107,
          "node_id": 315,
          "slice": {
            "ast_type": "Index",
            "col_offset": 9,
            "end_col_offset": 19,
            "end_lineno": 107,
            "lineno": 107,
            "node_id": 320,
            "src": "3912:10:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 16,
              "end_col_offset": 18,
              "end_lineno": 107,
              "lineno": 107,
              "node_id": 318,
              "src": "3919:2:0",
              "value": 32
            }
          },
          "src": "3912:10:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 9,
            "end_col_offset": 15,
            "end_lineno": 107,
            "id": "String",
            "lineno": 107,
            "node_id": 316,
            "src": "3912:6:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 19,
        "end_lineno": 107,
        "is_constant": false,
        "is_immutable": false,
        "is_public": false,
        "lineno": 107,
        "node_id": 312,
        "src": "3903:19:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 7,
          "end_lineno": 107,
          "id": "baseURI",
          "lineno": 107,
          "node_id": 313,
          "src": "3903:7:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 14,
          "end_col_offset": 24,
          "end_lineno": 108,
          "lineno": 108,
          "node_id": 324,
          "slice": {
            "ast_type": "Index",
            "col_offset": 14,
            "end_col_offset": 24,
            "end_lineno": 108,
            "lineno": 108,
            "node_id": 329,
            "src": "3937:10:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 21,
              "end_col_offset": 23,
              "end_lineno": 108,
              "lineno": 108,
              "node_id": 327,
              "src": "3944:2:0",
              "value": 66
            }
          },
          "src": "3937:10:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 14,
            "end_col_offset": 20,
            "end_lineno": 108,
            "id": "String",
            "lineno": 108,
            "node_id": 325,
            "src": "3937:6:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 24,
        "end_lineno": 108,
        "is_constant": false,
        "is_immutable": false,
        "is_public": false,
        "lineno": 108,
        "node_id": 321,
        "src": "3923:24:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 12,
          "end_lineno": 108,
          "id": "contract_uri",
          "lineno": 108,
          "node_id": 322,
          "src": "3923:12:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 31,
          "end_col_offset": 40,
          "end_lineno": 113,
          "lineno": 113,
          "node_id": 336,
          "slice": {
            "ast_type": "Index",
            "col_offset": 31,
            "end_col_offset": 40,
            "end_lineno": 113,
            "lineno": 113,
            "node_id": 341,
            "src": "4035:9:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 38,
              "end_col_offset": 39,
              "end_lineno": 113,
              "lineno": 113,
              "node_id": 339,
              "src": "4042:1:0",
              "value": 5
            }
          },
          "src": "4035:9:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 31,
            "end_col_offset": 37,
            "end_lineno": 113,
            "id": "bytes4",
            "lineno": 113,
            "node_id": 337,
            "src": "4035:6:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 1,
        "end_lineno": 119,
        "is_constant": true,
        "is_immutable": false,
        "is_public": false,
        "lineno": 113,
        "node_id": 330,
        "src": "4004:208:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 20,
          "end_lineno": 113,
          "id": "SUPPORTED_INTERFACES",
          "lineno": 113,
          "node_id": 331,
          "src": "4004:20:0"
        },
        "value": {
          "ast_type": "List",
          "col_offset": 44,
          "elements": [
            {
              "ast_type": "Hex",
              "col_offset": 4,
              "end_col_offset": 14,
              "end_lineno": 114,
              "lineno": 114,
              "node_id": 343,
              "src": "4054:10:0",
              "value": "0x01FFC9A7"
            },
            {
              "ast_type": "Hex",
              "col_offset": 4,
              "end_col_offset": 14,
              "end_lineno": 115,
              "lineno": 115,
              "node_id": 344,
              "src": "4080:10:0",
              "value": "0x80AC58CD"
            },
            {
              "ast_type": "Hex",
              "col_offset": 4,
              "end_col_offset": 14,
              "end_lineno": 116,
              "lineno": 116,
              "node_id": 345,
              "src": "4106:10:0",
              "value": "0x150B7A02"
            },
            {
              "ast_type": "Hex",
              "col_offset": 4,
              "end_col_offset": 14,
              "end_lineno": 117,
              "lineno": 117,
              "node_id": 346,
              "src": "4145:10:0",
              "value": "0x780E9D63"
            },
            {
              "ast_type": "Hex",
              "col_offset": 4,
              "end_col_offset": 14,
              "end_lineno": 118,
              "lineno": 118,
              "node_id": 347,
              "src": "4181:10:0",
              "value": "0x5B5E139F"
            }
          ],
          "end_col_offset": 1,
          "end_lineno": 119,
          "lineno": 113,
          "node_id": 342,
          "src": "4048:164:0"
        }
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 32,
                "end_col_offset": 39,
                "end_lineno": 128,
                "id": "address",
                "lineno": 128,
                "node_id": 352,
                "src": "4653:7:0"
              },
              "arg": "activeUserAddress",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 39,
              "end_lineno": 128,
              "lineno": 128,
              "node_id": 351,
              "src": "4634:26:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 52,
                "end_col_offset": 59,
                "end_lineno": 128,
                "id": "uint256",
                "lineno": 128,
                "node_id": 355,
                "src": "4673:7:0"
              },
              "arg": "_password",
              "ast_type": "arg",
              "col_offset": 41,
              "end_col_offset": 59,
              "end_lineno": 128,
              "lineno": 128,
              "node_id": 354,
              "src": "4662:18:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 59,
          "end_lineno": 128,
          "lineno": 128,
          "node_id": 350,
          "src": "4634:46:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 41,
            "end_lineno": 132,
            "lineno": 132,
            "node_id": 359,
            "src": "4774:37:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "name",
              "col_offset": 4,
              "end_col_offset": 13,
              "end_lineno": 132,
              "lineno": 132,
              "node_id": 360,
              "src": "4774:9:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 132,
                "id": "self",
                "lineno": 132,
                "node_id": 361,
                "src": "4774:4:0"
              }
            },
            "value": {
              "ast_type": "Str",
              "col_offset": 16,
              "end_col_offset": 41,
              "end_lineno": 132,
              "lineno": 132,
              "node_id": 364,
              "src": "4786:25:0",
              "value": "Not-So-Fungible Wolvies"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 24,
            "end_lineno": 133,
            "lineno": 133,
            "node_id": 365,
            "src": "4816:20:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "symbol",
              "col_offset": 4,
              "end_col_offset": 15,
              "end_lineno": 133,
              "lineno": 133,
              "node_id": 366,
              "src": "4816:11:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 133,
                "id": "self",
                "lineno": 133,
                "node_id": 367,
                "src": "4816:4:0"
              }
            },
            "value": {
              "ast_type": "Str",
              "col_offset": 18,
              "end_col_offset": 24,
              "end_lineno": 133,
              "lineno": 133,
              "node_id": 370,
              "src": "4830:6:0",
              "value": "NSFW"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 28,
            "end_lineno": 134,
            "lineno": 134,
            "node_id": 371,
            "src": "4841:24:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "minter",
              "col_offset": 4,
              "end_col_offset": 15,
              "end_lineno": 134,
              "lineno": 134,
              "node_id": 372,
              "src": "4841:11:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 134,
                "id": "self",
                "lineno": 134,
                "node_id": 373,
                "src": "4841:4:0"
              }
            },
            "value": {
              "ast_type": "Attribute",
              "attr": "sender",
              "col_offset": 18,
              "end_col_offset": 28,
              "end_lineno": 134,
              "lineno": 134,
              "node_id": 376,
              "src": "4855:10:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 18,
                "end_col_offset": 21,
                "end_lineno": 134,
                "id": "msg",
                "lineno": 134,
                "node_id": 377,
                "src": "4855:3:0"
              }
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 21,
            "end_lineno": 135,
            "lineno": 135,
            "node_id": 380,
            "src": "4870:17:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "baseURI",
              "col_offset": 4,
              "end_col_offset": 16,
              "end_lineno": 135,
              "lineno": 135,
              "node_id": 381,
              "src": "4870:12:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 135,
                "id": "self",
                "lineno": 135,
                "node_id": 382,
                "src": "4870:4:0"
              }
            },
            "value": {
              "ast_type": "Str",
              "col_offset": 19,
              "end_col_offset": 21,
              "end_lineno": 135,
              "lineno": 135,
              "node_id": 385,
              "src": "4885:2:0",
              "value": ""
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 23,
            "end_lineno": 136,
            "lineno": 136,
            "node_id": 386,
            "src": "4892:19:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "tokenCount",
              "col_offset": 4,
              "end_col_offset": 19,
              "end_lineno": 136,
              "lineno": 136,
              "node_id": 387,
              "src": "4892:15:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 136,
                "id": "self",
                "lineno": 136,
                "node_id": 388,
                "src": "4892:4:0"
              }
            },
            "value": {
              "ast_type": "Int",
              "col_offset": 22,
              "end_col_offset": 23,
              "end_lineno": 136,
              "lineno": 136,
              "node_id": 391,
              "src": "4910:1:0",
              "value": 0
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 137,
            "lineno": 137,
            "node_id": 392,
            "src": "4916:25:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "password",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 137,
              "lineno": 137,
              "node_id": 393,
              "src": "4916:13:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 137,
                "id": "self",
                "lineno": 137,
                "node_id": 394,
                "src": "4916:4:0"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 20,
              "end_col_offset": 29,
              "end_lineno": 137,
              "id": "_password",
              "lineno": 137,
              "node_id": 397,
              "src": "4932:9:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 59,
            "end_lineno": 138,
            "lineno": 138,
            "node_id": 399,
            "src": "4946:55:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "activeUserContract",
              "col_offset": 4,
              "end_col_offset": 27,
              "end_lineno": 138,
              "lineno": 138,
              "node_id": 400,
              "src": "4946:23:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 138,
                "id": "self",
                "lineno": 138,
                "node_id": 401,
                "src": "4946:4:0"
              }
            },
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 41,
                  "end_col_offset": 58,
                  "end_lineno": 138,
                  "id": "activeUserAddress",
                  "lineno": 138,
                  "node_id": 407,
                  "src": "4983:17:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 30,
              "end_col_offset": 59,
              "end_lineno": 138,
              "func": {
                "ast_type": "Name",
                "col_offset": 30,
                "end_col_offset": 40,
                "end_lineno": 138,
                "id": "ActiveUser",
                "lineno": 138,
                "node_id": 405,
                "src": "4972:10:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 138,
              "node_id": 404,
              "src": "4972:29:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 127,
            "id": "external",
            "lineno": 127,
            "node_id": 409,
            "src": "4612:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 131,
          "lineno": 129,
          "node_id": 411,
          "src": "4727:42:0",
          "value": "\n    @dev Contract constructor.\n    "
        },
        "end_col_offset": 59,
        "end_lineno": 138,
        "lineno": 128,
        "name": "__init__",
        "node_id": 349,
        "pos": null,
        "returns": null,
        "src": "4621:380:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 36,
                "end_col_offset": 42,
                "end_lineno": 143,
                "id": "bytes4",
                "lineno": 143,
                "node_id": 415,
                "src": "5056:6:0"
              },
              "arg": "interface_id",
              "ast_type": "arg",
              "col_offset": 22,
              "end_col_offset": 42,
              "end_lineno": 143,
              "lineno": 143,
              "node_id": 414,
              "src": "5042:20:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 22,
          "default": null,
          "defaults": [],
          "end_col_offset": 42,
          "end_lineno": 143,
          "lineno": 143,
          "node_id": 413,
          "src": "5042:20:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 47,
            "end_lineno": 151,
            "lineno": 151,
            "node_id": 419,
            "src": "5305:43:0",
            "value": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 47,
              "end_lineno": 151,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 23,
                "end_lineno": 151,
                "id": "interface_id",
                "lineno": 151,
                "node_id": 421,
                "src": "5312:12:0"
              },
              "lineno": 151,
              "node_id": 420,
              "op": {
                "ast_type": "In",
                "col_offset": 11,
                "end_col_offset": 47,
                "end_lineno": 151,
                "lineno": 151,
                "node_id": 423,
                "src": "5312:36:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 27,
                "end_col_offset": 47,
                "end_lineno": 151,
                "id": "SUPPORTED_INTERFACES",
                "lineno": 151,
                "node_id": 424,
                "src": "5328:20:0"
              },
              "src": "5312:36:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 141,
            "id": "pure",
            "lineno": 141,
            "node_id": 426,
            "src": "5005:4:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 142,
            "id": "external",
            "lineno": 142,
            "node_id": 428,
            "src": "5011:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 149,
          "lineno": 144,
          "node_id": 432,
          "src": "5077:222:0",
          "value": "\n    @notice Query if a contract implements an interface.\n    @dev Interface identification is specified in ERC-165.\n    @param interface_id Bytes4 representing the interface.\n    @return bool True if supported.\n    "
        },
        "end_col_offset": 47,
        "end_lineno": 151,
        "lineno": 143,
        "name": "supportsInterface",
        "node_id": 412,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 47,
          "end_col_offset": 51,
          "end_lineno": 143,
          "id": "bool",
          "lineno": 143,
          "node_id": 430,
          "src": "5067:4:0"
        },
        "src": "5020:328:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 87,
                "end_col_offset": 94,
                "end_lineno": 155,
                "id": "address",
                "lineno": 155,
                "node_id": 436,
                "src": "5448:7:0"
              },
              "arg": "_auctionAddress",
              "ast_type": "arg",
              "col_offset": 70,
              "end_col_offset": 94,
              "end_lineno": 155,
              "lineno": 155,
              "node_id": 435,
              "src": "5431:24:0"
            },
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 115,
                "end_col_offset": 125,
                "end_lineno": 155,
                "lineno": 155,
                "node_id": 439,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 115,
                  "end_col_offset": 125,
                  "end_lineno": 155,
                  "lineno": 155,
                  "node_id": 444,
                  "src": "5476:10:0",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 122,
                    "end_col_offset": 124,
                    "end_lineno": 155,
                    "lineno": 155,
                    "node_id": 442,
                    "src": "5483:2:0",
                    "value": 64
                  }
                },
                "src": "5476:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 115,
                  "end_col_offset": 121,
                  "end_lineno": 155,
                  "id": "String",
                  "lineno": 155,
                  "node_id": 440,
                  "src": "5476:6:0"
                }
              },
              "arg": "_tokenMetaDataUri",
              "ast_type": "arg",
              "col_offset": 96,
              "end_col_offset": 125,
              "end_lineno": 155,
              "lineno": 155,
              "node_id": 438,
              "src": "5457:29:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 138,
                "end_col_offset": 145,
                "end_lineno": 155,
                "id": "uint256",
                "lineno": 155,
                "node_id": 446,
                "src": "5499:7:0"
              },
              "arg": "_password",
              "ast_type": "arg",
              "col_offset": 127,
              "end_col_offset": 145,
              "end_lineno": 155,
              "lineno": 155,
              "node_id": 445,
              "src": "5488:18:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 70,
          "default": null,
          "defaults": [],
          "end_col_offset": 145,
          "end_lineno": 155,
          "lineno": 155,
          "node_id": 434,
          "src": "5431:75:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 37,
            "end_lineno": 157,
            "lineno": 157,
            "msg": null,
            "node_id": 448,
            "src": "5525:33:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 37,
              "end_lineno": 157,
              "left": {
                "ast_type": "Attribute",
                "attr": "password",
                "col_offset": 11,
                "end_col_offset": 24,
                "end_lineno": 157,
                "lineno": 157,
                "node_id": 450,
                "src": "5532:13:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 157,
                  "id": "self",
                  "lineno": 157,
                  "node_id": 451,
                  "src": "5532:4:0"
                }
              },
              "lineno": 157,
              "node_id": 449,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 37,
                "end_lineno": 157,
                "lineno": 157,
                "node_id": 1838,
                "src": "5532:26:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 28,
                "end_col_offset": 37,
                "end_lineno": 157,
                "id": "_password",
                "lineno": 157,
                "node_id": 455,
                "src": "5549:9:0"
              },
              "src": "5532:26:0"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 16,
              "end_col_offset": 23,
              "end_lineno": 160,
              "id": "bytes32",
              "lineno": 160,
              "node_id": 460,
              "src": "5631:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 67,
            "end_lineno": 160,
            "lineno": 160,
            "node_id": 457,
            "simple": 1,
            "src": "5619:63:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 14,
              "end_lineno": 160,
              "id": "uniqueHash",
              "lineno": 160,
              "node_id": 458,
              "src": "5619:10:0"
            },
            "value": {
              "args": [
                {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 48,
                      "end_col_offset": 65,
                      "end_lineno": 160,
                      "id": "_tokenMetaDataUri",
                      "lineno": 160,
                      "node_id": 468,
                      "src": "5663:17:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 36,
                  "end_col_offset": 66,
                  "end_lineno": 160,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 36,
                    "end_col_offset": 47,
                    "end_lineno": 160,
                    "id": "_abi_encode",
                    "lineno": 160,
                    "node_id": 466,
                    "src": "5651:11:0"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 160,
                  "node_id": 465,
                  "src": "5651:30:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 26,
              "end_col_offset": 67,
              "end_lineno": 160,
              "func": {
                "ast_type": "Name",
                "col_offset": 26,
                "end_col_offset": 35,
                "end_lineno": 160,
                "id": "keccak256",
                "lineno": 160,
                "node_id": 463,
                "src": "5641:9:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 160,
              "node_id": 462,
              "src": "5641:41:0"
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 76,
            "end_lineno": 161,
            "lineno": 161,
            "msg": {
              "ast_type": "Str",
              "col_offset": 55,
              "end_col_offset": 76,
              "end_lineno": 161,
              "lineno": 161,
              "node_id": 483,
              "src": "5738:21:0",
              "value": "token is non-unique"
            },
            "node_id": 470,
            "src": "5687:72:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 53,
              "end_lineno": 161,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 48,
                "end_lineno": 161,
                "lineno": 161,
                "node_id": 472,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 11,
                  "end_col_offset": 48,
                  "end_lineno": 161,
                  "lineno": 161,
                  "node_id": 480,
                  "src": "5694:37:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 37,
                    "end_col_offset": 47,
                    "end_lineno": 161,
                    "id": "uniqueHash",
                    "lineno": 161,
                    "node_id": 477,
                    "src": "5720:10:0"
                  }
                },
                "src": "5694:37:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "uniqueHashesForToken",
                  "col_offset": 11,
                  "end_col_offset": 36,
                  "end_lineno": 161,
                  "lineno": 161,
                  "node_id": 473,
                  "src": "5694:25:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 11,
                    "end_col_offset": 15,
                    "end_lineno": 161,
                    "id": "self",
                    "lineno": 161,
                    "node_id": 474,
                    "src": "5694:4:0"
                  }
                }
              },
              "lineno": 161,
              "node_id": 471,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 53,
                "end_lineno": 161,
                "lineno": 161,
                "node_id": 1838,
                "src": "5694:42:0"
              },
              "right": {
                "ast_type": "Int",
                "col_offset": 52,
                "end_col_offset": 53,
                "end_lineno": 161,
                "lineno": 161,
                "node_id": 482,
                "src": "5735:1:0",
                "value": 0
              },
              "src": "5694:42:0"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 54,
            "end_lineno": 163,
            "lineno": 163,
            "node_id": 484,
            "src": "5765:50:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 36,
                  "end_lineno": 163,
                  "id": "_auctionAddress",
                  "lineno": 163,
                  "node_id": 490,
                  "src": "5782:15:0"
                },
                {
                  "ast_type": "Attribute",
                  "attr": "tokenCount",
                  "col_offset": 38,
                  "end_col_offset": 53,
                  "end_lineno": 163,
                  "lineno": 163,
                  "node_id": 492,
                  "src": "5799:15:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 38,
                    "end_col_offset": 42,
                    "end_lineno": 163,
                    "id": "self",
                    "lineno": 163,
                    "node_id": 493,
                    "src": "5799:4:0"
                  }
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 54,
              "end_lineno": 163,
              "func": {
                "ast_type": "Attribute",
                "attr": "_addTokenTo",
                "col_offset": 4,
                "end_col_offset": 20,
                "end_lineno": 163,
                "lineno": 163,
                "node_id": 486,
                "src": "5765:16:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 163,
                  "id": "self",
                  "lineno": 163,
                  "node_id": 487,
                  "src": "5765:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 163,
              "node_id": 485,
              "src": "5765:50:0"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 57,
            "end_lineno": 164,
            "lineno": 164,
            "node_id": 496,
            "src": "5820:53:0",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "tokenCount",
                  "col_offset": 22,
                  "end_col_offset": 37,
                  "end_lineno": 164,
                  "lineno": 164,
                  "node_id": 502,
                  "src": "5838:15:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 22,
                    "end_col_offset": 26,
                    "end_lineno": 164,
                    "id": "self",
                    "lineno": 164,
                    "node_id": 503,
                    "src": "5838:4:0"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 39,
                  "end_col_offset": 56,
                  "end_lineno": 164,
                  "id": "_tokenMetaDataUri",
                  "lineno": 164,
                  "node_id": 506,
                  "src": "5855:17:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 57,
              "end_lineno": 164,
              "func": {
                "ast_type": "Attribute",
                "attr": "_addTokenURI",
                "col_offset": 4,
                "end_col_offset": 21,
                "end_lineno": 164,
                "lineno": 164,
                "node_id": 498,
                "src": "5820:17:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 164,
                  "id": "self",
                  "lineno": 164,
                  "node_id": 499,
                  "src": "5820:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 164,
              "node_id": 497,
              "src": "5820:53:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 66,
            "end_lineno": 165,
            "lineno": 165,
            "node_id": 509,
            "src": "5878:62:0",
            "value": {
              "args": [
                {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 23,
                      "end_col_offset": 30,
                      "end_lineno": 165,
                      "id": "address",
                      "lineno": 165,
                      "node_id": 516,
                      "src": "5897:7:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 17,
                  "end_col_offset": 31,
                  "end_lineno": 165,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 17,
                    "end_col_offset": 22,
                    "end_lineno": 165,
                    "id": "empty",
                    "lineno": 165,
                    "node_id": 514,
                    "src": "5891:5:0"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 165,
                  "node_id": 513,
                  "src": "5891:14:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 33,
                  "end_col_offset": 48,
                  "end_lineno": 165,
                  "id": "_auctionAddress",
                  "lineno": 165,
                  "node_id": 518,
                  "src": "5907:15:0"
                },
                {
                  "ast_type": "Attribute",
                  "attr": "tokenCount",
                  "col_offset": 50,
                  "end_col_offset": 65,
                  "end_lineno": 165,
                  "lineno": 165,
                  "node_id": 520,
                  "src": "5924:15:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 50,
                    "end_col_offset": 54,
                    "end_lineno": 165,
                    "id": "self",
                    "lineno": 165,
                    "node_id": 521,
                    "src": "5924:4:0"
                  }
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 66,
              "end_lineno": 165,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 165,
                "id": "Transfer",
                "lineno": 165,
                "node_id": 511,
                "src": "5882:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 165,
              "node_id": 510,
              "src": "5882:58:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 24,
            "end_lineno": 166,
            "lineno": 166,
            "node_id": 524,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 24,
              "end_lineno": 166,
              "lineno": 166,
              "node_id": 1592,
              "src": "5945:20:0"
            },
            "src": "5945:20:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "tokenCount",
              "col_offset": 4,
              "end_col_offset": 19,
              "end_lineno": 166,
              "lineno": 166,
              "node_id": 525,
              "src": "5945:15:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 166,
                "id": "self",
                "lineno": 166,
                "node_id": 526,
                "src": "5945:4:0"
              }
            },
            "value": {
              "ast_type": "Int",
              "col_offset": 23,
              "end_col_offset": 24,
              "end_lineno": 166,
              "lineno": 166,
              "node_id": 530,
              "src": "5964:1:0",
              "value": 1
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 26,
            "end_lineno": 167,
            "lineno": 167,
            "node_id": 531,
            "src": "5970:22:0",
            "value": {
              "ast_type": "Attribute",
              "attr": "tokenCount",
              "col_offset": 11,
              "end_col_offset": 26,
              "end_lineno": 167,
              "lineno": 167,
              "node_id": 532,
              "src": "5977:15:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 15,
                "end_lineno": 167,
                "id": "self",
                "lineno": 167,
                "node_id": 533,
                "src": "5977:4:0"
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 154,
            "id": "external",
            "lineno": 154,
            "node_id": 536,
            "src": "5352:8:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 26,
        "end_lineno": 167,
        "lineno": 155,
        "name": "safeMintToThisContractWithApprovalToExternalContractUsingPassword",
        "node_id": 433,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 150,
          "end_col_offset": 157,
          "end_lineno": 155,
          "id": "uint256",
          "lineno": 155,
          "node_id": 538,
          "src": "5511:7:0"
        },
        "src": "5361:631:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 22,
                "end_col_offset": 29,
                "end_lineno": 173,
                "id": "address",
                "lineno": 173,
                "node_id": 543,
                "src": "6056:7:0"
              },
              "arg": "_owner",
              "ast_type": "arg",
              "col_offset": 14,
              "end_col_offset": 29,
              "end_lineno": 173,
              "lineno": 173,
              "node_id": 542,
              "src": "6048:15:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 14,
          "default": null,
          "defaults": [],
          "end_col_offset": 29,
          "end_lineno": 173,
          "lineno": 173,
          "node_id": 541,
          "src": "6048:15:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 35,
            "end_lineno": 179,
            "lineno": 179,
            "msg": null,
            "node_id": 547,
            "src": "6316:31:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 35,
              "end_lineno": 179,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 17,
                "end_lineno": 179,
                "id": "_owner",
                "lineno": 179,
                "node_id": 549,
                "src": "6323:6:0"
              },
              "lineno": 179,
              "node_id": 548,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 35,
                "end_lineno": 179,
                "lineno": 179,
                "node_id": 1906,
                "src": "6323:24:0"
              },
              "right": {
                "args": [
                  {
                    "ast_type": "Name",
                    "col_offset": 27,
                    "end_col_offset": 34,
                    "end_lineno": 179,
                    "id": "address",
                    "lineno": 179,
                    "node_id": 555,
                    "src": "6339:7:0"
                  }
                ],
                "ast_type": "Call",
                "col_offset": 21,
                "end_col_offset": 35,
                "end_lineno": 179,
                "func": {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 26,
                  "end_lineno": 179,
                  "id": "empty",
                  "lineno": 179,
                  "node_id": 553,
                  "src": "6333:5:0"
                },
                "keyword": null,
                "keywords": [],
                "lineno": 179,
                "node_id": 552,
                "src": "6333:14:0"
              },
              "src": "6323:24:0"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 43,
            "end_lineno": 180,
            "lineno": 180,
            "node_id": 557,
            "src": "6352:39:0",
            "value": {
              "ast_type": "Subscript",
              "col_offset": 11,
              "end_col_offset": 43,
              "end_lineno": 180,
              "lineno": 180,
              "node_id": 558,
              "slice": {
                "ast_type": "Index",
                "col_offset": 11,
                "end_col_offset": 43,
                "end_lineno": 180,
                "lineno": 180,
                "node_id": 566,
                "src": "6359:32:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 36,
                  "end_col_offset": 42,
                  "end_lineno": 180,
                  "id": "_owner",
                  "lineno": 180,
                  "node_id": 563,
                  "src": "6384:6:0"
                }
              },
              "src": "6359:32:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "ownerToNFTokenCount",
                "col_offset": 11,
                "end_col_offset": 35,
                "end_lineno": 180,
                "lineno": 180,
                "node_id": 559,
                "src": "6359:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 180,
                  "id": "self",
                  "lineno": 180,
                  "node_id": 560,
                  "src": "6359:4:0"
                }
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 171,
            "id": "view",
            "lineno": 171,
            "node_id": 567,
            "src": "6019:4:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 172,
            "id": "external",
            "lineno": 172,
            "node_id": 569,
            "src": "6025:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 178,
          "lineno": 174,
          "node_id": 573,
          "src": "6081:230:0",
          "value": "\n    @dev Returns the number of NFTs owned by `_owner`.\n         Throws if `_owner` is the zero address. NFTs assigned to the zero address are considered invalid.\n    @param _owner Address for whom to query the balance.\n    "
        },
        "end_col_offset": 43,
        "end_lineno": 180,
        "lineno": 173,
        "name": "balanceOf",
        "node_id": 540,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 34,
          "end_col_offset": 41,
          "end_lineno": 173,
          "id": "uint256",
          "lineno": 173,
          "node_id": 571,
          "src": "6068:7:0"
        },
        "src": "6034:357:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 22,
                "end_col_offset": 29,
                "end_lineno": 185,
                "id": "uint256",
                "lineno": 185,
                "node_id": 577,
                "src": "6432:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 12,
              "end_col_offset": 29,
              "end_lineno": 185,
              "lineno": 185,
              "node_id": 576,
              "src": "6422:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 12,
          "default": null,
          "defaults": [],
          "end_col_offset": 29,
          "end_lineno": 185,
          "lineno": 185,
          "node_id": 575,
          "src": "6422:17:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 191,
              "id": "address",
              "lineno": 191,
              "node_id": 584,
              "src": "6631:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 191,
            "lineno": 191,
            "node_id": 581,
            "simple": 1,
            "src": "6624:41:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 191,
              "id": "owner",
              "lineno": 191,
              "node_id": 582,
              "src": "6624:5:0"
            },
            "value": {
              "ast_type": "Subscript",
              "col_offset": 21,
              "end_col_offset": 45,
              "end_lineno": 191,
              "lineno": 191,
              "node_id": 586,
              "slice": {
                "ast_type": "Index",
                "col_offset": 21,
                "end_col_offset": 45,
                "end_lineno": 191,
                "lineno": 191,
                "node_id": 594,
                "src": "6641:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 36,
                  "end_col_offset": 44,
                  "end_lineno": 191,
                  "id": "_tokenId",
                  "lineno": 191,
                  "node_id": 591,
                  "src": "6656:8:0"
                }
              },
              "src": "6641:24:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "idToOwner",
                "col_offset": 21,
                "end_col_offset": 35,
                "end_lineno": 191,
                "lineno": 191,
                "node_id": 587,
                "src": "6641:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 25,
                  "end_lineno": 191,
                  "id": "self",
                  "lineno": 191,
                  "node_id": 588,
                  "src": "6641:4:0"
                }
              }
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 193,
            "lineno": 193,
            "msg": null,
            "node_id": 595,
            "src": "6716:30:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 34,
              "end_lineno": 193,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 16,
                "end_lineno": 193,
                "id": "owner",
                "lineno": 193,
                "node_id": 597,
                "src": "6723:5:0"
              },
              "lineno": 193,
              "node_id": 596,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 34,
                "end_lineno": 193,
                "lineno": 193,
                "node_id": 1906,
                "src": "6723:23:0"
              },
              "right": {
                "args": [
                  {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 33,
                    "end_lineno": 193,
                    "id": "address",
                    "lineno": 193,
                    "node_id": 603,
                    "src": "6738:7:0"
                  }
                ],
                "ast_type": "Call",
                "col_offset": 20,
                "end_col_offset": 34,
                "end_lineno": 193,
                "func": {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 25,
                  "end_lineno": 193,
                  "id": "empty",
                  "lineno": 193,
                  "node_id": 601,
                  "src": "6732:5:0"
                },
                "keyword": null,
                "keywords": [],
                "lineno": 193,
                "node_id": 600,
                "src": "6732:14:0"
              },
              "src": "6723:23:0"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 16,
            "end_lineno": 194,
            "lineno": 194,
            "node_id": 605,
            "src": "6751:12:0",
            "value": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 16,
              "end_lineno": 194,
              "id": "owner",
              "lineno": 194,
              "node_id": 606,
              "src": "6758:5:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 183,
            "id": "view",
            "lineno": 183,
            "node_id": 608,
            "src": "6395:4:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 184,
            "id": "external",
            "lineno": 184,
            "node_id": 610,
            "src": "6401:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 190,
          "lineno": 186,
          "node_id": 614,
          "src": "6457:162:0",
          "value": "\n    @dev Returns the address of the owner of the NFT.\n         Throws if `_tokenId` is not a valid NFT.\n    @param _tokenId The identifier for an NFT.\n    "
        },
        "end_col_offset": 16,
        "end_lineno": 194,
        "lineno": 185,
        "name": "ownerOf",
        "node_id": 574,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 34,
          "end_col_offset": 41,
          "end_lineno": 185,
          "id": "address",
          "lineno": 185,
          "node_id": 612,
          "src": "6444:7:0"
        },
        "src": "6410:353:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 26,
                "end_col_offset": 33,
                "end_lineno": 199,
                "id": "uint256",
                "lineno": 199,
                "node_id": 618,
                "src": "6808:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 16,
              "end_col_offset": 33,
              "end_lineno": 199,
              "lineno": 199,
              "node_id": 617,
              "src": "6798:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 16,
          "default": null,
          "defaults": [],
          "end_col_offset": 33,
          "end_lineno": 199,
          "lineno": 199,
          "node_id": 616,
          "src": "6798:17:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 53,
            "end_lineno": 206,
            "lineno": 206,
            "msg": null,
            "node_id": 622,
            "src": "7057:49:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 53,
              "end_lineno": 206,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 35,
                "end_lineno": 206,
                "lineno": 206,
                "node_id": 624,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 11,
                  "end_col_offset": 35,
                  "end_lineno": 206,
                  "lineno": 206,
                  "node_id": 632,
                  "src": "7064:24:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 34,
                    "end_lineno": 206,
                    "id": "_tokenId",
                    "lineno": 206,
                    "node_id": 629,
                    "src": "7079:8:0"
                  }
                },
                "src": "7064:24:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "idToOwner",
                  "col_offset": 11,
                  "end_col_offset": 25,
                  "end_lineno": 206,
                  "lineno": 206,
                  "node_id": 625,
                  "src": "7064:14:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 11,
                    "end_col_offset": 15,
                    "end_lineno": 206,
                    "id": "self",
                    "lineno": 206,
                    "node_id": 626,
                    "src": "7064:4:0"
                  }
                }
              },
              "lineno": 206,
              "node_id": 623,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 53,
                "end_lineno": 206,
                "lineno": 206,
                "node_id": 1906,
                "src": "7064:42:0"
              },
              "right": {
                "args": [
                  {
                    "ast_type": "Name",
                    "col_offset": 45,
                    "end_col_offset": 52,
                    "end_lineno": 206,
                    "id": "address",
                    "lineno": 206,
                    "node_id": 637,
                    "src": "7098:7:0"
                  }
                ],
                "ast_type": "Call",
                "col_offset": 39,
                "end_col_offset": 53,
                "end_lineno": 206,
                "func": {
                  "ast_type": "Name",
                  "col_offset": 39,
                  "end_col_offset": 44,
                  "end_lineno": 206,
                  "id": "empty",
                  "lineno": 206,
                  "node_id": 635,
                  "src": "7092:5:0"
                },
                "keyword": null,
                "keywords": [],
                "lineno": 206,
                "node_id": 634,
                "src": "7092:14:0"
              },
              "src": "7064:42:0"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 39,
            "end_lineno": 207,
            "lineno": 207,
            "node_id": 639,
            "src": "7111:35:0",
            "value": {
              "ast_type": "Subscript",
              "col_offset": 11,
              "end_col_offset": 39,
              "end_lineno": 207,
              "lineno": 207,
              "node_id": 640,
              "slice": {
                "ast_type": "Index",
                "col_offset": 11,
                "end_col_offset": 39,
                "end_lineno": 207,
                "lineno": 207,
                "node_id": 648,
                "src": "7118:28:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 30,
                  "end_col_offset": 38,
                  "end_lineno": 207,
                  "id": "_tokenId",
                  "lineno": 207,
                  "node_id": 645,
                  "src": "7137:8:0"
                }
              },
              "src": "7118:28:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "idToApprovals",
                "col_offset": 11,
                "end_col_offset": 29,
                "end_lineno": 207,
                "lineno": 207,
                "node_id": 641,
                "src": "7118:18:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 207,
                  "id": "self",
                  "lineno": 207,
                  "node_id": 642,
                  "src": "7118:4:0"
                }
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 197,
            "id": "view",
            "lineno": 197,
            "node_id": 649,
            "src": "6767:4:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 198,
            "id": "external",
            "lineno": 198,
            "node_id": 651,
            "src": "6773:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 204,
          "lineno": 200,
          "node_id": 655,
          "src": "6833:173:0",
          "value": "\n    @dev Get the approved address for a single NFT.\n         Throws if `_tokenId` is not a valid NFT.\n    @param _tokenId ID of the NFT to query the approval of.\n    "
        },
        "end_col_offset": 39,
        "end_lineno": 207,
        "lineno": 199,
        "name": "getApproved",
        "node_id": 615,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 38,
          "end_col_offset": 45,
          "end_lineno": 199,
          "id": "address",
          "lineno": 199,
          "node_id": 653,
          "src": "6820:7:0"
        },
        "src": "6782:364:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 29,
                "end_col_offset": 36,
                "end_lineno": 212,
                "id": "address",
                "lineno": 212,
                "node_id": 659,
                "src": "7194:7:0"
              },
              "arg": "_owner",
              "ast_type": "arg",
              "col_offset": 21,
              "end_col_offset": 36,
              "end_lineno": 212,
              "lineno": 212,
              "node_id": 658,
              "src": "7186:15:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 49,
                "end_col_offset": 56,
                "end_lineno": 212,
                "id": "address",
                "lineno": 212,
                "node_id": 662,
                "src": "7214:7:0"
              },
              "arg": "_operator",
              "ast_type": "arg",
              "col_offset": 38,
              "end_col_offset": 56,
              "end_lineno": 212,
              "lineno": 212,
              "node_id": 661,
              "src": "7203:18:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 21,
          "default": null,
          "defaults": [],
          "end_col_offset": 56,
          "end_lineno": 212,
          "lineno": 212,
          "node_id": 657,
          "src": "7186:35:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 114,
            "end_lineno": 218,
            "lineno": 218,
            "node_id": 666,
            "src": "7438:110:0",
            "value": {
              "ast_type": "BoolOp",
              "col_offset": 11,
              "end_col_offset": 114,
              "end_lineno": 218,
              "lineno": 218,
              "node_id": 667,
              "op": {
                "ast_type": "Or",
                "col_offset": 11,
                "end_col_offset": 114,
                "end_lineno": 218,
                "lineno": 218,
                "node_id": 1398,
                "src": "7445:103:0"
              },
              "src": "7445:103:0",
              "values": [
                {
                  "ast_type": "Subscript",
                  "col_offset": 11,
                  "end_col_offset": 53,
                  "end_lineno": 218,
                  "lineno": 218,
                  "node_id": 669,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 11,
                    "end_col_offset": 53,
                    "end_lineno": 218,
                    "lineno": 218,
                    "node_id": 682,
                    "src": "7445:42:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 43,
                      "end_col_offset": 52,
                      "end_lineno": 218,
                      "id": "_operator",
                      "lineno": 218,
                      "node_id": 679,
                      "src": "7477:9:0"
                    }
                  },
                  "src": "7445:42:0",
                  "value": {
                    "ast_type": "Subscript",
                    "col_offset": 12,
                    "end_col_offset": 41,
                    "end_lineno": 218,
                    "lineno": 218,
                    "node_id": 670,
                    "slice": {
                      "ast_type": "Index",
                      "col_offset": 12,
                      "end_col_offset": 41,
                      "end_lineno": 218,
                      "lineno": 218,
                      "node_id": 678,
                      "src": "7446:29:0",
                      "value": {
                        "ast_type": "Name",
                        "col_offset": 34,
                        "end_col_offset": 40,
                        "end_lineno": 218,
                        "id": "_owner",
                        "lineno": 218,
                        "node_id": 675,
                        "src": "7468:6:0"
                      }
                    },
                    "src": "7446:29:0",
                    "value": {
                      "ast_type": "Attribute",
                      "attr": "ownerToOperators",
                      "col_offset": 12,
                      "end_col_offset": 33,
                      "end_lineno": 218,
                      "lineno": 218,
                      "node_id": 671,
                      "src": "7446:21:0",
                      "value": {
                        "ast_type": "Name",
                        "col_offset": 12,
                        "end_col_offset": 16,
                        "end_lineno": 218,
                        "id": "self",
                        "lineno": 218,
                        "node_id": 672,
                        "src": "7446:4:0"
                      }
                    }
                  }
                },
                {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 104,
                      "end_col_offset": 113,
                      "end_lineno": 218,
                      "id": "_operator",
                      "lineno": 218,
                      "node_id": 690,
                      "src": "7538:9:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 57,
                  "end_col_offset": 114,
                  "end_lineno": 218,
                  "func": {
                    "ast_type": "Attribute",
                    "attr": "getContractWhitelisted",
                    "col_offset": 57,
                    "end_col_offset": 103,
                    "end_lineno": 218,
                    "lineno": 218,
                    "node_id": 684,
                    "src": "7491:46:0",
                    "value": {
                      "ast_type": "Attribute",
                      "attr": "activeUserContract",
                      "col_offset": 57,
                      "end_col_offset": 80,
                      "end_lineno": 218,
                      "lineno": 218,
                      "node_id": 685,
                      "src": "7491:23:0",
                      "value": {
                        "ast_type": "Name",
                        "col_offset": 57,
                        "end_col_offset": 61,
                        "end_lineno": 218,
                        "id": "self",
                        "lineno": 218,
                        "node_id": 686,
                        "src": "7491:4:0"
                      }
                    }
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 218,
                  "node_id": 683,
                  "src": "7491:57:0"
                }
              ]
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 210,
            "id": "view",
            "lineno": 210,
            "node_id": 692,
            "src": "7150:4:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 211,
            "id": "external",
            "lineno": 211,
            "node_id": 694,
            "src": "7156:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 217,
          "lineno": 213,
          "node_id": 698,
          "src": "7236:197:0",
          "value": "\n    @dev Checks if `_operator` is an approved operator for `_owner`.\n    @param _owner The address that owns the NFTs.\n    @param _operator The address that acts on behalf of the owner.\n    "
        },
        "end_col_offset": 114,
        "end_lineno": 218,
        "lineno": 212,
        "name": "isApprovedForAll",
        "node_id": 656,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 61,
          "end_col_offset": 65,
          "end_lineno": 212,
          "id": "bool",
          "lineno": 212,
          "node_id": 696,
          "src": "7226:4:0"
        },
        "src": "7165:383:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 33,
                "end_col_offset": 40,
                "end_lineno": 225,
                "id": "address",
                "lineno": 225,
                "node_id": 702,
                "src": "7635:7:0"
              },
              "arg": "_spender",
              "ast_type": "arg",
              "col_offset": 23,
              "end_col_offset": 40,
              "end_lineno": 225,
              "lineno": 225,
              "node_id": 701,
              "src": "7625:17:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 52,
                "end_col_offset": 59,
                "end_lineno": 225,
                "id": "uint256",
                "lineno": 225,
                "node_id": 705,
                "src": "7654:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 42,
              "end_col_offset": 59,
              "end_lineno": 225,
              "lineno": 225,
              "node_id": 704,
              "src": "7644:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 23,
          "default": null,
          "defaults": [],
          "end_col_offset": 59,
          "end_lineno": 225,
          "lineno": 225,
          "node_id": 700,
          "src": "7625:36:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 233,
              "id": "address",
              "lineno": 233,
              "node_id": 712,
              "src": "8026:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 233,
            "lineno": 233,
            "node_id": 709,
            "simple": 1,
            "src": "8019:41:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 233,
              "id": "owner",
              "lineno": 233,
              "node_id": 710,
              "src": "8019:5:0"
            },
            "value": {
              "ast_type": "Subscript",
              "col_offset": 21,
              "end_col_offset": 45,
              "end_lineno": 233,
              "lineno": 233,
              "node_id": 714,
              "slice": {
                "ast_type": "Index",
                "col_offset": 21,
                "end_col_offset": 45,
                "end_lineno": 233,
                "lineno": 233,
                "node_id": 722,
                "src": "8036:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 36,
                  "end_col_offset": 44,
                  "end_lineno": 233,
                  "id": "_tokenId",
                  "lineno": 233,
                  "node_id": 719,
                  "src": "8051:8:0"
                }
              },
              "src": "8036:24:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "idToOwner",
                "col_offset": 21,
                "end_col_offset": 35,
                "end_lineno": 233,
                "lineno": 233,
                "node_id": 715,
                "src": "8036:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 25,
                  "end_lineno": 233,
                  "id": "self",
                  "lineno": 233,
                  "node_id": 716,
                  "src": "8036:4:0"
                }
              }
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 20,
              "end_col_offset": 24,
              "end_lineno": 234,
              "id": "bool",
              "lineno": 234,
              "node_id": 726,
              "src": "8081:4:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 44,
            "end_lineno": 234,
            "lineno": 234,
            "node_id": 723,
            "simple": 1,
            "src": "8065:40:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 18,
              "end_lineno": 234,
              "id": "spenderIsOwner",
              "lineno": 234,
              "node_id": 724,
              "src": "8065:14:0"
            },
            "value": {
              "ast_type": "Compare",
              "col_offset": 27,
              "end_col_offset": 44,
              "end_lineno": 234,
              "left": {
                "ast_type": "Name",
                "col_offset": 27,
                "end_col_offset": 32,
                "end_lineno": 234,
                "id": "owner",
                "lineno": 234,
                "node_id": 729,
                "src": "8088:5:0"
              },
              "lineno": 234,
              "node_id": 728,
              "op": {
                "ast_type": "Eq",
                "col_offset": 27,
                "end_col_offset": 44,
                "end_lineno": 234,
                "lineno": 234,
                "node_id": 1838,
                "src": "8088:17:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 36,
                "end_col_offset": 44,
                "end_lineno": 234,
                "id": "_spender",
                "lineno": 234,
                "node_id": 732,
                "src": "8097:8:0"
              },
              "src": "8088:17:0"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 23,
              "end_col_offset": 27,
              "end_lineno": 235,
              "id": "bool",
              "lineno": 235,
              "node_id": 737,
              "src": "8129:4:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 70,
            "end_lineno": 235,
            "lineno": 235,
            "node_id": 734,
            "simple": 1,
            "src": "8110:66:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 21,
              "end_lineno": 235,
              "id": "spenderIsApproved",
              "lineno": 235,
              "node_id": 735,
              "src": "8110:17:0"
            },
            "value": {
              "ast_type": "Compare",
              "col_offset": 30,
              "end_col_offset": 70,
              "end_lineno": 235,
              "left": {
                "ast_type": "Name",
                "col_offset": 30,
                "end_col_offset": 38,
                "end_lineno": 235,
                "id": "_spender",
                "lineno": 235,
                "node_id": 740,
                "src": "8136:8:0"
              },
              "lineno": 235,
              "node_id": 739,
              "op": {
                "ast_type": "Eq",
                "col_offset": 30,
                "end_col_offset": 70,
                "end_lineno": 235,
                "lineno": 235,
                "node_id": 1838,
                "src": "8136:40:0"
              },
              "right": {
                "ast_type": "Subscript",
                "col_offset": 42,
                "end_col_offset": 70,
                "end_lineno": 235,
                "lineno": 235,
                "node_id": 743,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 42,
                  "end_col_offset": 70,
                  "end_lineno": 235,
                  "lineno": 235,
                  "node_id": 751,
                  "src": "8148:28:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 61,
                    "end_col_offset": 69,
                    "end_lineno": 235,
                    "id": "_tokenId",
                    "lineno": 235,
                    "node_id": 748,
                    "src": "8167:8:0"
                  }
                },
                "src": "8148:28:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "idToApprovals",
                  "col_offset": 42,
                  "end_col_offset": 60,
                  "end_lineno": 235,
                  "lineno": 235,
                  "node_id": 744,
                  "src": "8148:18:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 42,
                    "end_col_offset": 46,
                    "end_lineno": 235,
                    "id": "self",
                    "lineno": 235,
                    "node_id": 745,
                    "src": "8148:4:0"
                  }
                }
              },
              "src": "8136:40:0"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 29,
              "end_col_offset": 33,
              "end_lineno": 236,
              "id": "bool",
              "lineno": 236,
              "node_id": 755,
              "src": "8206:4:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 76,
            "end_lineno": 236,
            "lineno": 236,
            "node_id": 752,
            "simple": 1,
            "src": "8181:72:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 27,
              "end_lineno": 236,
              "id": "spenderIsApprovedForAll",
              "lineno": 236,
              "node_id": 753,
              "src": "8181:23:0"
            },
            "value": {
              "ast_type": "Subscript",
              "col_offset": 36,
              "end_col_offset": 76,
              "end_lineno": 236,
              "lineno": 236,
              "node_id": 757,
              "slice": {
                "ast_type": "Index",
                "col_offset": 36,
                "end_col_offset": 76,
                "end_lineno": 236,
                "lineno": 236,
                "node_id": 770,
                "src": "8213:40:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 67,
                  "end_col_offset": 75,
                  "end_lineno": 236,
                  "id": "_spender",
                  "lineno": 236,
                  "node_id": 767,
                  "src": "8244:8:0"
                }
              },
              "src": "8213:40:0",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 37,
                "end_col_offset": 65,
                "end_lineno": 236,
                "lineno": 236,
                "node_id": 758,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 37,
                  "end_col_offset": 65,
                  "end_lineno": 236,
                  "lineno": 236,
                  "node_id": 766,
                  "src": "8214:28:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 59,
                    "end_col_offset": 64,
                    "end_lineno": 236,
                    "id": "owner",
                    "lineno": 236,
                    "node_id": 763,
                    "src": "8236:5:0"
                  }
                },
                "src": "8214:28:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "ownerToOperators",
                  "col_offset": 37,
                  "end_col_offset": 58,
                  "end_lineno": 236,
                  "lineno": 236,
                  "node_id": 759,
                  "src": "8214:21:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 37,
                    "end_col_offset": 41,
                    "end_lineno": 236,
                    "id": "self",
                    "lineno": 236,
                    "node_id": 760,
                    "src": "8214:4:0"
                  }
                }
              }
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 25,
              "end_col_offset": 29,
              "end_lineno": 237,
              "id": "bool",
              "lineno": 237,
              "node_id": 774,
              "src": "8279:4:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 88,
            "end_lineno": 237,
            "lineno": 237,
            "node_id": 771,
            "simple": 1,
            "src": "8258:84:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 237,
              "id": "contractWhitelisted",
              "lineno": 237,
              "node_id": 772,
              "src": "8258:19:0"
            },
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 79,
                  "end_col_offset": 87,
                  "end_lineno": 237,
                  "id": "_spender",
                  "lineno": 237,
                  "node_id": 783,
                  "src": "8333:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 32,
              "end_col_offset": 88,
              "end_lineno": 237,
              "func": {
                "ast_type": "Attribute",
                "attr": "getContractWhitelisted",
                "col_offset": 32,
                "end_col_offset": 78,
                "end_lineno": 237,
                "lineno": 237,
                "node_id": 777,
                "src": "8286:46:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "activeUserContract",
                  "col_offset": 32,
                  "end_col_offset": 55,
                  "end_lineno": 237,
                  "lineno": 237,
                  "node_id": 778,
                  "src": "8286:23:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 32,
                    "end_col_offset": 36,
                    "end_lineno": 237,
                    "id": "self",
                    "lineno": 237,
                    "node_id": 779,
                    "src": "8286:4:0"
                  }
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 237,
              "node_id": 776,
              "src": "8286:56:0"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 98,
            "end_lineno": 238,
            "lineno": 238,
            "node_id": 785,
            "src": "8347:94:0",
            "value": {
              "ast_type": "BoolOp",
              "col_offset": 11,
              "end_col_offset": 98,
              "end_lineno": 238,
              "lineno": 238,
              "node_id": 786,
              "op": {
                "ast_type": "Or",
                "col_offset": 11,
                "end_col_offset": 98,
                "end_lineno": 238,
                "lineno": 238,
                "node_id": 1398,
                "src": "8354:87:0"
              },
              "src": "8354:87:0",
              "values": [
                {
                  "ast_type": "BoolOp",
                  "col_offset": 12,
                  "end_col_offset": 47,
                  "end_lineno": 238,
                  "lineno": 238,
                  "node_id": 788,
                  "op": {
                    "ast_type": "Or",
                    "col_offset": 12,
                    "end_col_offset": 47,
                    "end_lineno": 238,
                    "lineno": 238,
                    "node_id": 1398,
                    "src": "8355:35:0"
                  },
                  "src": "8355:35:0",
                  "values": [
                    {
                      "ast_type": "Name",
                      "col_offset": 12,
                      "end_col_offset": 26,
                      "end_lineno": 238,
                      "id": "spenderIsOwner",
                      "lineno": 238,
                      "node_id": 790,
                      "src": "8355:14:0"
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 30,
                      "end_col_offset": 47,
                      "end_lineno": 238,
                      "id": "spenderIsApproved",
                      "lineno": 238,
                      "node_id": 792,
                      "src": "8373:17:0"
                    }
                  ]
                },
                {
                  "ast_type": "Name",
                  "col_offset": 52,
                  "end_col_offset": 75,
                  "end_lineno": 238,
                  "id": "spenderIsApprovedForAll",
                  "lineno": 238,
                  "node_id": 794,
                  "src": "8395:23:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 79,
                  "end_col_offset": 98,
                  "end_lineno": 238,
                  "id": "contractWhitelisted",
                  "lineno": 238,
                  "node_id": 796,
                  "src": "8422:19:0"
                }
              ]
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 223,
            "id": "view",
            "lineno": 223,
            "node_id": 798,
            "src": "7587:4:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 224,
            "id": "internal",
            "lineno": 224,
            "node_id": 800,
            "src": "7593:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 232,
          "lineno": 226,
          "node_id": 804,
          "src": "7676:338:0",
          "value": "\n    @dev Returns whether the given spender can transfer a given token ID\n    @param spender address of the spender to query\n    @param tokenId uint256 ID of the token to be transferred\n    @return bool whether the msg.sender is approved for the given token ID,\n        is an operator of the owner, or is the owner of the token\n    "
        },
        "end_col_offset": 98,
        "end_lineno": 238,
        "lineno": 225,
        "name": "_isApprovedOrOwner",
        "node_id": 699,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 64,
          "end_col_offset": 68,
          "end_lineno": 225,
          "id": "bool",
          "lineno": 225,
          "node_id": 802,
          "src": "7666:4:0"
        },
        "src": "7602:839:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 21,
                "end_col_offset": 28,
                "end_lineno": 242,
                "id": "address",
                "lineno": 242,
                "node_id": 808,
                "src": "8475:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 16,
              "end_col_offset": 28,
              "end_lineno": 242,
              "lineno": 242,
              "node_id": 807,
              "src": "8470:12:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 40,
                "end_col_offset": 47,
                "end_lineno": 242,
                "id": "uint256",
                "lineno": 242,
                "node_id": 811,
                "src": "8494:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 30,
              "end_col_offset": 47,
              "end_lineno": 242,
              "lineno": 242,
              "node_id": 810,
              "src": "8484:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 16,
          "default": null,
          "defaults": [],
          "end_col_offset": 47,
          "end_lineno": 242,
          "lineno": 242,
          "node_id": 806,
          "src": "8470:31:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 53,
            "end_lineno": 248,
            "lineno": 248,
            "msg": null,
            "node_id": 815,
            "src": "8660:49:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 53,
              "end_lineno": 248,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 35,
                "end_lineno": 248,
                "lineno": 248,
                "node_id": 817,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 11,
                  "end_col_offset": 35,
                  "end_lineno": 248,
                  "lineno": 248,
                  "node_id": 825,
                  "src": "8667:24:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 34,
                    "end_lineno": 248,
                    "id": "_tokenId",
                    "lineno": 248,
                    "node_id": 822,
                    "src": "8682:8:0"
                  }
                },
                "src": "8667:24:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "idToOwner",
                  "col_offset": 11,
                  "end_col_offset": 25,
                  "end_lineno": 248,
                  "lineno": 248,
                  "node_id": 818,
                  "src": "8667:14:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 11,
                    "end_col_offset": 15,
                    "end_lineno": 248,
                    "id": "self",
                    "lineno": 248,
                    "node_id": 819,
                    "src": "8667:4:0"
                  }
                }
              },
              "lineno": 248,
              "node_id": 816,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 53,
                "end_lineno": 248,
                "lineno": 248,
                "node_id": 1838,
                "src": "8667:42:0"
              },
              "right": {
                "args": [
                  {
                    "ast_type": "Name",
                    "col_offset": 45,
                    "end_col_offset": 52,
                    "end_lineno": 248,
                    "id": "address",
                    "lineno": 248,
                    "node_id": 830,
                    "src": "8701:7:0"
                  }
                ],
                "ast_type": "Call",
                "col_offset": 39,
                "end_col_offset": 53,
                "end_lineno": 248,
                "func": {
                  "ast_type": "Name",
                  "col_offset": 39,
                  "end_col_offset": 44,
                  "end_lineno": 248,
                  "id": "empty",
                  "lineno": 248,
                  "node_id": 828,
                  "src": "8695:5:0"
                },
                "keyword": null,
                "keywords": [],
                "lineno": 248,
                "node_id": 827,
                "src": "8695:14:0"
              },
              "src": "8667:42:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 250,
            "lineno": 250,
            "node_id": 832,
            "src": "8737:30:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 28,
              "end_lineno": 250,
              "lineno": 250,
              "node_id": 833,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 28,
                "end_lineno": 250,
                "lineno": 250,
                "node_id": 841,
                "src": "8737:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 27,
                  "end_lineno": 250,
                  "id": "_tokenId",
                  "lineno": 250,
                  "node_id": 838,
                  "src": "8752:8:0"
                }
              },
              "src": "8737:24:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "idToOwner",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 250,
                "lineno": 250,
                "node_id": 834,
                "src": "8737:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 250,
                  "id": "self",
                  "lineno": 250,
                  "node_id": 835,
                  "src": "8737:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 31,
              "end_col_offset": 34,
              "end_lineno": 250,
              "id": "_to",
              "lineno": 250,
              "node_id": 842,
              "src": "8764:3:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 38,
            "end_lineno": 252,
            "lineno": 252,
            "node_id": 844,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 38,
              "end_lineno": 252,
              "lineno": 252,
              "node_id": 1592,
              "src": "8800:34:0"
            },
            "src": "8800:34:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 33,
              "end_lineno": 252,
              "lineno": 252,
              "node_id": 845,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 33,
                "end_lineno": 252,
                "lineno": 252,
                "node_id": 853,
                "src": "8800:29:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 32,
                  "end_lineno": 252,
                  "id": "_to",
                  "lineno": 252,
                  "node_id": 850,
                  "src": "8825:3:0"
                }
              },
              "src": "8800:29:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "ownerToNFTokenCount",
                "col_offset": 4,
                "end_col_offset": 28,
                "end_lineno": 252,
                "lineno": 252,
                "node_id": 846,
                "src": "8800:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 252,
                  "id": "self",
                  "lineno": 252,
                  "node_id": 847,
                  "src": "8800:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Int",
              "col_offset": 37,
              "end_col_offset": 38,
              "end_lineno": 252,
              "lineno": 252,
              "node_id": 855,
              "src": "8833:1:0",
              "value": 1
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 241,
            "id": "internal",
            "lineno": 241,
            "node_id": 856,
            "src": "8445:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 246,
          "lineno": 243,
          "node_id": 858,
          "src": "8508:100:0",
          "value": "\n    @dev Add a NFT to a given address\n         Throws if `_tokenId` is owned by someone.\n    "
        },
        "end_col_offset": 38,
        "end_lineno": 252,
        "lineno": 242,
        "name": "_addTokenTo",
        "node_id": 805,
        "pos": null,
        "returns": null,
        "src": "8454:380:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 28,
                "end_col_offset": 35,
                "end_lineno": 255,
                "id": "uint256",
                "lineno": 255,
                "node_id": 862,
                "src": "8874:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 18,
              "end_col_offset": 35,
              "end_lineno": 255,
              "lineno": 255,
              "node_id": 861,
              "src": "8864:17:0"
            },
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 48,
                "end_col_offset": 58,
                "end_lineno": 255,
                "lineno": 255,
                "node_id": 865,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 48,
                  "end_col_offset": 58,
                  "end_lineno": 255,
                  "lineno": 255,
                  "node_id": 870,
                  "src": "8894:10:0",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 55,
                    "end_col_offset": 57,
                    "end_lineno": 255,
                    "lineno": 255,
                    "node_id": 868,
                    "src": "8901:2:0",
                    "value": 64
                  }
                },
                "src": "8894:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 48,
                  "end_col_offset": 54,
                  "end_lineno": 255,
                  "id": "String",
                  "lineno": 255,
                  "node_id": 866,
                  "src": "8894:6:0"
                }
              },
              "arg": "_tokenURI",
              "ast_type": "arg",
              "col_offset": 37,
              "end_col_offset": 58,
              "end_lineno": 255,
              "lineno": 255,
              "node_id": 864,
              "src": "8883:21:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 18,
          "default": null,
          "defaults": [],
          "end_col_offset": 58,
          "end_lineno": 255,
          "lineno": 255,
          "node_id": 860,
          "src": "8864:40:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 40,
            "end_lineno": 256,
            "lineno": 256,
            "node_id": 871,
            "src": "8911:36:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 28,
              "end_lineno": 256,
              "lineno": 256,
              "node_id": 872,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 28,
                "end_lineno": 256,
                "lineno": 256,
                "node_id": 880,
                "src": "8911:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 27,
                  "end_lineno": 256,
                  "id": "_tokenId",
                  "lineno": 256,
                  "node_id": 877,
                  "src": "8926:8:0"
                }
              },
              "src": "8911:24:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "tokenURIs",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 256,
                "lineno": 256,
                "node_id": 873,
                "src": "8911:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 256,
                  "id": "self",
                  "lineno": 256,
                  "node_id": 874,
                  "src": "8911:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 31,
              "end_col_offset": 40,
              "end_lineno": 256,
              "id": "_tokenURI",
              "lineno": 256,
              "node_id": 881,
              "src": "8938:9:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 254,
            "id": "external",
            "lineno": 254,
            "node_id": 883,
            "src": "8837:8:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 40,
        "end_lineno": 256,
        "lineno": 255,
        "name": "_editTokenURI",
        "node_id": 859,
        "pos": null,
        "returns": null,
        "src": "8846:101:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 26,
                "end_col_offset": 33,
                "end_lineno": 259,
                "id": "uint256",
                "lineno": 259,
                "node_id": 888,
                "src": "8985:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 16,
              "end_col_offset": 33,
              "end_lineno": 259,
              "lineno": 259,
              "node_id": 887,
              "src": "8975:17:0"
            },
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 46,
                "end_col_offset": 56,
                "end_lineno": 259,
                "lineno": 259,
                "node_id": 891,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 46,
                  "end_col_offset": 56,
                  "end_lineno": 259,
                  "lineno": 259,
                  "node_id": 896,
                  "src": "9005:10:0",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 53,
                    "end_col_offset": 55,
                    "end_lineno": 259,
                    "lineno": 259,
                    "node_id": 894,
                    "src": "9012:2:0",
                    "value": 64
                  }
                },
                "src": "9005:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 46,
                  "end_col_offset": 52,
                  "end_lineno": 259,
                  "id": "String",
                  "lineno": 259,
                  "node_id": 892,
                  "src": "9005:6:0"
                }
              },
              "arg": "_tokenURI",
              "ast_type": "arg",
              "col_offset": 35,
              "end_col_offset": 56,
              "end_lineno": 259,
              "lineno": 259,
              "node_id": 890,
              "src": "8994:21:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 16,
          "default": null,
          "defaults": [],
          "end_col_offset": 56,
          "end_lineno": 259,
          "lineno": 259,
          "node_id": 886,
          "src": "8975:40:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 42,
            "end_lineno": 260,
            "lineno": 260,
            "node_id": 897,
            "src": "9022:38:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 22,
                  "end_col_offset": 30,
                  "end_lineno": 260,
                  "id": "_tokenId",
                  "lineno": 260,
                  "node_id": 903,
                  "src": "9040:8:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 32,
                  "end_col_offset": 41,
                  "end_lineno": 260,
                  "id": "_tokenURI",
                  "lineno": 260,
                  "node_id": 905,
                  "src": "9050:9:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 42,
              "end_lineno": 260,
              "func": {
                "ast_type": "Attribute",
                "attr": "_addTokenURI",
                "col_offset": 4,
                "end_col_offset": 21,
                "end_lineno": 260,
                "lineno": 260,
                "node_id": 899,
                "src": "9022:17:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 260,
                  "id": "self",
                  "lineno": 260,
                  "node_id": 900,
                  "src": "9022:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 260,
              "node_id": 898,
              "src": "9022:38:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 258,
            "id": "external",
            "lineno": 258,
            "node_id": 907,
            "src": "8950:8:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 42,
        "end_lineno": 260,
        "lineno": 259,
        "name": "addTokenURI",
        "node_id": 885,
        "pos": null,
        "returns": null,
        "src": "8959:101:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 35,
                "end_col_offset": 42,
                "end_lineno": 264,
                "id": "uint256",
                "lineno": 264,
                "node_id": 912,
                "src": "9113:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 25,
              "end_col_offset": 42,
              "end_lineno": 264,
              "lineno": 264,
              "node_id": 911,
              "src": "9103:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 25,
          "default": null,
          "defaults": [],
          "end_col_offset": 42,
          "end_lineno": 264,
          "lineno": 264,
          "node_id": 910,
          "src": "9103:17:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 35,
            "end_lineno": 265,
            "lineno": 265,
            "node_id": 914,
            "src": "9141:31:0",
            "value": {
              "ast_type": "Subscript",
              "col_offset": 11,
              "end_col_offset": 35,
              "end_lineno": 265,
              "lineno": 265,
              "node_id": 915,
              "slice": {
                "ast_type": "Index",
                "col_offset": 11,
                "end_col_offset": 35,
                "end_lineno": 265,
                "lineno": 265,
                "node_id": 923,
                "src": "9148:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 34,
                  "end_lineno": 265,
                  "id": "_tokenId",
                  "lineno": 265,
                  "node_id": 920,
                  "src": "9163:8:0"
                }
              },
              "src": "9148:24:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "tokenURIs",
                "col_offset": 11,
                "end_col_offset": 25,
                "end_lineno": 265,
                "lineno": 265,
                "node_id": 916,
                "src": "9148:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 265,
                  "id": "self",
                  "lineno": 265,
                  "node_id": 917,
                  "src": "9148:4:0"
                }
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 262,
            "id": "view",
            "lineno": 262,
            "node_id": 924,
            "src": "9063:4:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 263,
            "id": "external",
            "lineno": 263,
            "node_id": 926,
            "src": "9069:8:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 35,
        "end_lineno": 265,
        "lineno": 264,
        "name": "getTokenURIByTokenId",
        "node_id": 909,
        "pos": null,
        "returns": {
          "ast_type": "Subscript",
          "col_offset": 47,
          "end_col_offset": 57,
          "end_lineno": 264,
          "lineno": 264,
          "node_id": 928,
          "slice": {
            "ast_type": "Index",
            "col_offset": 47,
            "end_col_offset": 57,
            "end_lineno": 264,
            "lineno": 264,
            "node_id": 933,
            "src": "9125:10:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 54,
              "end_col_offset": 56,
              "end_lineno": 264,
              "lineno": 264,
              "node_id": 931,
              "src": "9132:2:0",
              "value": 64
            }
          },
          "src": "9125:10:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 47,
            "end_col_offset": 53,
            "end_lineno": 264,
            "id": "String",
            "lineno": 264,
            "node_id": 929,
            "src": "9125:6:0"
          }
        },
        "src": "9078:94:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 27,
                "end_col_offset": 34,
                "end_lineno": 268,
                "id": "uint256",
                "lineno": 268,
                "node_id": 937,
                "src": "9211:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 17,
              "end_col_offset": 34,
              "end_lineno": 268,
              "lineno": 268,
              "node_id": 936,
              "src": "9201:17:0"
            },
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 47,
                "end_col_offset": 57,
                "end_lineno": 268,
                "lineno": 268,
                "node_id": 940,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 47,
                  "end_col_offset": 57,
                  "end_lineno": 268,
                  "lineno": 268,
                  "node_id": 945,
                  "src": "9231:10:0",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 54,
                    "end_col_offset": 56,
                    "end_lineno": 268,
                    "lineno": 268,
                    "node_id": 943,
                    "src": "9238:2:0",
                    "value": 64
                  }
                },
                "src": "9231:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 47,
                  "end_col_offset": 53,
                  "end_lineno": 268,
                  "id": "String",
                  "lineno": 268,
                  "node_id": 941,
                  "src": "9231:6:0"
                }
              },
              "arg": "_tokenURI",
              "ast_type": "arg",
              "col_offset": 36,
              "end_col_offset": 57,
              "end_lineno": 268,
              "lineno": 268,
              "node_id": 939,
              "src": "9220:21:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 17,
          "default": null,
          "defaults": [],
          "end_col_offset": 57,
          "end_lineno": 268,
          "lineno": 268,
          "node_id": 935,
          "src": "9201:40:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 60,
            "end_lineno": 274,
            "lineno": 274,
            "msg": {
              "ast_type": "Str",
              "col_offset": 47,
              "end_col_offset": 60,
              "end_lineno": 274,
              "lineno": 274,
              "node_id": 964,
              "src": "9443:13:0",
              "value": "Token not 0"
            },
            "node_id": 948,
            "src": "9400:56:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 45,
              "end_lineno": 274,
              "left": {
                "args": [
                  {
                    "ast_type": "Subscript",
                    "col_offset": 15,
                    "end_col_offset": 39,
                    "end_lineno": 274,
                    "lineno": 274,
                    "node_id": 953,
                    "slice": {
                      "ast_type": "Index",
                      "col_offset": 15,
                      "end_col_offset": 39,
                      "end_lineno": 274,
                      "lineno": 274,
                      "node_id": 961,
                      "src": "9411:24:0",
                      "value": {
                        "ast_type": "Name",
                        "col_offset": 30,
                        "end_col_offset": 38,
                        "end_lineno": 274,
                        "id": "_tokenId",
                        "lineno": 274,
                        "node_id": 958,
                        "src": "9426:8:0"
                      }
                    },
                    "src": "9411:24:0",
                    "value": {
                      "ast_type": "Attribute",
                      "attr": "tokenURIs",
                      "col_offset": 15,
                      "end_col_offset": 29,
                      "end_lineno": 274,
                      "lineno": 274,
                      "node_id": 954,
                      "src": "9411:14:0",
                      "value": {
                        "ast_type": "Name",
                        "col_offset": 15,
                        "end_col_offset": 19,
                        "end_lineno": 274,
                        "id": "self",
                        "lineno": 274,
                        "node_id": 955,
                        "src": "9411:4:0"
                      }
                    }
                  }
                ],
                "ast_type": "Call",
                "col_offset": 11,
                "end_col_offset": 40,
                "end_lineno": 274,
                "func": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 14,
                  "end_lineno": 274,
                  "id": "len",
                  "lineno": 274,
                  "node_id": 951,
                  "src": "9407:3:0"
                },
                "keyword": null,
                "keywords": [],
                "lineno": 274,
                "node_id": 950,
                "src": "9407:29:0"
              },
              "lineno": 274,
              "node_id": 949,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 45,
                "end_lineno": 274,
                "lineno": 274,
                "node_id": 1838,
                "src": "9407:34:0"
              },
              "right": {
                "ast_type": "Int",
                "col_offset": 44,
                "end_col_offset": 45,
                "end_lineno": 274,
                "lineno": 274,
                "node_id": 963,
                "src": "9440:1:0",
                "value": 0
              },
              "src": "9407:34:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 40,
            "end_lineno": 276,
            "lineno": 276,
            "node_id": 965,
            "src": "9485:36:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 28,
              "end_lineno": 276,
              "lineno": 276,
              "node_id": 966,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 28,
                "end_lineno": 276,
                "lineno": 276,
                "node_id": 974,
                "src": "9485:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 27,
                  "end_lineno": 276,
                  "id": "_tokenId",
                  "lineno": 276,
                  "node_id": 971,
                  "src": "9500:8:0"
                }
              },
              "src": "9485:24:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "tokenURIs",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 276,
                "lineno": 276,
                "node_id": 967,
                "src": "9485:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 276,
                  "id": "self",
                  "lineno": 276,
                  "node_id": 968,
                  "src": "9485:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 31,
              "end_col_offset": 40,
              "end_lineno": 276,
              "id": "_tokenURI",
              "lineno": 276,
              "node_id": 975,
              "src": "9512:9:0"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 16,
              "end_col_offset": 23,
              "end_lineno": 278,
              "id": "bytes32",
              "lineno": 278,
              "node_id": 980,
              "src": "9566:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 59,
            "end_lineno": 278,
            "lineno": 278,
            "node_id": 977,
            "simple": 1,
            "src": "9554:55:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 14,
              "end_lineno": 278,
              "id": "uniqueHash",
              "lineno": 278,
              "node_id": 978,
              "src": "9554:10:0"
            },
            "value": {
              "args": [
                {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 48,
                      "end_col_offset": 57,
                      "end_lineno": 278,
                      "id": "_tokenURI",
                      "lineno": 278,
                      "node_id": 988,
                      "src": "9598:9:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 36,
                  "end_col_offset": 58,
                  "end_lineno": 278,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 36,
                    "end_col_offset": 47,
                    "end_lineno": 278,
                    "id": "_abi_encode",
                    "lineno": 278,
                    "node_id": 986,
                    "src": "9586:11:0"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 278,
                  "node_id": 985,
                  "src": "9586:22:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 26,
              "end_col_offset": 59,
              "end_lineno": 278,
              "func": {
                "ast_type": "Name",
                "col_offset": 26,
                "end_col_offset": 35,
                "end_lineno": 278,
                "id": "keccak256",
                "lineno": 278,
                "node_id": 983,
                "src": "9576:9:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 278,
              "node_id": 982,
              "src": "9576:33:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 52,
            "end_lineno": 279,
            "lineno": 279,
            "node_id": 990,
            "src": "9614:48:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 41,
              "end_lineno": 279,
              "lineno": 279,
              "node_id": 991,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 41,
                "end_lineno": 279,
                "lineno": 279,
                "node_id": 999,
                "src": "9614:37:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 30,
                  "end_col_offset": 40,
                  "end_lineno": 279,
                  "id": "uniqueHash",
                  "lineno": 279,
                  "node_id": 996,
                  "src": "9640:10:0"
                }
              },
              "src": "9614:37:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "uniqueHashesForToken",
                "col_offset": 4,
                "end_col_offset": 29,
                "end_lineno": 279,
                "lineno": 279,
                "node_id": 992,
                "src": "9614:25:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 279,
                  "id": "self",
                  "lineno": 279,
                  "node_id": 993,
                  "src": "9614:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 44,
              "end_col_offset": 52,
              "end_lineno": 279,
              "id": "_tokenId",
              "lineno": 279,
              "node_id": 1000,
              "src": "9654:8:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 267,
            "id": "internal",
            "lineno": 267,
            "node_id": 1002,
            "src": "9175:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 272,
          "lineno": 269,
          "node_id": 1004,
          "src": "9248:103:0",
          "value": "\n    @dev Add a TokenURI for a given tokenId\n        Throws if `_tokenId` already has a URI.\n    "
        },
        "end_col_offset": 52,
        "end_lineno": 279,
        "lineno": 268,
        "name": "_addTokenURI",
        "node_id": 934,
        "pos": null,
        "returns": null,
        "src": "9184:478:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 28,
                "end_col_offset": 35,
                "end_lineno": 283,
                "id": "address",
                "lineno": 283,
                "node_id": 1008,
                "src": "9703:7:0"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 21,
              "end_col_offset": 35,
              "end_lineno": 283,
              "lineno": 283,
              "node_id": 1007,
              "src": "9696:14:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 47,
                "end_col_offset": 54,
                "end_lineno": 283,
                "id": "uint256",
                "lineno": 283,
                "node_id": 1011,
                "src": "9722:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 37,
              "end_col_offset": 54,
              "end_lineno": 283,
              "lineno": 283,
              "node_id": 1010,
              "src": "9712:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 21,
          "default": null,
          "defaults": [],
          "end_col_offset": 54,
          "end_lineno": 283,
          "lineno": 283,
          "node_id": 1006,
          "src": "9696:33:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 44,
            "end_lineno": 289,
            "lineno": 289,
            "msg": null,
            "node_id": 1015,
            "src": "9897:40:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 44,
              "end_lineno": 289,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 35,
                "end_lineno": 289,
                "lineno": 289,
                "node_id": 1017,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 11,
                  "end_col_offset": 35,
                  "end_lineno": 289,
                  "lineno": 289,
                  "node_id": 1025,
                  "src": "9904:24:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 34,
                    "end_lineno": 289,
                    "id": "_tokenId",
                    "lineno": 289,
                    "node_id": 1022,
                    "src": "9919:8:0"
                  }
                },
                "src": "9904:24:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "idToOwner",
                  "col_offset": 11,
                  "end_col_offset": 25,
                  "end_lineno": 289,
                  "lineno": 289,
                  "node_id": 1018,
                  "src": "9904:14:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 11,
                    "end_col_offset": 15,
                    "end_lineno": 289,
                    "id": "self",
                    "lineno": 289,
                    "node_id": 1019,
                    "src": "9904:4:0"
                  }
                }
              },
              "lineno": 289,
              "node_id": 1016,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 44,
                "end_lineno": 289,
                "lineno": 289,
                "node_id": 1838,
                "src": "9904:33:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 39,
                "end_col_offset": 44,
                "end_lineno": 289,
                "id": "_from",
                "lineno": 289,
                "node_id": 1027,
                "src": "9932:5:0"
              },
              "src": "9904:33:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 291,
            "lineno": 291,
            "node_id": 1029,
            "src": "9965:41:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 28,
              "end_lineno": 291,
              "lineno": 291,
              "node_id": 1030,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 28,
                "end_lineno": 291,
                "lineno": 291,
                "node_id": 1038,
                "src": "9965:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 27,
                  "end_lineno": 291,
                  "id": "_tokenId",
                  "lineno": 291,
                  "node_id": 1035,
                  "src": "9980:8:0"
                }
              },
              "src": "9965:24:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "idToOwner",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 291,
                "lineno": 291,
                "node_id": 1031,
                "src": "9965:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 291,
                  "id": "self",
                  "lineno": 291,
                  "node_id": 1032,
                  "src": "9965:4:0"
                }
              }
            },
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 37,
                  "end_col_offset": 44,
                  "end_lineno": 291,
                  "id": "address",
                  "lineno": 291,
                  "node_id": 1042,
                  "src": "9998:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 31,
              "end_col_offset": 45,
              "end_lineno": 291,
              "func": {
                "ast_type": "Name",
                "col_offset": 31,
                "end_col_offset": 36,
                "end_lineno": 291,
                "id": "empty",
                "lineno": 291,
                "node_id": 1040,
                "src": "9992:5:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 291,
              "node_id": 1039,
              "src": "9992:14:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 40,
            "end_lineno": 293,
            "lineno": 293,
            "node_id": 1044,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 40,
              "end_lineno": 293,
              "lineno": 293,
              "node_id": 1054,
              "src": "10039:36:0"
            },
            "src": "10039:36:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 35,
              "end_lineno": 293,
              "lineno": 293,
              "node_id": 1045,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 35,
                "end_lineno": 293,
                "lineno": 293,
                "node_id": 1053,
                "src": "10039:31:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 34,
                  "end_lineno": 293,
                  "id": "_from",
                  "lineno": 293,
                  "node_id": 1050,
                  "src": "10064:5:0"
                }
              },
              "src": "10039:31:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "ownerToNFTokenCount",
                "col_offset": 4,
                "end_col_offset": 28,
                "end_lineno": 293,
                "lineno": 293,
                "node_id": 1046,
                "src": "10039:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 293,
                  "id": "self",
                  "lineno": 293,
                  "node_id": 1047,
                  "src": "10039:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Int",
              "col_offset": 39,
              "end_col_offset": 40,
              "end_lineno": 293,
              "lineno": 293,
              "node_id": 1055,
              "src": "10074:1:0",
              "value": 1
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 282,
            "id": "internal",
            "lineno": 282,
            "node_id": 1056,
            "src": "9666:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 287,
          "lineno": 284,
          "node_id": 1058,
          "src": "9736:107:0",
          "value": "\n    @dev Remove a NFT from a given address\n         Throws if `_from` is not the current owner.\n    "
        },
        "end_col_offset": 40,
        "end_lineno": 293,
        "lineno": 283,
        "name": "_removeTokenFrom",
        "node_id": 1005,
        "pos": null,
        "returns": null,
        "src": "9675:400:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 27,
                "end_col_offset": 34,
                "end_lineno": 297,
                "id": "address",
                "lineno": 297,
                "node_id": 1062,
                "src": "10115:7:0"
              },
              "arg": "_owner",
              "ast_type": "arg",
              "col_offset": 19,
              "end_col_offset": 34,
              "end_lineno": 297,
              "lineno": 297,
              "node_id": 1061,
              "src": "10107:15:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 46,
                "end_col_offset": 53,
                "end_lineno": 297,
                "id": "uint256",
                "lineno": 297,
                "node_id": 1065,
                "src": "10134:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 36,
              "end_col_offset": 53,
              "end_lineno": 297,
              "lineno": 297,
              "node_id": 1064,
              "src": "10124:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 19,
          "default": null,
          "defaults": [],
          "end_col_offset": 53,
          "end_lineno": 297,
          "lineno": 297,
          "node_id": 1060,
          "src": "10107:34:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 303,
            "lineno": 303,
            "msg": null,
            "node_id": 1069,
            "src": "10314:41:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 45,
              "end_lineno": 303,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 35,
                "end_lineno": 303,
                "lineno": 303,
                "node_id": 1071,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 11,
                  "end_col_offset": 35,
                  "end_lineno": 303,
                  "lineno": 303,
                  "node_id": 1079,
                  "src": "10321:24:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 34,
                    "end_lineno": 303,
                    "id": "_tokenId",
                    "lineno": 303,
                    "node_id": 1076,
                    "src": "10336:8:0"
                  }
                },
                "src": "10321:24:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "idToOwner",
                  "col_offset": 11,
                  "end_col_offset": 25,
                  "end_lineno": 303,
                  "lineno": 303,
                  "node_id": 1072,
                  "src": "10321:14:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 11,
                    "end_col_offset": 15,
                    "end_lineno": 303,
                    "id": "self",
                    "lineno": 303,
                    "node_id": 1073,
                    "src": "10321:4:0"
                  }
                }
              },
              "lineno": 303,
              "node_id": 1070,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 45,
                "end_lineno": 303,
                "lineno": 303,
                "node_id": 1838,
                "src": "10321:34:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 39,
                "end_col_offset": 45,
                "end_lineno": 303,
                "id": "_owner",
                "lineno": 303,
                "node_id": 1081,
                "src": "10349:6:0"
              },
              "src": "10321:34:0"
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 53,
                "end_lineno": 306,
                "lineno": 306,
                "node_id": 1100,
                "src": "10445:45:0",
                "target": {
                  "ast_type": "Subscript",
                  "col_offset": 8,
                  "end_col_offset": 36,
                  "end_lineno": 306,
                  "lineno": 306,
                  "node_id": 1101,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 8,
                    "end_col_offset": 36,
                    "end_lineno": 306,
                    "lineno": 306,
                    "node_id": 1109,
                    "src": "10445:28:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 27,
                      "end_col_offset": 35,
                      "end_lineno": 306,
                      "id": "_tokenId",
                      "lineno": 306,
                      "node_id": 1106,
                      "src": "10464:8:0"
                    }
                  },
                  "src": "10445:28:0",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "idToApprovals",
                    "col_offset": 8,
                    "end_col_offset": 26,
                    "end_lineno": 306,
                    "lineno": 306,
                    "node_id": 1102,
                    "src": "10445:18:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 8,
                      "end_col_offset": 12,
                      "end_lineno": 306,
                      "id": "self",
                      "lineno": 306,
                      "node_id": 1103,
                      "src": "10445:4:0"
                    }
                  }
                },
                "value": {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 45,
                      "end_col_offset": 52,
                      "end_lineno": 306,
                      "id": "address",
                      "lineno": 306,
                      "node_id": 1113,
                      "src": "10482:7:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 39,
                  "end_col_offset": 53,
                  "end_lineno": 306,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 39,
                    "end_col_offset": 44,
                    "end_lineno": 306,
                    "id": "empty",
                    "lineno": 306,
                    "node_id": 1111,
                    "src": "10476:5:0"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 306,
                  "node_id": 1110,
                  "src": "10476:14:0"
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 53,
            "end_lineno": 306,
            "lineno": 304,
            "node_id": 1083,
            "orelse": [],
            "src": "10360:130:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 53,
              "end_lineno": 304,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 7,
                "end_col_offset": 35,
                "end_lineno": 304,
                "lineno": 304,
                "node_id": 1085,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 7,
                  "end_col_offset": 35,
                  "end_lineno": 304,
                  "lineno": 304,
                  "node_id": 1093,
                  "src": "10363:28:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 34,
                    "end_lineno": 304,
                    "id": "_tokenId",
                    "lineno": 304,
                    "node_id": 1090,
                    "src": "10382:8:0"
                  }
                },
                "src": "10363:28:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "idToApprovals",
                  "col_offset": 7,
                  "end_col_offset": 25,
                  "end_lineno": 304,
                  "lineno": 304,
                  "node_id": 1086,
                  "src": "10363:18:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 7,
                    "end_col_offset": 11,
                    "end_lineno": 304,
                    "id": "self",
                    "lineno": 304,
                    "node_id": 1087,
                    "src": "10363:4:0"
                  }
                }
              },
              "lineno": 304,
              "node_id": 1084,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 7,
                "end_col_offset": 53,
                "end_lineno": 304,
                "lineno": 304,
                "node_id": 1906,
                "src": "10363:46:0"
              },
              "right": {
                "args": [
                  {
                    "ast_type": "Name",
                    "col_offset": 45,
                    "end_col_offset": 52,
                    "end_lineno": 304,
                    "id": "address",
                    "lineno": 304,
                    "node_id": 1098,
                    "src": "10401:7:0"
                  }
                ],
                "ast_type": "Call",
                "col_offset": 39,
                "end_col_offset": 53,
                "end_lineno": 304,
                "func": {
                  "ast_type": "Name",
                  "col_offset": 39,
                  "end_col_offset": 44,
                  "end_lineno": 304,
                  "id": "empty",
                  "lineno": 304,
                  "node_id": 1096,
                  "src": "10395:5:0"
                },
                "keyword": null,
                "keywords": [],
                "lineno": 304,
                "node_id": 1095,
                "src": "10395:14:0"
              },
              "src": "10363:46:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 296,
            "id": "internal",
            "lineno": 296,
            "node_id": 1115,
            "src": "10079:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 301,
          "lineno": 298,
          "node_id": 1117,
          "src": "10148:111:0",
          "value": "\n    @dev Clear an approval of a given address\n         Throws if `_owner` is not the current owner.\n    "
        },
        "end_col_offset": 53,
        "end_lineno": 306,
        "lineno": 297,
        "name": "_clearApproval",
        "node_id": 1059,
        "pos": null,
        "returns": null,
        "src": "10088:402:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 25,
                "end_col_offset": 32,
                "end_lineno": 310,
                "id": "address",
                "lineno": 310,
                "node_id": 1121,
                "src": "10528:7:0"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 18,
              "end_col_offset": 32,
              "end_lineno": 310,
              "lineno": 310,
              "node_id": 1120,
              "src": "10521:14:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 39,
                "end_col_offset": 46,
                "end_lineno": 310,
                "id": "address",
                "lineno": 310,
                "node_id": 1124,
                "src": "10542:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 34,
              "end_col_offset": 46,
              "end_lineno": 310,
              "lineno": 310,
              "node_id": 1123,
              "src": "10537:12:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 58,
                "end_col_offset": 65,
                "end_lineno": 310,
                "id": "uint256",
                "lineno": 310,
                "node_id": 1127,
                "src": "10561:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 48,
              "end_col_offset": 65,
              "end_lineno": 310,
              "lineno": 310,
              "node_id": 1126,
              "src": "10551:17:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 76,
                "end_col_offset": 83,
                "end_lineno": 310,
                "id": "address",
                "lineno": 310,
                "node_id": 1130,
                "src": "10579:7:0"
              },
              "arg": "_sender",
              "ast_type": "arg",
              "col_offset": 67,
              "end_col_offset": 83,
              "end_lineno": 310,
              "lineno": 310,
              "node_id": 1129,
              "src": "10570:16:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 18,
          "default": null,
          "defaults": [],
          "end_col_offset": 83,
          "end_lineno": 310,
          "lineno": 310,
          "node_id": 1119,
          "src": "10521:65:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 53,
            "end_lineno": 320,
            "lineno": 320,
            "msg": null,
            "node_id": 1134,
            "src": "11019:49:0",
            "test": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 35,
                  "end_col_offset": 42,
                  "end_lineno": 320,
                  "id": "_sender",
                  "lineno": 320,
                  "node_id": 1140,
                  "src": "11050:7:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 44,
                  "end_col_offset": 52,
                  "end_lineno": 320,
                  "id": "_tokenId",
                  "lineno": 320,
                  "node_id": 1142,
                  "src": "11059:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 11,
              "end_col_offset": 53,
              "end_lineno": 320,
              "func": {
                "ast_type": "Attribute",
                "attr": "_isApprovedOrOwner",
                "col_offset": 11,
                "end_col_offset": 34,
                "end_lineno": 320,
                "lineno": 320,
                "node_id": 1136,
                "src": "11026:23:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 320,
                  "id": "self",
                  "lineno": 320,
                  "node_id": 1137,
                  "src": "11026:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 320,
              "node_id": 1135,
              "src": "11026:42:0"
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 32,
            "end_lineno": 322,
            "lineno": 322,
            "msg": null,
            "node_id": 1144,
            "src": "11115:28:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 32,
              "end_lineno": 322,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 14,
                "end_lineno": 322,
                "id": "_to",
                "lineno": 322,
                "node_id": 1146,
                "src": "11122:3:0"
              },
              "lineno": 322,
              "node_id": 1145,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 32,
                "end_lineno": 322,
                "lineno": 322,
                "node_id": 1906,
                "src": "11122:21:0"
              },
              "right": {
                "args": [
                  {
                    "ast_type": "Name",
                    "col_offset": 24,
                    "end_col_offset": 31,
                    "end_lineno": 322,
                    "id": "address",
                    "lineno": 322,
                    "node_id": 1152,
                    "src": "11135:7:0"
                  }
                ],
                "ast_type": "Call",
                "col_offset": 18,
                "end_col_offset": 32,
                "end_lineno": 322,
                "func": {
                  "ast_type": "Name",
                  "col_offset": 18,
                  "end_col_offset": 23,
                  "end_lineno": 322,
                  "id": "empty",
                  "lineno": 322,
                  "node_id": 1150,
                  "src": "11129:5:0"
                },
                "keyword": null,
                "keywords": [],
                "lineno": 322,
                "node_id": 1149,
                "src": "11129:14:0"
              },
              "src": "11122:21:0"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 40,
            "end_lineno": 324,
            "lineno": 324,
            "node_id": 1154,
            "src": "11213:36:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 24,
                  "end_col_offset": 29,
                  "end_lineno": 324,
                  "id": "_from",
                  "lineno": 324,
                  "node_id": 1160,
                  "src": "11233:5:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 39,
                  "end_lineno": 324,
                  "id": "_tokenId",
                  "lineno": 324,
                  "node_id": 1162,
                  "src": "11240:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 40,
              "end_lineno": 324,
              "func": {
                "ast_type": "Attribute",
                "attr": "_clearApproval",
                "col_offset": 4,
                "end_col_offset": 23,
                "end_lineno": 324,
                "lineno": 324,
                "node_id": 1156,
                "src": "11213:19:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 324,
                  "id": "self",
                  "lineno": 324,
                  "node_id": 1157,
                  "src": "11213:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 324,
              "node_id": 1155,
              "src": "11213:36:0"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 42,
            "end_lineno": 326,
            "lineno": 326,
            "node_id": 1164,
            "src": "11312:38:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 31,
                  "end_lineno": 326,
                  "id": "_from",
                  "lineno": 326,
                  "node_id": 1170,
                  "src": "11334:5:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 33,
                  "end_col_offset": 41,
                  "end_lineno": 326,
                  "id": "_tokenId",
                  "lineno": 326,
                  "node_id": 1172,
                  "src": "11341:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 42,
              "end_lineno": 326,
              "func": {
                "ast_type": "Attribute",
                "attr": "_removeTokenFrom",
                "col_offset": 4,
                "end_col_offset": 25,
                "end_lineno": 326,
                "lineno": 326,
                "node_id": 1166,
                "src": "11312:21:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 326,
                  "id": "self",
                  "lineno": 326,
                  "node_id": 1167,
                  "src": "11312:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 326,
              "node_id": 1165,
              "src": "11312:38:0"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 35,
            "end_lineno": 328,
            "lineno": 328,
            "node_id": 1174,
            "src": "11369:31:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 24,
                  "end_lineno": 328,
                  "id": "_to",
                  "lineno": 328,
                  "node_id": 1180,
                  "src": "11386:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 34,
                  "end_lineno": 328,
                  "id": "_tokenId",
                  "lineno": 328,
                  "node_id": 1182,
                  "src": "11391:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 35,
              "end_lineno": 328,
              "func": {
                "ast_type": "Attribute",
                "attr": "_addTokenTo",
                "col_offset": 4,
                "end_col_offset": 20,
                "end_lineno": 328,
                "lineno": 328,
                "node_id": 1176,
                "src": "11369:16:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 328,
                  "id": "self",
                  "lineno": 328,
                  "node_id": 1177,
                  "src": "11369:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 328,
              "node_id": 1175,
              "src": "11369:31:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 38,
            "end_lineno": 330,
            "lineno": 330,
            "node_id": 1185,
            "src": "11428:34:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 17,
                  "end_col_offset": 22,
                  "end_lineno": 330,
                  "id": "_from",
                  "lineno": 330,
                  "node_id": 1189,
                  "src": "11441:5:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 24,
                  "end_col_offset": 27,
                  "end_lineno": 330,
                  "id": "_to",
                  "lineno": 330,
                  "node_id": 1191,
                  "src": "11448:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 37,
                  "end_lineno": 330,
                  "id": "_tokenId",
                  "lineno": 330,
                  "node_id": 1193,
                  "src": "11453:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 38,
              "end_lineno": 330,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 330,
                "id": "Transfer",
                "lineno": 330,
                "node_id": 1187,
                "src": "11432:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 330,
              "node_id": 1186,
              "src": "11432:30:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 309,
            "id": "internal",
            "lineno": 309,
            "node_id": 1195,
            "src": "10494:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 318,
          "lineno": 311,
          "node_id": 1197,
          "src": "10593:396:0",
          "value": "\n    @dev Exeute transfer of a NFT.\n         Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n         address for this NFT. (NOTE: `msg.sender` not allowed in private function so pass `_sender`.)\n         Throws if `_to` is the zero address.\n         Throws if `_from` is not the current owner.\n         Throws if `_tokenId` is not a valid NFT.\n    "
        },
        "end_col_offset": 38,
        "end_lineno": 330,
        "lineno": 310,
        "name": "_transferFrom",
        "node_id": 1118,
        "pos": null,
        "returns": null,
        "src": "10503:959:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 24,
                "end_col_offset": 31,
                "end_lineno": 337,
                "id": "address",
                "lineno": 337,
                "node_id": 1201,
                "src": "11536:7:0"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 17,
              "end_col_offset": 31,
              "end_lineno": 337,
              "lineno": 337,
              "node_id": 1200,
              "src": "11529:14:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 38,
                "end_col_offset": 45,
                "end_lineno": 337,
                "id": "address",
                "lineno": 337,
                "node_id": 1204,
                "src": "11550:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 33,
              "end_col_offset": 45,
              "end_lineno": 337,
              "lineno": 337,
              "node_id": 1203,
              "src": "11545:12:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 57,
                "end_col_offset": 64,
                "end_lineno": 337,
                "id": "uint256",
                "lineno": 337,
                "node_id": 1207,
                "src": "11569:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 47,
              "end_col_offset": 64,
              "end_lineno": 337,
              "lineno": 337,
              "node_id": 1206,
              "src": "11559:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 17,
          "default": null,
          "defaults": [],
          "end_col_offset": 64,
          "end_lineno": 337,
          "lineno": 337,
          "node_id": 1199,
          "src": "11529:47:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 56,
            "end_lineno": 350,
            "lineno": 350,
            "node_id": 1211,
            "src": "12136:52:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 23,
                  "end_col_offset": 28,
                  "end_lineno": 350,
                  "id": "_from",
                  "lineno": 350,
                  "node_id": 1217,
                  "src": "12155:5:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 30,
                  "end_col_offset": 33,
                  "end_lineno": 350,
                  "id": "_to",
                  "lineno": 350,
                  "node_id": 1219,
                  "src": "12162:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 35,
                  "end_col_offset": 43,
                  "end_lineno": 350,
                  "id": "_tokenId",
                  "lineno": 350,
                  "node_id": 1221,
                  "src": "12167:8:0"
                },
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 45,
                  "end_col_offset": 55,
                  "end_lineno": 350,
                  "lineno": 350,
                  "node_id": 1223,
                  "src": "12177:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 45,
                    "end_col_offset": 48,
                    "end_lineno": 350,
                    "id": "msg",
                    "lineno": 350,
                    "node_id": 1224,
                    "src": "12177:3:0"
                  }
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 56,
              "end_lineno": 350,
              "func": {
                "ast_type": "Attribute",
                "attr": "_transferFrom",
                "col_offset": 4,
                "end_col_offset": 22,
                "end_lineno": 350,
                "lineno": 350,
                "node_id": 1213,
                "src": "12136:18:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 350,
                  "id": "self",
                  "lineno": 350,
                  "node_id": 1214,
                  "src": "12136:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 350,
              "node_id": 1212,
              "src": "12136:52:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 335,
            "id": "external",
            "lineno": 335,
            "node_id": 1227,
            "src": "11494:8:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 8,
            "end_lineno": 336,
            "id": "payable",
            "lineno": 336,
            "node_id": 1229,
            "src": "11504:7:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 349,
          "lineno": 338,
          "node_id": 1231,
          "src": "11583:548:0",
          "value": "\n    @dev Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n         address for this NFT.\n         Throws if `_from` is not the current owner.\n         Throws if `_to` is the zero address.\n         Throws if `_tokenId` is not a valid NFT.\n    @notice The caller is responsible to confirm that `_to` is capable of receiving NFTs or else\n            they maybe be permanently lost.\n    @param _from The current owner of the NFT.\n    @param _to The new owner.\n    @param _tokenId The NFT to transfer.\n    "
        },
        "end_col_offset": 56,
        "end_lineno": 350,
        "lineno": 337,
        "name": "transferFrom",
        "node_id": 1198,
        "pos": null,
        "returns": null,
        "src": "11512:676:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 15,
                "end_col_offset": 22,
                "end_lineno": 356,
                "id": "address",
                "lineno": 356,
                "node_id": 1235,
                "src": "12247:7:0"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 8,
              "end_col_offset": 22,
              "end_lineno": 356,
              "lineno": 356,
              "node_id": 1234,
              "src": "12240:14:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 13,
                "end_col_offset": 20,
                "end_lineno": 357,
                "id": "address",
                "lineno": 357,
                "node_id": 1238,
                "src": "12269:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 8,
              "end_col_offset": 20,
              "end_lineno": 357,
              "lineno": 357,
              "node_id": 1237,
              "src": "12264:12:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 18,
                "end_col_offset": 25,
                "end_lineno": 358,
                "id": "uint256",
                "lineno": 358,
                "node_id": 1241,
                "src": "12296:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 8,
              "end_col_offset": 25,
              "end_lineno": 358,
              "lineno": 358,
              "node_id": 1240,
              "src": "12286:17:0"
            },
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 15,
                "end_col_offset": 26,
                "end_lineno": 359,
                "lineno": 359,
                "node_id": 1244,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 15,
                  "end_col_offset": 26,
                  "end_lineno": 359,
                  "lineno": 359,
                  "node_id": 1249,
                  "src": "12320:11:0",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 21,
                    "end_col_offset": 25,
                    "end_lineno": 359,
                    "lineno": 359,
                    "node_id": 1247,
                    "src": "12326:4:0",
                    "value": 1024
                  }
                },
                "src": "12320:11:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 15,
                  "end_col_offset": 20,
                  "end_lineno": 359,
                  "id": "Bytes",
                  "lineno": 359,
                  "node_id": 1245,
                  "src": "12320:5:0"
                }
              },
              "arg": "_data",
              "ast_type": "arg",
              "col_offset": 8,
              "end_col_offset": 26,
              "end_lineno": 359,
              "lineno": 359,
              "node_id": 1243,
              "src": "12313:18:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 8,
          "default": null,
          "defaults": [
            {
              "ast_type": "Bytes",
              "col_offset": 27,
              "end_col_offset": 30,
              "end_lineno": 359,
              "lineno": 359,
              "node_id": 1250,
              "src": "12332:3:0",
              "value": "0x"
            }
          ],
          "end_col_offset": 30,
          "end_lineno": 359,
          "lineno": 356,
          "node_id": 1233,
          "src": "12240:95:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 56,
            "end_lineno": 375,
            "lineno": 375,
            "node_id": 1253,
            "src": "13116:52:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 23,
                  "end_col_offset": 28,
                  "end_lineno": 375,
                  "id": "_from",
                  "lineno": 375,
                  "node_id": 1259,
                  "src": "13135:5:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 30,
                  "end_col_offset": 33,
                  "end_lineno": 375,
                  "id": "_to",
                  "lineno": 375,
                  "node_id": 1261,
                  "src": "13142:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 35,
                  "end_col_offset": 43,
                  "end_lineno": 375,
                  "id": "_tokenId",
                  "lineno": 375,
                  "node_id": 1263,
                  "src": "13147:8:0"
                },
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 45,
                  "end_col_offset": 55,
                  "end_lineno": 375,
                  "lineno": 375,
                  "node_id": 1265,
                  "src": "13157:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 45,
                    "end_col_offset": 48,
                    "end_lineno": 375,
                    "id": "msg",
                    "lineno": 375,
                    "node_id": 1266,
                    "src": "13157:3:0"
                  }
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 56,
              "end_lineno": 375,
              "func": {
                "ast_type": "Attribute",
                "attr": "_transferFrom",
                "col_offset": 4,
                "end_col_offset": 22,
                "end_lineno": 375,
                "lineno": 375,
                "node_id": 1255,
                "src": "13116:18:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 375,
                  "id": "self",
                  "lineno": 375,
                  "node_id": 1256,
                  "src": "13116:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 375,
              "node_id": 1254,
              "src": "13116:52:0"
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "annotation": {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 27,
                  "end_lineno": 377,
                  "id": "bytes4",
                  "lineno": 377,
                  "node_id": 1277,
                  "src": "13253:6:0"
                },
                "ast_type": "AnnAssign",
                "col_offset": 8,
                "end_col_offset": 102,
                "end_lineno": 377,
                "lineno": 377,
                "node_id": 1274,
                "simple": 1,
                "src": "13240:94:0",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 19,
                  "end_lineno": 377,
                  "id": "returnValue",
                  "lineno": 377,
                  "node_id": 1275,
                  "src": "13240:11:0"
                },
                "value": {
                  "args": [
                    {
                      "ast_type": "Attribute",
                      "attr": "sender",
                      "col_offset": 67,
                      "end_col_offset": 77,
                      "end_lineno": 377,
                      "lineno": 377,
                      "node_id": 1287,
                      "src": "13299:10:0",
                      "value": {
                        "ast_type": "Name",
                        "col_offset": 67,
                        "end_col_offset": 70,
                        "end_lineno": 377,
                        "id": "msg",
                        "lineno": 377,
                        "node_id": 1288,
                        "src": "13299:3:0"
                      }
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 79,
                      "end_col_offset": 84,
                      "end_lineno": 377,
                      "id": "_from",
                      "lineno": 377,
                      "node_id": 1291,
                      "src": "13311:5:0"
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 86,
                      "end_col_offset": 94,
                      "end_lineno": 377,
                      "id": "_tokenId",
                      "lineno": 377,
                      "node_id": 1293,
                      "src": "13318:8:0"
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 96,
                      "end_col_offset": 101,
                      "end_lineno": 377,
                      "id": "_data",
                      "lineno": 377,
                      "node_id": 1295,
                      "src": "13328:5:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 30,
                  "end_col_offset": 102,
                  "end_lineno": 377,
                  "func": {
                    "ast_type": "Attribute",
                    "attr": "onERC721Received",
                    "col_offset": 30,
                    "end_col_offset": 66,
                    "end_lineno": 377,
                    "lineno": 377,
                    "node_id": 1280,
                    "src": "13262:36:0",
                    "value": {
                      "args": [
                        {
                          "ast_type": "Name",
                          "col_offset": 45,
                          "end_col_offset": 48,
                          "end_lineno": 377,
                          "id": "_to",
                          "lineno": 377,
                          "node_id": 1284,
                          "src": "13277:3:0"
                        }
                      ],
                      "ast_type": "Call",
                      "col_offset": 30,
                      "end_col_offset": 49,
                      "end_lineno": 377,
                      "func": {
                        "ast_type": "Name",
                        "col_offset": 30,
                        "end_col_offset": 44,
                        "end_lineno": 377,
                        "id": "ERC721Receiver",
                        "lineno": 377,
                        "node_id": 1282,
                        "src": "13262:14:0"
                      },
                      "keyword": null,
                      "keywords": [],
                      "lineno": 377,
                      "node_id": 1281,
                      "src": "13262:19:0"
                    }
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 377,
                  "node_id": 1279,
                  "src": "13262:72:0"
                }
              },
              {
                "ast_type": "Assert",
                "col_offset": 8,
                "end_col_offset": 110,
                "end_lineno": 379,
                "lineno": 379,
                "msg": null,
                "node_id": 1297,
                "src": "13442:102:0",
                "test": {
                  "ast_type": "Compare",
                  "col_offset": 15,
                  "end_col_offset": 110,
                  "end_lineno": 379,
                  "left": {
                    "ast_type": "Name",
                    "col_offset": 15,
                    "end_col_offset": 26,
                    "end_lineno": 379,
                    "id": "returnValue",
                    "lineno": 379,
                    "node_id": 1299,
                    "src": "13449:11:0"
                  },
                  "lineno": 379,
                  "node_id": 1298,
                  "op": {
                    "ast_type": "Eq",
                    "col_offset": 15,
                    "end_col_offset": 110,
                    "end_lineno": 379,
                    "lineno": 379,
                    "node_id": 1838,
                    "src": "13449:95:0"
                  },
                  "right": {
                    "args": [
                      {
                        "ast_type": "Str",
                        "col_offset": 40,
                        "end_col_offset": 89,
                        "end_lineno": 379,
                        "lineno": 379,
                        "node_id": 1305,
                        "src": "13474:49:0",
                        "value": "onERC721Received(address,address,uint256,bytes)"
                      }
                    ],
                    "ast_type": "Call",
                    "col_offset": 30,
                    "end_col_offset": 110,
                    "end_lineno": 379,
                    "func": {
                      "ast_type": "Name",
                      "col_offset": 30,
                      "end_col_offset": 39,
                      "end_lineno": 379,
                      "id": "method_id",
                      "lineno": 379,
                      "node_id": 1303,
                      "src": "13464:9:0"
                    },
                    "keyword": null,
                    "keywords": [
                      {
                        "arg": "output_type",
                        "ast_type": "keyword",
                        "col_offset": 91,
                        "end_col_offset": 109,
                        "end_lineno": 379,
                        "lineno": 379,
                        "node_id": 1306,
                        "src": "13525:18:0",
                        "value": {
                          "ast_type": "Name",
                          "col_offset": 103,
                          "end_col_offset": 109,
                          "end_lineno": 379,
                          "id": "bytes4",
                          "lineno": 379,
                          "node_id": 1307,
                          "src": "13537:6:0"
                        }
                      }
                    ],
                    "lineno": 379,
                    "node_id": 1302,
                    "src": "13464:80:0"
                  },
                  "src": "13449:95:0"
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 110,
            "end_lineno": 379,
            "lineno": 376,
            "node_id": 1269,
            "orelse": [],
            "src": "13173:371:0",
            "test": {
              "ast_type": "Attribute",
              "attr": "is_contract",
              "col_offset": 7,
              "end_col_offset": 22,
              "end_lineno": 376,
              "lineno": 376,
              "node_id": 1270,
              "src": "13176:15:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 10,
                "end_lineno": 376,
                "id": "_to",
                "lineno": 376,
                "node_id": 1271,
                "src": "13176:3:0"
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 353,
            "id": "external",
            "lineno": 353,
            "node_id": 1309,
            "src": "12192:8:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 8,
            "end_lineno": 354,
            "id": "payable",
            "lineno": 354,
            "node_id": 1311,
            "src": "12202:7:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 374,
          "lineno": 361,
          "node_id": 1313,
          "src": "12347:764:0",
          "value": "\n    @dev Transfers the ownership of an NFT from one address to another address.\n         Throws unless `msg.sender` is the current owner, an authorized operator, or the\n         approved address for this NFT.\n         Throws if `_from` is not the current owner.\n         Throws if `_to` is the zero address.\n         Throws if `_tokenId` is not a valid NFT.\n         If `_to` is a smart contract, it calls `onERC721Received` on `_to` and throws if\n         the return value is not `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n    @param _from The current owner of the NFT.\n    @param _to The new owner.\n    @param _tokenId The NFT to transfer.\n    @param _data Additional data with no specified format, sent in call to `_to`.\n    "
        },
        "end_col_offset": 110,
        "end_lineno": 379,
        "lineno": 355,
        "name": "safeTransferFrom",
        "node_id": 1232,
        "pos": null,
        "returns": null,
        "src": "12210:1334:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 23,
                "end_col_offset": 30,
                "end_lineno": 384,
                "id": "address",
                "lineno": 384,
                "node_id": 1317,
                "src": "13589:7:0"
              },
              "arg": "_approved",
              "ast_type": "arg",
              "col_offset": 12,
              "end_col_offset": 30,
              "end_lineno": 384,
              "lineno": 384,
              "node_id": 1316,
              "src": "13578:18:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 42,
                "end_col_offset": 49,
                "end_lineno": 384,
                "id": "uint256",
                "lineno": 384,
                "node_id": 1320,
                "src": "13608:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 32,
              "end_col_offset": 49,
              "end_lineno": 384,
              "lineno": 384,
              "node_id": 1319,
              "src": "13598:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 12,
          "default": null,
          "defaults": [],
          "end_col_offset": 49,
          "end_lineno": 384,
          "lineno": 384,
          "node_id": 1315,
          "src": "13578:37:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 393,
              "id": "address",
              "lineno": 393,
              "node_id": 1327,
              "src": "14163:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 393,
            "lineno": 393,
            "node_id": 1324,
            "simple": 1,
            "src": "14156:41:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 393,
              "id": "owner",
              "lineno": 393,
              "node_id": 1325,
              "src": "14156:5:0"
            },
            "value": {
              "ast_type": "Subscript",
              "col_offset": 21,
              "end_col_offset": 45,
              "end_lineno": 393,
              "lineno": 393,
              "node_id": 1329,
              "slice": {
                "ast_type": "Index",
                "col_offset": 21,
                "end_col_offset": 45,
                "end_lineno": 393,
                "lineno": 393,
                "node_id": 1337,
                "src": "14173:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 36,
                  "end_col_offset": 44,
                  "end_lineno": 393,
                  "id": "_tokenId",
                  "lineno": 393,
                  "node_id": 1334,
                  "src": "14188:8:0"
                }
              },
              "src": "14173:24:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "idToOwner",
                "col_offset": 21,
                "end_col_offset": 35,
                "end_lineno": 393,
                "lineno": 393,
                "node_id": 1330,
                "src": "14173:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 25,
                  "end_lineno": 393,
                  "id": "self",
                  "lineno": 393,
                  "node_id": 1331,
                  "src": "14173:4:0"
                }
              }
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 395,
            "lineno": 395,
            "msg": null,
            "node_id": 1338,
            "src": "14248:30:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 34,
              "end_lineno": 395,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 16,
                "end_lineno": 395,
                "id": "owner",
                "lineno": 395,
                "node_id": 1340,
                "src": "14255:5:0"
              },
              "lineno": 395,
              "node_id": 1339,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 34,
                "end_lineno": 395,
                "lineno": 395,
                "node_id": 1906,
                "src": "14255:23:0"
              },
              "right": {
                "args": [
                  {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 33,
                    "end_lineno": 395,
                    "id": "address",
                    "lineno": 395,
                    "node_id": 1346,
                    "src": "14270:7:0"
                  }
                ],
                "ast_type": "Call",
                "col_offset": 20,
                "end_col_offset": 34,
                "end_lineno": 395,
                "func": {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 25,
                  "end_lineno": 395,
                  "id": "empty",
                  "lineno": 395,
                  "node_id": 1344,
                  "src": "14264:5:0"
                },
                "keyword": null,
                "keywords": [],
                "lineno": 395,
                "node_id": 1343,
                "src": "14264:14:0"
              },
              "src": "14255:23:0"
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 397,
            "lineno": 397,
            "msg": null,
            "node_id": 1348,
            "src": "14332:25:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 29,
              "end_lineno": 397,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 20,
                "end_lineno": 397,
                "id": "_approved",
                "lineno": 397,
                "node_id": 1350,
                "src": "14339:9:0"
              },
              "lineno": 397,
              "node_id": 1349,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 29,
                "end_lineno": 397,
                "lineno": 397,
                "node_id": 1906,
                "src": "14339:18:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 24,
                "end_col_offset": 29,
                "end_lineno": 397,
                "id": "owner",
                "lineno": 397,
                "node_id": 1353,
                "src": "14352:5:0"
              },
              "src": "14339:18:0"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 19,
              "end_col_offset": 23,
              "end_lineno": 399,
              "id": "bool",
              "lineno": 399,
              "node_id": 1358,
              "src": "14402:4:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 64,
            "end_lineno": 399,
            "lineno": 399,
            "node_id": 1355,
            "simple": 1,
            "src": "14387:60:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 399,
              "id": "senderIsOwner",
              "lineno": 399,
              "node_id": 1356,
              "src": "14387:13:0"
            },
            "value": {
              "ast_type": "Compare",
              "col_offset": 26,
              "end_col_offset": 64,
              "end_lineno": 399,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 26,
                "end_col_offset": 50,
                "end_lineno": 399,
                "lineno": 399,
                "node_id": 1361,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 26,
                  "end_col_offset": 50,
                  "end_lineno": 399,
                  "lineno": 399,
                  "node_id": 1369,
                  "src": "14409:24:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 41,
                    "end_col_offset": 49,
                    "end_lineno": 399,
                    "id": "_tokenId",
                    "lineno": 399,
                    "node_id": 1366,
                    "src": "14424:8:0"
                  }
                },
                "src": "14409:24:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "idToOwner",
                  "col_offset": 26,
                  "end_col_offset": 40,
                  "end_lineno": 399,
                  "lineno": 399,
                  "node_id": 1362,
                  "src": "14409:14:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 30,
                    "end_lineno": 399,
                    "id": "self",
                    "lineno": 399,
                    "node_id": 1363,
                    "src": "14409:4:0"
                  }
                }
              },
              "lineno": 399,
              "node_id": 1360,
              "op": {
                "ast_type": "Eq",
                "col_offset": 26,
                "end_col_offset": 64,
                "end_lineno": 399,
                "lineno": 399,
                "node_id": 1838,
                "src": "14409:38:0"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "sender",
                "col_offset": 54,
                "end_col_offset": 64,
                "end_lineno": 399,
                "lineno": 399,
                "node_id": 1371,
                "src": "14437:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 54,
                  "end_col_offset": 57,
                  "end_lineno": 399,
                  "id": "msg",
                  "lineno": 399,
                  "node_id": 1372,
                  "src": "14437:3:0"
                }
              },
              "src": "14409:38:0"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 28,
              "end_col_offset": 32,
              "end_lineno": 400,
              "id": "bool",
              "lineno": 400,
              "node_id": 1378,
              "src": "14476:4:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 77,
            "end_lineno": 400,
            "lineno": 400,
            "node_id": 1375,
            "simple": 1,
            "src": "14452:73:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 26,
              "end_lineno": 400,
              "id": "senderIsApprovedForAll",
              "lineno": 400,
              "node_id": 1376,
              "src": "14452:22:0"
            },
            "value": {
              "ast_type": "Subscript",
              "col_offset": 35,
              "end_col_offset": 77,
              "end_lineno": 400,
              "lineno": 400,
              "node_id": 1380,
              "slice": {
                "ast_type": "Index",
                "col_offset": 35,
                "end_col_offset": 77,
                "end_lineno": 400,
                "lineno": 400,
                "node_id": 1395,
                "src": "14483:42:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 66,
                  "end_col_offset": 76,
                  "end_lineno": 400,
                  "lineno": 400,
                  "node_id": 1390,
                  "src": "14514:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 66,
                    "end_col_offset": 69,
                    "end_lineno": 400,
                    "id": "msg",
                    "lineno": 400,
                    "node_id": 1391,
                    "src": "14514:3:0"
                  }
                }
              },
              "src": "14483:42:0",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 36,
                "end_col_offset": 64,
                "end_lineno": 400,
                "lineno": 400,
                "node_id": 1381,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 36,
                  "end_col_offset": 64,
                  "end_lineno": 400,
                  "lineno": 400,
                  "node_id": 1389,
                  "src": "14484:28:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 58,
                    "end_col_offset": 63,
                    "end_lineno": 400,
                    "id": "owner",
                    "lineno": 400,
                    "node_id": 1386,
                    "src": "14506:5:0"
                  }
                },
                "src": "14484:28:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "ownerToOperators",
                  "col_offset": 36,
                  "end_col_offset": 57,
                  "end_lineno": 400,
                  "lineno": 400,
                  "node_id": 1382,
                  "src": "14484:21:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 36,
                    "end_col_offset": 40,
                    "end_lineno": 400,
                    "id": "self",
                    "lineno": 400,
                    "node_id": 1383,
                    "src": "14484:4:0"
                  }
                }
              }
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 52,
            "end_lineno": 401,
            "lineno": 401,
            "msg": null,
            "node_id": 1396,
            "src": "14530:48:0",
            "test": {
              "ast_type": "BoolOp",
              "col_offset": 12,
              "end_col_offset": 51,
              "end_lineno": 401,
              "lineno": 401,
              "node_id": 1397,
              "op": {
                "ast_type": "Or",
                "col_offset": 12,
                "end_col_offset": 51,
                "end_lineno": 401,
                "lineno": 401,
                "node_id": 1398,
                "src": "14538:39:0"
              },
              "src": "14538:39:0",
              "values": [
                {
                  "ast_type": "Name",
                  "col_offset": 12,
                  "end_col_offset": 25,
                  "end_lineno": 401,
                  "id": "senderIsOwner",
                  "lineno": 401,
                  "node_id": 1399,
                  "src": "14538:13:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 51,
                  "end_lineno": 401,
                  "id": "senderIsApprovedForAll",
                  "lineno": 401,
                  "node_id": 1401,
                  "src": "14555:22:0"
                }
              ]
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 44,
            "end_lineno": 403,
            "lineno": 403,
            "node_id": 1403,
            "src": "14606:40:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 32,
              "end_lineno": 403,
              "lineno": 403,
              "node_id": 1404,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 32,
                "end_lineno": 403,
                "lineno": 403,
                "node_id": 1412,
                "src": "14606:28:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 23,
                  "end_col_offset": 31,
                  "end_lineno": 403,
                  "id": "_tokenId",
                  "lineno": 403,
                  "node_id": 1409,
                  "src": "14625:8:0"
                }
              },
              "src": "14606:28:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "idToApprovals",
                "col_offset": 4,
                "end_col_offset": 22,
                "end_lineno": 403,
                "lineno": 403,
                "node_id": 1405,
                "src": "14606:18:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 403,
                  "id": "self",
                  "lineno": 403,
                  "node_id": 1406,
                  "src": "14606:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 35,
              "end_col_offset": 44,
              "end_lineno": 403,
              "id": "_approved",
              "lineno": 403,
              "node_id": 1413,
              "src": "14637:9:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 44,
            "end_lineno": 404,
            "lineno": 404,
            "node_id": 1416,
            "src": "14651:40:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 17,
                  "end_col_offset": 22,
                  "end_lineno": 404,
                  "id": "owner",
                  "lineno": 404,
                  "node_id": 1420,
                  "src": "14664:5:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 24,
                  "end_col_offset": 33,
                  "end_lineno": 404,
                  "id": "_approved",
                  "lineno": 404,
                  "node_id": 1422,
                  "src": "14671:9:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 35,
                  "end_col_offset": 43,
                  "end_lineno": 404,
                  "id": "_tokenId",
                  "lineno": 404,
                  "node_id": 1424,
                  "src": "14682:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 44,
              "end_lineno": 404,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 404,
                "id": "Approval",
                "lineno": 404,
                "node_id": 1418,
                "src": "14655:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 404,
              "node_id": 1417,
              "src": "14655:36:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 382,
            "id": "external",
            "lineno": 382,
            "node_id": 1426,
            "src": "13548:8:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 8,
            "end_lineno": 383,
            "id": "payable",
            "lineno": 383,
            "node_id": 1428,
            "src": "13558:7:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 392,
          "lineno": 385,
          "node_id": 1430,
          "src": "13622:529:0",
          "value": "\n    @dev Set or reaffirm the approved address for an NFT. The zero address indicates there is no approved address.\n         Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\n         Throws if `_tokenId` is not a valid NFT. (NOTE: This is not written the EIP)\n         Throws if `_approved` is the current owner. (NOTE: This is not written the EIP)\n    @param _approved Address to be approved for the given NFT ID.\n    @param _tokenId ID of the token to be approved.\n    "
        },
        "end_col_offset": 44,
        "end_lineno": 404,
        "lineno": 384,
        "name": "approve",
        "node_id": 1314,
        "pos": null,
        "returns": null,
        "src": "13566:1125:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 33,
                "end_col_offset": 40,
                "end_lineno": 408,
                "id": "address",
                "lineno": 408,
                "node_id": 1434,
                "src": "14737:7:0"
              },
              "arg": "_operator",
              "ast_type": "arg",
              "col_offset": 22,
              "end_col_offset": 40,
              "end_lineno": 408,
              "lineno": 408,
              "node_id": 1433,
              "src": "14726:18:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 53,
                "end_col_offset": 57,
                "end_lineno": 408,
                "id": "bool",
                "lineno": 408,
                "node_id": 1437,
                "src": "14757:4:0"
              },
              "arg": "_approved",
              "ast_type": "arg",
              "col_offset": 42,
              "end_col_offset": 57,
              "end_lineno": 408,
              "lineno": 408,
              "node_id": 1436,
              "src": "14746:15:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 22,
          "default": null,
          "defaults": [],
          "end_col_offset": 57,
          "end_lineno": 408,
          "lineno": 408,
          "node_id": 1432,
          "src": "14726:35:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 418,
            "lineno": 418,
            "msg": null,
            "node_id": 1441,
            "src": "15306:30:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 34,
              "end_lineno": 418,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 20,
                "end_lineno": 418,
                "id": "_operator",
                "lineno": 418,
                "node_id": 1443,
                "src": "15313:9:0"
              },
              "lineno": 418,
              "node_id": 1442,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 34,
                "end_lineno": 418,
                "lineno": 418,
                "node_id": 1906,
                "src": "15313:23:0"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "sender",
                "col_offset": 24,
                "end_col_offset": 34,
                "end_lineno": 418,
                "lineno": 418,
                "node_id": 1446,
                "src": "15326:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 24,
                  "end_col_offset": 27,
                  "end_lineno": 418,
                  "id": "msg",
                  "lineno": 418,
                  "node_id": 1447,
                  "src": "15326:3:0"
                }
              },
              "src": "15313:23:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 60,
            "end_lineno": 419,
            "lineno": 419,
            "node_id": 1450,
            "src": "15341:56:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 48,
              "end_lineno": 419,
              "lineno": 419,
              "node_id": 1451,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 48,
                "end_lineno": 419,
                "lineno": 419,
                "node_id": 1466,
                "src": "15341:44:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 38,
                  "end_col_offset": 47,
                  "end_lineno": 419,
                  "id": "_operator",
                  "lineno": 419,
                  "node_id": 1463,
                  "src": "15375:9:0"
                }
              },
              "src": "15341:44:0",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 4,
                "end_col_offset": 37,
                "end_lineno": 419,
                "lineno": 419,
                "node_id": 1452,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 4,
                  "end_col_offset": 37,
                  "end_lineno": 419,
                  "lineno": 419,
                  "node_id": 1462,
                  "src": "15341:33:0",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "sender",
                    "col_offset": 26,
                    "end_col_offset": 36,
                    "end_lineno": 419,
                    "lineno": 419,
                    "node_id": 1457,
                    "src": "15363:10:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 26,
                      "end_col_offset": 29,
                      "end_lineno": 419,
                      "id": "msg",
                      "lineno": 419,
                      "node_id": 1458,
                      "src": "15363:3:0"
                    }
                  }
                },
                "src": "15341:33:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "ownerToOperators",
                  "col_offset": 4,
                  "end_col_offset": 25,
                  "end_lineno": 419,
                  "lineno": 419,
                  "node_id": 1453,
                  "src": "15341:21:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 4,
                    "end_col_offset": 8,
                    "end_lineno": 419,
                    "id": "self",
                    "lineno": 419,
                    "node_id": 1454,
                    "src": "15341:4:0"
                  }
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 51,
              "end_col_offset": 60,
              "end_lineno": 419,
              "id": "_approved",
              "lineno": 419,
              "node_id": 1467,
              "src": "15388:9:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 56,
            "end_lineno": 420,
            "lineno": 420,
            "node_id": 1470,
            "src": "15402:52:0",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 23,
                  "end_col_offset": 33,
                  "end_lineno": 420,
                  "lineno": 420,
                  "node_id": 1474,
                  "src": "15421:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 23,
                    "end_col_offset": 26,
                    "end_lineno": 420,
                    "id": "msg",
                    "lineno": 420,
                    "node_id": 1475,
                    "src": "15421:3:0"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 35,
                  "end_col_offset": 44,
                  "end_lineno": 420,
                  "id": "_operator",
                  "lineno": 420,
                  "node_id": 1478,
                  "src": "15433:9:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 46,
                  "end_col_offset": 55,
                  "end_lineno": 420,
                  "id": "_approved",
                  "lineno": 420,
                  "node_id": 1480,
                  "src": "15444:9:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 56,
              "end_lineno": 420,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 22,
                "end_lineno": 420,
                "id": "ApprovalForAll",
                "lineno": 420,
                "node_id": 1472,
                "src": "15406:14:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 420,
              "node_id": 1471,
              "src": "15406:48:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 407,
            "id": "external",
            "lineno": 407,
            "node_id": 1482,
            "src": "14695:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 416,
          "lineno": 409,
          "node_id": 1484,
          "src": "14768:485:0",
          "value": "\n    @dev Enables or disables approval for a third party (\"operator\") to manage all of\n         `msg.sender`'s assets. It also emits the ApprovalForAll event.\n         Throws if `_operator` is the `msg.sender`. (NOTE: This is not written the EIP)\n    @notice This works even if sender doesn't own any tokens at the time.\n    @param _operator Address to add to the set of authorized operators.\n    @param _approved True if the operators is approved, false to revoke approval.\n    "
        },
        "end_col_offset": 56,
        "end_lineno": 420,
        "lineno": 408,
        "name": "setApprovalForAll",
        "node_id": 1431,
        "pos": null,
        "returns": null,
        "src": "14704:750:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 21,
                "end_lineno": 426,
                "id": "address",
                "lineno": 426,
                "node_id": 1488,
                "src": "15512:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 9,
              "end_col_offset": 21,
              "end_lineno": 426,
              "lineno": 426,
              "node_id": 1487,
              "src": "15507:12:0"
            },
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 34,
                "end_col_offset": 44,
                "end_lineno": 426,
                "lineno": 426,
                "node_id": 1491,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 34,
                  "end_col_offset": 44,
                  "end_lineno": 426,
                  "lineno": 426,
                  "node_id": 1496,
                  "src": "15532:10:0",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 41,
                    "end_col_offset": 43,
                    "end_lineno": 426,
                    "lineno": 426,
                    "node_id": 1494,
                    "src": "15539:2:0",
                    "value": 64
                  }
                },
                "src": "15532:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 34,
                  "end_col_offset": 40,
                  "end_lineno": 426,
                  "id": "String",
                  "lineno": 426,
                  "node_id": 1492,
                  "src": "15532:6:0"
                }
              },
              "arg": "_tokenURI",
              "ast_type": "arg",
              "col_offset": 23,
              "end_col_offset": 44,
              "end_lineno": 426,
              "lineno": 426,
              "node_id": 1490,
              "src": "15521:21:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 9,
          "default": null,
          "defaults": [],
          "end_col_offset": 44,
          "end_lineno": 426,
          "lineno": 426,
          "node_id": 1486,
          "src": "15507:35:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 36,
            "end_lineno": 437,
            "lineno": 437,
            "msg": null,
            "node_id": 1499,
            "src": "15989:32:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 36,
              "end_lineno": 437,
              "left": {
                "ast_type": "Attribute",
                "attr": "sender",
                "col_offset": 11,
                "end_col_offset": 21,
                "end_lineno": 437,
                "lineno": 437,
                "node_id": 1501,
                "src": "15996:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 14,
                  "end_lineno": 437,
                  "id": "msg",
                  "lineno": 437,
                  "node_id": 1502,
                  "src": "15996:3:0"
                }
              },
              "lineno": 437,
              "node_id": 1500,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 36,
                "end_lineno": 437,
                "lineno": 437,
                "node_id": 1838,
                "src": "15996:25:0"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "minter",
                "col_offset": 25,
                "end_col_offset": 36,
                "end_lineno": 437,
                "lineno": 437,
                "node_id": 1506,
                "src": "16010:11:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 25,
                  "end_col_offset": 29,
                  "end_lineno": 437,
                  "id": "self",
                  "lineno": 437,
                  "node_id": 1507,
                  "src": "16010:4:0"
                }
              },
              "src": "15996:25:0"
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 32,
            "end_lineno": 439,
            "lineno": 439,
            "msg": null,
            "node_id": 1510,
            "src": "16064:28:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 32,
              "end_lineno": 439,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 14,
                "end_lineno": 439,
                "id": "_to",
                "lineno": 439,
                "node_id": 1512,
                "src": "16071:3:0"
              },
              "lineno": 439,
              "node_id": 1511,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 32,
                "end_lineno": 439,
                "lineno": 439,
                "node_id": 1906,
                "src": "16071:21:0"
              },
              "right": {
                "args": [
                  {
                    "ast_type": "Name",
                    "col_offset": 24,
                    "end_col_offset": 31,
                    "end_lineno": 439,
                    "id": "address",
                    "lineno": 439,
                    "node_id": 1518,
                    "src": "16084:7:0"
                  }
                ],
                "ast_type": "Call",
                "col_offset": 18,
                "end_col_offset": 32,
                "end_lineno": 439,
                "func": {
                  "ast_type": "Name",
                  "col_offset": 18,
                  "end_col_offset": 23,
                  "end_lineno": 439,
                  "id": "empty",
                  "lineno": 439,
                  "node_id": 1516,
                  "src": "16078:5:0"
                },
                "keyword": null,
                "keywords": [],
                "lineno": 439,
                "node_id": 1515,
                "src": "16078:14:0"
              },
              "src": "16071:21:0"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 16,
              "end_col_offset": 23,
              "end_lineno": 442,
              "id": "bytes32",
              "lineno": 442,
              "node_id": 1523,
              "src": "16220:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 59,
            "end_lineno": 442,
            "lineno": 442,
            "node_id": 1520,
            "simple": 1,
            "src": "16208:55:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 14,
              "end_lineno": 442,
              "id": "uniqueHash",
              "lineno": 442,
              "node_id": 1521,
              "src": "16208:10:0"
            },
            "value": {
              "args": [
                {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 48,
                      "end_col_offset": 57,
                      "end_lineno": 442,
                      "id": "_tokenURI",
                      "lineno": 442,
                      "node_id": 1531,
                      "src": "16252:9:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 36,
                  "end_col_offset": 58,
                  "end_lineno": 442,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 36,
                    "end_col_offset": 47,
                    "end_lineno": 442,
                    "id": "_abi_encode",
                    "lineno": 442,
                    "node_id": 1529,
                    "src": "16240:11:0"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 442,
                  "node_id": 1528,
                  "src": "16240:22:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 26,
              "end_col_offset": 59,
              "end_lineno": 442,
              "func": {
                "ast_type": "Name",
                "col_offset": 26,
                "end_col_offset": 35,
                "end_lineno": 442,
                "id": "keccak256",
                "lineno": 442,
                "node_id": 1526,
                "src": "16230:9:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 442,
              "node_id": 1525,
              "src": "16230:33:0"
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 76,
            "end_lineno": 443,
            "lineno": 443,
            "msg": {
              "ast_type": "Str",
              "col_offset": 55,
              "end_col_offset": 76,
              "end_lineno": 443,
              "lineno": 443,
              "node_id": 1546,
              "src": "16319:21:0",
              "value": "token is non-unique"
            },
            "node_id": 1533,
            "src": "16268:72:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 53,
              "end_lineno": 443,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 48,
                "end_lineno": 443,
                "lineno": 443,
                "node_id": 1535,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 11,
                  "end_col_offset": 48,
                  "end_lineno": 443,
                  "lineno": 443,
                  "node_id": 1543,
                  "src": "16275:37:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 37,
                    "end_col_offset": 47,
                    "end_lineno": 443,
                    "id": "uniqueHash",
                    "lineno": 443,
                    "node_id": 1540,
                    "src": "16301:10:0"
                  }
                },
                "src": "16275:37:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "uniqueHashesForToken",
                  "col_offset": 11,
                  "end_col_offset": 36,
                  "end_lineno": 443,
                  "lineno": 443,
                  "node_id": 1536,
                  "src": "16275:25:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 11,
                    "end_col_offset": 15,
                    "end_lineno": 443,
                    "id": "self",
                    "lineno": 443,
                    "node_id": 1537,
                    "src": "16275:4:0"
                  }
                }
              },
              "lineno": 443,
              "node_id": 1534,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 53,
                "end_lineno": 443,
                "lineno": 443,
                "node_id": 1838,
                "src": "16275:42:0"
              },
              "right": {
                "ast_type": "Int",
                "col_offset": 52,
                "end_col_offset": 53,
                "end_lineno": 443,
                "lineno": 443,
                "node_id": 1545,
                "src": "16316:1:0",
                "value": 0
              },
              "src": "16275:42:0"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 42,
            "end_lineno": 445,
            "lineno": 445,
            "node_id": 1547,
            "src": "16346:38:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 24,
                  "end_lineno": 445,
                  "id": "_to",
                  "lineno": 445,
                  "node_id": 1553,
                  "src": "16363:3:0"
                },
                {
                  "ast_type": "Attribute",
                  "attr": "tokenCount",
                  "col_offset": 26,
                  "end_col_offset": 41,
                  "end_lineno": 445,
                  "lineno": 445,
                  "node_id": 1555,
                  "src": "16368:15:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 30,
                    "end_lineno": 445,
                    "id": "self",
                    "lineno": 445,
                    "node_id": 1556,
                    "src": "16368:4:0"
                  }
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 42,
              "end_lineno": 445,
              "func": {
                "ast_type": "Attribute",
                "attr": "_addTokenTo",
                "col_offset": 4,
                "end_col_offset": 20,
                "end_lineno": 445,
                "lineno": 445,
                "node_id": 1549,
                "src": "16346:16:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 445,
                  "id": "self",
                  "lineno": 445,
                  "node_id": 1550,
                  "src": "16346:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 445,
              "node_id": 1548,
              "src": "16346:38:0"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 49,
            "end_lineno": 447,
            "lineno": 447,
            "node_id": 1559,
            "src": "16431:45:0",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "tokenCount",
                  "col_offset": 22,
                  "end_col_offset": 37,
                  "end_lineno": 447,
                  "lineno": 447,
                  "node_id": 1565,
                  "src": "16449:15:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 22,
                    "end_col_offset": 26,
                    "end_lineno": 447,
                    "id": "self",
                    "lineno": 447,
                    "node_id": 1566,
                    "src": "16449:4:0"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 39,
                  "end_col_offset": 48,
                  "end_lineno": 447,
                  "id": "_tokenURI",
                  "lineno": 447,
                  "node_id": 1569,
                  "src": "16466:9:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 49,
              "end_lineno": 447,
              "func": {
                "ast_type": "Attribute",
                "attr": "_addTokenURI",
                "col_offset": 4,
                "end_col_offset": 21,
                "end_lineno": 447,
                "lineno": 447,
                "node_id": 1561,
                "src": "16431:17:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 447,
                  "id": "self",
                  "lineno": 447,
                  "node_id": 1562,
                  "src": "16431:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 447,
              "node_id": 1560,
              "src": "16431:45:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 54,
            "end_lineno": 448,
            "lineno": 448,
            "node_id": 1572,
            "src": "16481:50:0",
            "value": {
              "args": [
                {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 23,
                      "end_col_offset": 30,
                      "end_lineno": 448,
                      "id": "address",
                      "lineno": 448,
                      "node_id": 1579,
                      "src": "16500:7:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 17,
                  "end_col_offset": 31,
                  "end_lineno": 448,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 17,
                    "end_col_offset": 22,
                    "end_lineno": 448,
                    "id": "empty",
                    "lineno": 448,
                    "node_id": 1577,
                    "src": "16494:5:0"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 448,
                  "node_id": 1576,
                  "src": "16494:14:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 33,
                  "end_col_offset": 36,
                  "end_lineno": 448,
                  "id": "_to",
                  "lineno": 448,
                  "node_id": 1581,
                  "src": "16510:3:0"
                },
                {
                  "ast_type": "Attribute",
                  "attr": "tokenCount",
                  "col_offset": 38,
                  "end_col_offset": 53,
                  "end_lineno": 448,
                  "lineno": 448,
                  "node_id": 1583,
                  "src": "16515:15:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 38,
                    "end_col_offset": 42,
                    "end_lineno": 448,
                    "id": "self",
                    "lineno": 448,
                    "node_id": 1584,
                    "src": "16515:4:0"
                  }
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 54,
              "end_lineno": 448,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 448,
                "id": "Transfer",
                "lineno": 448,
                "node_id": 1574,
                "src": "16485:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 448,
              "node_id": 1573,
              "src": "16485:46:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 24,
            "end_lineno": 450,
            "lineno": 450,
            "node_id": 1587,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 24,
              "end_lineno": 450,
              "lineno": 450,
              "node_id": 1592,
              "src": "16563:20:0"
            },
            "src": "16563:20:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "tokenCount",
              "col_offset": 4,
              "end_col_offset": 19,
              "end_lineno": 450,
              "lineno": 450,
              "node_id": 1588,
              "src": "16563:15:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 450,
                "id": "self",
                "lineno": 450,
                "node_id": 1589,
                "src": "16563:4:0"
              }
            },
            "value": {
              "ast_type": "Int",
              "col_offset": 23,
              "end_col_offset": 24,
              "end_lineno": 450,
              "lineno": 450,
              "node_id": 1593,
              "src": "16582:1:0",
              "value": 1
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 451,
            "lineno": 451,
            "node_id": 1594,
            "src": "16588:11:0",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 451,
              "lineno": 451,
              "node_id": 1595,
              "src": "16595:4:0",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 425,
            "id": "external",
            "lineno": 425,
            "node_id": 1596,
            "src": "15489:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 435,
          "lineno": 427,
          "node_id": 1600,
          "src": "15557:380:0",
          "value": "\n    @dev Function to mint tokens\n         Throws if `msg.sender` is not the minter.\n         Throws if `_to` is zero address.\n         Throws if `_tokenId` is owned by someone.\n    @param _to The address that will receive the minted tokens.\n    @param _tokenURI The token uri of next token to mint.\n    @return A boolean that indicates if the operation was successful.\n    "
        },
        "end_col_offset": 15,
        "end_lineno": 451,
        "lineno": 426,
        "name": "mint",
        "node_id": 1485,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 49,
          "end_col_offset": 53,
          "end_lineno": 426,
          "id": "bool",
          "lineno": 426,
          "node_id": 1598,
          "src": "15547:4:0"
        },
        "src": "15498:1101:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 19,
                "end_col_offset": 26,
                "end_lineno": 455,
                "id": "uint256",
                "lineno": 455,
                "node_id": 1604,
                "src": "16631:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 9,
              "end_col_offset": 26,
              "end_lineno": 455,
              "lineno": 455,
              "node_id": 1603,
              "src": "16621:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 9,
          "default": null,
          "defaults": [],
          "end_col_offset": 26,
          "end_lineno": 455,
          "lineno": 455,
          "node_id": 1602,
          "src": "16621:17:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 56,
            "end_lineno": 464,
            "lineno": 464,
            "msg": null,
            "node_id": 1608,
            "src": "16970:52:0",
            "test": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 35,
                  "end_col_offset": 45,
                  "end_lineno": 464,
                  "lineno": 464,
                  "node_id": 1614,
                  "src": "17001:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 35,
                    "end_col_offset": 38,
                    "end_lineno": 464,
                    "id": "msg",
                    "lineno": 464,
                    "node_id": 1615,
                    "src": "17001:3:0"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 47,
                  "end_col_offset": 55,
                  "end_lineno": 464,
                  "id": "_tokenId",
                  "lineno": 464,
                  "node_id": 1618,
                  "src": "17013:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 11,
              "end_col_offset": 56,
              "end_lineno": 464,
              "func": {
                "ast_type": "Attribute",
                "attr": "_isApprovedOrOwner",
                "col_offset": 11,
                "end_col_offset": 34,
                "end_lineno": 464,
                "lineno": 464,
                "node_id": 1610,
                "src": "16977:23:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 464,
                  "id": "self",
                  "lineno": 464,
                  "node_id": 1611,
                  "src": "16977:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 464,
              "node_id": 1609,
              "src": "16977:45:0"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 465,
              "id": "address",
              "lineno": 465,
              "node_id": 1623,
              "src": "17034:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 465,
            "lineno": 465,
            "node_id": 1620,
            "simple": 1,
            "src": "17027:41:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 465,
              "id": "owner",
              "lineno": 465,
              "node_id": 1621,
              "src": "17027:5:0"
            },
            "value": {
              "ast_type": "Subscript",
              "col_offset": 21,
              "end_col_offset": 45,
              "end_lineno": 465,
              "lineno": 465,
              "node_id": 1625,
              "slice": {
                "ast_type": "Index",
                "col_offset": 21,
                "end_col_offset": 45,
                "end_lineno": 465,
                "lineno": 465,
                "node_id": 1633,
                "src": "17044:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 36,
                  "end_col_offset": 44,
                  "end_lineno": 465,
                  "id": "_tokenId",
                  "lineno": 465,
                  "node_id": 1630,
                  "src": "17059:8:0"
                }
              },
              "src": "17044:24:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "idToOwner",
                "col_offset": 21,
                "end_col_offset": 35,
                "end_lineno": 465,
                "lineno": 465,
                "node_id": 1626,
                "src": "17044:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 25,
                  "end_lineno": 465,
                  "id": "self",
                  "lineno": 465,
                  "node_id": 1627,
                  "src": "17044:4:0"
                }
              }
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 467,
            "lineno": 467,
            "msg": null,
            "node_id": 1634,
            "src": "17119:30:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 34,
              "end_lineno": 467,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 16,
                "end_lineno": 467,
                "id": "owner",
                "lineno": 467,
                "node_id": 1636,
                "src": "17126:5:0"
              },
              "lineno": 467,
              "node_id": 1635,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 34,
                "end_lineno": 467,
                "lineno": 467,
                "node_id": 1906,
                "src": "17126:23:0"
              },
              "right": {
                "args": [
                  {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 33,
                    "end_lineno": 467,
                    "id": "address",
                    "lineno": 467,
                    "node_id": 1642,
                    "src": "17141:7:0"
                  }
                ],
                "ast_type": "Call",
                "col_offset": 20,
                "end_col_offset": 34,
                "end_lineno": 467,
                "func": {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 25,
                  "end_lineno": 467,
                  "id": "empty",
                  "lineno": 467,
                  "node_id": 1640,
                  "src": "17135:5:0"
                },
                "keyword": null,
                "keywords": [],
                "lineno": 467,
                "node_id": 1639,
                "src": "17135:14:0"
              },
              "src": "17126:23:0"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 40,
            "end_lineno": 468,
            "lineno": 468,
            "node_id": 1644,
            "src": "17154:36:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 24,
                  "end_col_offset": 29,
                  "end_lineno": 468,
                  "id": "owner",
                  "lineno": 468,
                  "node_id": 1650,
                  "src": "17174:5:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 39,
                  "end_lineno": 468,
                  "id": "_tokenId",
                  "lineno": 468,
                  "node_id": 1652,
                  "src": "17181:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 40,
              "end_lineno": 468,
              "func": {
                "ast_type": "Attribute",
                "attr": "_clearApproval",
                "col_offset": 4,
                "end_col_offset": 23,
                "end_lineno": 468,
                "lineno": 468,
                "node_id": 1646,
                "src": "17154:19:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 468,
                  "id": "self",
                  "lineno": 468,
                  "node_id": 1647,
                  "src": "17154:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 468,
              "node_id": 1645,
              "src": "17154:36:0"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 42,
            "end_lineno": 469,
            "lineno": 469,
            "node_id": 1654,
            "src": "17195:38:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 31,
                  "end_lineno": 469,
                  "id": "owner",
                  "lineno": 469,
                  "node_id": 1660,
                  "src": "17217:5:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 33,
                  "end_col_offset": 41,
                  "end_lineno": 469,
                  "id": "_tokenId",
                  "lineno": 469,
                  "node_id": 1662,
                  "src": "17224:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 42,
              "end_lineno": 469,
              "func": {
                "ast_type": "Attribute",
                "attr": "_removeTokenFrom",
                "col_offset": 4,
                "end_col_offset": 25,
                "end_lineno": 469,
                "lineno": 469,
                "node_id": 1656,
                "src": "17195:21:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 469,
                  "id": "self",
                  "lineno": 469,
                  "node_id": 1657,
                  "src": "17195:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 469,
              "node_id": 1655,
              "src": "17195:38:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 49,
            "end_lineno": 470,
            "lineno": 470,
            "node_id": 1665,
            "src": "17238:45:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 17,
                  "end_col_offset": 22,
                  "end_lineno": 470,
                  "id": "owner",
                  "lineno": 470,
                  "node_id": 1669,
                  "src": "17251:5:0"
                },
                {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 30,
                      "end_col_offset": 37,
                      "end_lineno": 470,
                      "id": "address",
                      "lineno": 470,
                      "node_id": 1674,
                      "src": "17264:7:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 24,
                  "end_col_offset": 38,
                  "end_lineno": 470,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 24,
                    "end_col_offset": 29,
                    "end_lineno": 470,
                    "id": "empty",
                    "lineno": 470,
                    "node_id": 1672,
                    "src": "17258:5:0"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 470,
                  "node_id": 1671,
                  "src": "17258:14:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 40,
                  "end_col_offset": 48,
                  "end_lineno": 470,
                  "id": "_tokenId",
                  "lineno": 470,
                  "node_id": 1676,
                  "src": "17274:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 49,
              "end_lineno": 470,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 470,
                "id": "Transfer",
                "lineno": 470,
                "node_id": 1667,
                "src": "17242:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 470,
              "node_id": 1666,
              "src": "17242:41:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 454,
            "id": "external",
            "lineno": 454,
            "node_id": 1678,
            "src": "16603:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 462,
          "lineno": 456,
          "node_id": 1680,
          "src": "16645:295:0",
          "value": "\n    @dev Burns a specific ERC721 token.\n         Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n         address for this NFT.\n         Throws if `_tokenId` is not a valid NFT.\n    @param _tokenId uint256 id of the ERC721 token to be burned.\n    "
        },
        "end_col_offset": 49,
        "end_lineno": 470,
        "lineno": 455,
        "name": "burn",
        "node_id": 1601,
        "pos": null,
        "returns": null,
        "src": "16612:671:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 33,
                "end_col_offset": 40,
                "end_lineno": 475,
                "id": "address",
                "lineno": 475,
                "node_id": 1684,
                "src": "17330:7:0"
              },
              "arg": "_new_address",
              "ast_type": "arg",
              "col_offset": 19,
              "end_col_offset": 40,
              "end_lineno": 475,
              "lineno": 475,
              "node_id": 1683,
              "src": "17316:21:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 19,
          "default": null,
          "defaults": [],
          "end_col_offset": 40,
          "end_lineno": 475,
          "lineno": 475,
          "node_id": 1682,
          "src": "17316:21:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 36,
            "end_lineno": 476,
            "lineno": 476,
            "msg": null,
            "node_id": 1686,
            "src": "17344:32:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 36,
              "end_lineno": 476,
              "left": {
                "ast_type": "Attribute",
                "attr": "sender",
                "col_offset": 11,
                "end_col_offset": 21,
                "end_lineno": 476,
                "lineno": 476,
                "node_id": 1688,
                "src": "17351:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 14,
                  "end_lineno": 476,
                  "id": "msg",
                  "lineno": 476,
                  "node_id": 1689,
                  "src": "17351:3:0"
                }
              },
              "lineno": 476,
              "node_id": 1687,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 36,
                "end_lineno": 476,
                "lineno": 476,
                "node_id": 1838,
                "src": "17351:25:0"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "minter",
                "col_offset": 25,
                "end_col_offset": 36,
                "end_lineno": 476,
                "lineno": 476,
                "node_id": 1693,
                "src": "17365:11:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 25,
                  "end_col_offset": 29,
                  "end_lineno": 476,
                  "id": "self",
                  "lineno": 476,
                  "node_id": 1694,
                  "src": "17365:4:0"
                }
              },
              "src": "17351:25:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 477,
            "lineno": 477,
            "node_id": 1697,
            "src": "17381:26:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "minter",
              "col_offset": 4,
              "end_col_offset": 15,
              "end_lineno": 477,
              "lineno": 477,
              "node_id": 1698,
              "src": "17381:11:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 477,
                "id": "self",
                "lineno": 477,
                "node_id": 1699,
                "src": "17381:4:0"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 18,
              "end_col_offset": 30,
              "end_lineno": 477,
              "id": "_new_address",
              "lineno": 477,
              "node_id": 1702,
              "src": "17395:12:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 474,
            "id": "external",
            "lineno": 474,
            "node_id": 1704,
            "src": "17288:8:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 30,
        "end_lineno": 477,
        "lineno": 475,
        "name": "transferMinter",
        "node_id": 1681,
        "pos": null,
        "returns": null,
        "src": "17297:110:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 21,
                "end_col_offset": 31,
                "end_lineno": 481,
                "lineno": 481,
                "node_id": 1709,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 21,
                  "end_col_offset": 31,
                  "end_lineno": 481,
                  "lineno": 481,
                  "node_id": 1714,
                  "src": "17441:10:0",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 28,
                    "end_col_offset": 30,
                    "end_lineno": 481,
                    "lineno": 481,
                    "node_id": 1712,
                    "src": "17448:2:0",
                    "value": 32
                  }
                },
                "src": "17441:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 27,
                  "end_lineno": 481,
                  "id": "String",
                  "lineno": 481,
                  "node_id": 1710,
                  "src": "17441:6:0"
                }
              },
              "arg": "_uri",
              "ast_type": "arg",
              "col_offset": 15,
              "end_col_offset": 31,
              "end_lineno": 481,
              "lineno": 481,
              "node_id": 1708,
              "src": "17435:16:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 15,
          "default": null,
          "defaults": [],
          "end_col_offset": 31,
          "end_lineno": 481,
          "lineno": 481,
          "node_id": 1707,
          "src": "17435:16:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 36,
            "end_lineno": 483,
            "lineno": 483,
            "msg": null,
            "node_id": 1715,
            "src": "17505:32:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 36,
              "end_lineno": 483,
              "left": {
                "ast_type": "Attribute",
                "attr": "sender",
                "col_offset": 11,
                "end_col_offset": 21,
                "end_lineno": 483,
                "lineno": 483,
                "node_id": 1717,
                "src": "17512:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 14,
                  "end_lineno": 483,
                  "id": "msg",
                  "lineno": 483,
                  "node_id": 1718,
                  "src": "17512:3:0"
                }
              },
              "lineno": 483,
              "node_id": 1716,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 36,
                "end_lineno": 483,
                "lineno": 483,
                "node_id": 1838,
                "src": "17512:25:0"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "minter",
                "col_offset": 25,
                "end_col_offset": 36,
                "end_lineno": 483,
                "lineno": 483,
                "node_id": 1722,
                "src": "17526:11:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 25,
                  "end_col_offset": 29,
                  "end_lineno": 483,
                  "id": "self",
                  "lineno": 483,
                  "node_id": 1723,
                  "src": "17526:4:0"
                }
              },
              "src": "17512:25:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 23,
            "end_lineno": 484,
            "lineno": 484,
            "node_id": 1726,
            "src": "17542:19:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "baseURI",
              "col_offset": 4,
              "end_col_offset": 16,
              "end_lineno": 484,
              "lineno": 484,
              "node_id": 1727,
              "src": "17542:12:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 484,
                "id": "self",
                "lineno": 484,
                "node_id": 1728,
                "src": "17542:4:0"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 19,
              "end_col_offset": 23,
              "end_lineno": 484,
              "id": "_uri",
              "lineno": 484,
              "node_id": 1731,
              "src": "17557:4:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 480,
            "id": "external",
            "lineno": 480,
            "node_id": 1733,
            "src": "17411:8:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 23,
        "end_lineno": 484,
        "lineno": 481,
        "name": "setBaseURI",
        "node_id": 1706,
        "pos": null,
        "returns": null,
        "src": "17420:141:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 23,
                "end_col_offset": 30,
                "end_lineno": 489,
                "id": "uint256",
                "lineno": 489,
                "node_id": 1738,
                "src": "17603:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 30,
              "end_lineno": 489,
              "lineno": 489,
              "node_id": 1737,
              "src": "17593:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 30,
          "end_lineno": 489,
          "lineno": 489,
          "node_id": 1736,
          "src": "17593:17:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 57,
            "end_lineno": 490,
            "lineno": 490,
            "node_id": 1740,
            "src": "17632:53:0",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "baseURI",
                  "col_offset": 18,
                  "end_col_offset": 30,
                  "end_lineno": 490,
                  "lineno": 490,
                  "node_id": 1744,
                  "src": "17646:12:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 18,
                    "end_col_offset": 22,
                    "end_lineno": 490,
                    "id": "self",
                    "lineno": 490,
                    "node_id": 1745,
                    "src": "17646:4:0"
                  }
                },
                {
                  "ast_type": "Subscript",
                  "col_offset": 32,
                  "end_col_offset": 56,
                  "end_lineno": 490,
                  "lineno": 490,
                  "node_id": 1748,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 32,
                    "end_col_offset": 56,
                    "end_lineno": 490,
                    "lineno": 490,
                    "node_id": 1756,
                    "src": "17660:24:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 47,
                      "end_col_offset": 55,
                      "end_lineno": 490,
                      "id": "_tokenId",
                      "lineno": 490,
                      "node_id": 1753,
                      "src": "17675:8:0"
                    }
                  },
                  "src": "17660:24:0",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "tokenURIs",
                    "col_offset": 32,
                    "end_col_offset": 46,
                    "end_lineno": 490,
                    "lineno": 490,
                    "node_id": 1749,
                    "src": "17660:14:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 32,
                      "end_col_offset": 36,
                      "end_lineno": 490,
                      "id": "self",
                      "lineno": 490,
                      "node_id": 1750,
                      "src": "17660:4:0"
                    }
                  }
                }
              ],
              "ast_type": "Call",
              "col_offset": 11,
              "end_col_offset": 57,
              "end_lineno": 490,
              "func": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 17,
                "end_lineno": 490,
                "id": "concat",
                "lineno": 490,
                "node_id": 1742,
                "src": "17639:6:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 490,
              "node_id": 1741,
              "src": "17639:46:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 487,
            "id": "view",
            "lineno": 487,
            "node_id": 1757,
            "src": "17565:4:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 488,
            "id": "external",
            "lineno": 488,
            "node_id": 1759,
            "src": "17571:8:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 57,
        "end_lineno": 490,
        "lineno": 489,
        "name": "tokenURI",
        "node_id": 1735,
        "pos": null,
        "returns": {
          "ast_type": "Subscript",
          "col_offset": 35,
          "end_col_offset": 46,
          "end_lineno": 489,
          "lineno": 489,
          "node_id": 1761,
          "slice": {
            "ast_type": "Index",
            "col_offset": 35,
            "end_col_offset": 46,
            "end_lineno": 489,
            "lineno": 489,
            "node_id": 1766,
            "src": "17615:11:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 42,
              "end_col_offset": 45,
              "end_lineno": 489,
              "lineno": 489,
              "node_id": 1764,
              "src": "17622:3:0",
              "value": 160
            }
          },
          "src": "17615:11:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 35,
            "end_col_offset": 41,
            "end_lineno": 489,
            "id": "String",
            "lineno": 489,
            "node_id": 1762,
            "src": "17615:6:0"
          }
        },
        "src": "17580:105:0"
      },
      {
        "args": {
          "args": [],
          "ast_type": "arguments",
          "col_offset": 0,
          "default": null,
          "defaults": [],
          "end_col_offset": 3,
          "end_lineno": 494,
          "lineno": 494,
          "node_id": 1768,
          "src": "17703:3:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 28,
            "end_lineno": 499,
            "lineno": 499,
            "node_id": 1771,
            "src": "17826:24:0",
            "value": {
              "ast_type": "Attribute",
              "attr": "contract_uri",
              "col_offset": 11,
              "end_col_offset": 28,
              "end_lineno": 499,
              "lineno": 499,
              "node_id": 1772,
              "src": "17833:17:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 15,
                "end_lineno": 499,
                "id": "self",
                "lineno": 499,
                "node_id": 1773,
                "src": "17833:4:0"
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 492,
            "id": "external",
            "lineno": 492,
            "node_id": 1776,
            "src": "17688:8:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 493,
            "id": "view",
            "lineno": 493,
            "node_id": 1778,
            "src": "17698:4:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 498,
          "lineno": 495,
          "node_id": 1786,
          "src": "17741:80:0",
          "value": "\n    @notice URI for contract level metadata\n    @return Contract URI\n    "
        },
        "end_col_offset": 28,
        "end_lineno": 499,
        "lineno": 494,
        "name": "contractURI",
        "node_id": 1767,
        "pos": null,
        "returns": {
          "ast_type": "Subscript",
          "col_offset": 21,
          "end_col_offset": 32,
          "end_lineno": 494,
          "lineno": 494,
          "node_id": 1780,
          "slice": {
            "ast_type": "Index",
            "col_offset": 21,
            "end_col_offset": 32,
            "end_lineno": 494,
            "lineno": 494,
            "node_id": 1785,
            "src": "17724:11:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 28,
              "end_col_offset": 31,
              "end_lineno": 494,
              "lineno": 494,
              "node_id": 1783,
              "src": "17731:3:0",
              "value": 128
            }
          },
          "src": "17724:11:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 21,
            "end_col_offset": 27,
            "end_lineno": 494,
            "id": "String",
            "lineno": 494,
            "node_id": 1781,
            "src": "17724:6:0"
          }
        },
        "src": "17703:147:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 30,
                "end_col_offset": 40,
                "end_lineno": 502,
                "lineno": 502,
                "node_id": 1790,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 30,
                  "end_col_offset": 40,
                  "end_lineno": 502,
                  "lineno": 502,
                  "node_id": 1795,
                  "src": "17892:10:0",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 37,
                    "end_col_offset": 39,
                    "end_lineno": 502,
                    "lineno": 502,
                    "node_id": 1793,
                    "src": "17899:2:0",
                    "value": 66
                  }
                },
                "src": "17892:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 30,
                  "end_col_offset": 36,
                  "end_lineno": 502,
                  "id": "String",
                  "lineno": 502,
                  "node_id": 1791,
                  "src": "17892:6:0"
                }
              },
              "arg": "new_uri",
              "ast_type": "arg",
              "col_offset": 21,
              "end_col_offset": 40,
              "end_lineno": 502,
              "lineno": 502,
              "node_id": 1789,
              "src": "17883:19:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 21,
          "default": null,
          "defaults": [],
          "end_col_offset": 40,
          "end_lineno": 502,
          "lineno": 502,
          "node_id": 1788,
          "src": "17883:19:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 36,
            "end_lineno": 509,
            "lineno": 509,
            "msg": null,
            "node_id": 1798,
            "src": "18094:32:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 36,
              "end_lineno": 509,
              "left": {
                "ast_type": "Attribute",
                "attr": "minter",
                "col_offset": 11,
                "end_col_offset": 22,
                "end_lineno": 509,
                "lineno": 509,
                "node_id": 1800,
                "src": "18101:11:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 509,
                  "id": "self",
                  "lineno": 509,
                  "node_id": 1801,
                  "src": "18101:4:0"
                }
              },
              "lineno": 509,
              "node_id": 1799,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 36,
                "end_lineno": 509,
                "lineno": 509,
                "node_id": 1838,
                "src": "18101:25:0"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "sender",
                "col_offset": 26,
                "end_col_offset": 36,
                "end_lineno": 509,
                "lineno": 509,
                "node_id": 1805,
                "src": "18116:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 29,
                  "end_lineno": 509,
                  "id": "msg",
                  "lineno": 509,
                  "node_id": 1806,
                  "src": "18116:3:0"
                }
              },
              "src": "18101:25:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 31,
            "end_lineno": 510,
            "lineno": 510,
            "node_id": 1809,
            "src": "18131:27:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "contract_uri",
              "col_offset": 4,
              "end_col_offset": 21,
              "end_lineno": 510,
              "lineno": 510,
              "node_id": 1810,
              "src": "18131:17:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 510,
                "id": "self",
                "lineno": 510,
                "node_id": 1811,
                "src": "18131:4:0"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 24,
              "end_col_offset": 31,
              "end_lineno": 510,
              "id": "new_uri",
              "lineno": 510,
              "node_id": 1814,
              "src": "18151:7:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 501,
            "id": "external",
            "lineno": 501,
            "node_id": 1816,
            "src": "17853:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 506,
          "lineno": 503,
          "node_id": 1818,
          "src": "17909:108:0",
          "value": "\n    @notice Admin function to set a new contract URI\n    @param new_uri New URI for the contract\n    "
        },
        "end_col_offset": 31,
        "end_lineno": 510,
        "lineno": 502,
        "name": "set_contract_uri",
        "node_id": 1787,
        "pos": null,
        "returns": null,
        "src": "17862:296:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 31,
                "end_col_offset": 38,
                "end_lineno": 514,
                "id": "address",
                "lineno": 514,
                "node_id": 1822,
                "src": "18202:7:0"
              },
              "arg": "coin",
              "ast_type": "arg",
              "col_offset": 25,
              "end_col_offset": 38,
              "end_lineno": 514,
              "lineno": 514,
              "node_id": 1821,
              "src": "18196:13:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 48,
                "end_col_offset": 55,
                "end_lineno": 514,
                "id": "address",
                "lineno": 514,
                "node_id": 1825,
                "src": "18219:7:0"
              },
              "arg": "target",
              "ast_type": "arg",
              "col_offset": 40,
              "end_col_offset": 55,
              "end_lineno": 514,
              "lineno": 514,
              "node_id": 1824,
              "src": "18211:15:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 65,
                "end_col_offset": 72,
                "end_lineno": 514,
                "id": "uint256",
                "lineno": 514,
                "node_id": 1828,
                "src": "18236:7:0"
              },
              "arg": "amount",
              "ast_type": "arg",
              "col_offset": 57,
              "end_col_offset": 72,
              "end_lineno": 514,
              "lineno": 514,
              "node_id": 1827,
              "src": "18228:15:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 25,
          "default": null,
          "defaults": [],
          "end_col_offset": 72,
          "end_lineno": 514,
          "lineno": 514,
          "node_id": 1820,
          "src": "18196:47:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 36,
            "end_lineno": 521,
            "lineno": 521,
            "msg": null,
            "node_id": 1832,
            "src": "18419:32:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 36,
              "end_lineno": 521,
              "left": {
                "ast_type": "Attribute",
                "attr": "minter",
                "col_offset": 11,
                "end_col_offset": 22,
                "end_lineno": 521,
                "lineno": 521,
                "node_id": 1834,
                "src": "18426:11:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 521,
                  "id": "self",
                  "lineno": 521,
                  "node_id": 1835,
                  "src": "18426:4:0"
                }
              },
              "lineno": 521,
              "node_id": 1833,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 36,
                "end_lineno": 521,
                "lineno": 521,
                "node_id": 1838,
                "src": "18426:25:0"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "sender",
                "col_offset": 26,
                "end_col_offset": 36,
                "end_lineno": 521,
                "lineno": 521,
                "node_id": 1839,
                "src": "18441:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 29,
                  "end_lineno": 521,
                  "id": "msg",
                  "lineno": 521,
                  "node_id": 1840,
                  "src": "18441:3:0"
                }
              },
              "src": "18426:25:0"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 40,
            "end_lineno": 522,
            "lineno": 522,
            "node_id": 1843,
            "src": "18477:36:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 25,
                  "end_col_offset": 31,
                  "end_lineno": 522,
                  "id": "target",
                  "lineno": 522,
                  "node_id": 1852,
                  "src": "18498:6:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 33,
                  "end_col_offset": 39,
                  "end_lineno": 522,
                  "id": "amount",
                  "lineno": 522,
                  "node_id": 1854,
                  "src": "18506:6:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 40,
              "end_lineno": 522,
              "func": {
                "ast_type": "Attribute",
                "attr": "transfer",
                "col_offset": 4,
                "end_col_offset": 24,
                "end_lineno": 522,
                "lineno": 522,
                "node_id": 1845,
                "src": "18477:20:0",
                "value": {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 10,
                      "end_col_offset": 14,
                      "end_lineno": 522,
                      "id": "coin",
                      "lineno": 522,
                      "node_id": 1849,
                      "src": "18483:4:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 4,
                  "end_col_offset": 15,
                  "end_lineno": 522,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 4,
                    "end_col_offset": 9,
                    "end_lineno": 522,
                    "id": "ERC20",
                    "lineno": 522,
                    "node_id": 1847,
                    "src": "18477:5:0"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 522,
                  "node_id": 1846,
                  "src": "18477:11:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 522,
              "node_id": 1844,
              "src": "18477:36:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 513,
            "id": "external",
            "lineno": 513,
            "node_id": 1856,
            "src": "18162:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 520,
          "lineno": 515,
          "node_id": 1858,
          "src": "18250:164:0",
          "value": "\n    @notice Withdraw ERC20 tokens accidentally sent to contract\n    @param coin ERC20 address\n    @param target Address to receive\n    @param amount Wei\n    "
        },
        "end_col_offset": 40,
        "end_lineno": 522,
        "lineno": 514,
        "name": "admin_withdraw_erc20",
        "node_id": 1819,
        "pos": null,
        "returns": null,
        "src": "18171:342:0"
      },
      {
        "args": {
          "args": [],
          "ast_type": "arguments",
          "col_offset": 0,
          "default": null,
          "defaults": [],
          "end_col_offset": 3,
          "end_lineno": 528,
          "lineno": 528,
          "node_id": 1860,
          "src": "18533:3:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 26,
            "end_lineno": 534,
            "lineno": 534,
            "node_id": 1863,
            "src": "18720:22:0",
            "value": {
              "ast_type": "Attribute",
              "attr": "tokenCount",
              "col_offset": 11,
              "end_col_offset": 26,
              "end_lineno": 534,
              "lineno": 534,
              "node_id": 1864,
              "src": "18727:15:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 15,
                "end_lineno": 534,
                "id": "self",
                "lineno": 534,
                "node_id": 1865,
                "src": "18727:4:0"
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 526,
            "id": "external",
            "lineno": 526,
            "node_id": 1868,
            "src": "18518:8:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 527,
            "id": "view",
            "lineno": 527,
            "node_id": 1870,
            "src": "18528:4:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 533,
          "lineno": 529,
          "node_id": 1874,
          "src": "18567:148:0",
          "value": "\n    @notice Enumerate valid NFTs\n    @dev Throws if `_index` >= `totalSupply()`.\n    @return The token identifier for the `_index`th NFT\n    "
        },
        "end_col_offset": 26,
        "end_lineno": 534,
        "lineno": 528,
        "name": "totalSupply",
        "node_id": 1859,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 21,
          "end_col_offset": 28,
          "end_lineno": 528,
          "id": "uint256",
          "lineno": 528,
          "node_id": 1872,
          "src": "18554:7:0"
        },
        "src": "18533:209:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 25,
                "end_col_offset": 32,
                "end_lineno": 539,
                "id": "uint256",
                "lineno": 539,
                "node_id": 1878,
                "src": "18786:7:0"
              },
              "arg": "_index",
              "ast_type": "arg",
              "col_offset": 17,
              "end_col_offset": 32,
              "end_lineno": 539,
              "lineno": 539,
              "node_id": 1877,
              "src": "18778:15:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 17,
          "default": null,
          "defaults": [],
          "end_col_offset": 32,
          "end_lineno": 539,
          "lineno": 539,
          "node_id": 1876,
          "src": "18778:15:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 17,
            "end_lineno": 546,
            "lineno": 546,
            "node_id": 1882,
            "src": "19028:13:0",
            "value": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 17,
              "end_lineno": 546,
              "id": "_index",
              "lineno": 546,
              "node_id": 1883,
              "src": "19035:6:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 537,
            "id": "external",
            "lineno": 537,
            "node_id": 1885,
            "src": "18746:8:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 538,
            "id": "view",
            "lineno": 538,
            "node_id": 1887,
            "src": "18756:4:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 545,
          "lineno": 540,
          "node_id": 1891,
          "src": "18811:212:0",
          "value": "\n    @notice Enumerate valid NFTs\n    @dev With no burn and direct minting, this is simple\n    @param _index A counter less than `totalSupply()`\n    @return The token identifier for the `_index`th NFT,\n    "
        },
        "end_col_offset": 17,
        "end_lineno": 546,
        "lineno": 539,
        "name": "tokenByIndex",
        "node_id": 1875,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 37,
          "end_col_offset": 44,
          "end_lineno": 539,
          "id": "uint256",
          "lineno": 539,
          "node_id": 1889,
          "src": "18798:7:0"
        },
        "src": "18761:280:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 31,
                "end_col_offset": 38,
                "end_lineno": 551,
                "id": "address",
                "lineno": 551,
                "node_id": 1895,
                "src": "19091:7:0"
              },
              "arg": "owner",
              "ast_type": "arg",
              "col_offset": 24,
              "end_col_offset": 38,
              "end_lineno": 551,
              "lineno": 551,
              "node_id": 1894,
              "src": "19084:14:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 47,
                "end_col_offset": 54,
                "end_lineno": 551,
                "id": "uint256",
                "lineno": 551,
                "node_id": 1898,
                "src": "19107:7:0"
              },
              "arg": "index",
              "ast_type": "arg",
              "col_offset": 40,
              "end_col_offset": 54,
              "end_lineno": 551,
              "lineno": 551,
              "node_id": 1897,
              "src": "19100:14:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 24,
          "default": null,
          "defaults": [],
          "end_col_offset": 54,
          "end_lineno": 551,
          "lineno": 551,
          "node_id": 1893,
          "src": "19084:30:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 559,
            "lineno": 559,
            "msg": null,
            "node_id": 1902,
            "src": "19540:30:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 34,
              "end_lineno": 559,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 16,
                "end_lineno": 559,
                "id": "owner",
                "lineno": 559,
                "node_id": 1904,
                "src": "19547:5:0"
              },
              "lineno": 559,
              "node_id": 1903,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 34,
                "end_lineno": 559,
                "lineno": 559,
                "node_id": 1906,
                "src": "19547:23:0"
              },
              "right": {
                "args": [
                  {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 33,
                    "end_lineno": 559,
                    "id": "address",
                    "lineno": 559,
                    "node_id": 1910,
                    "src": "19562:7:0"
                  }
                ],
                "ast_type": "Call",
                "col_offset": 20,
                "end_col_offset": 34,
                "end_lineno": 559,
                "func": {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 25,
                  "end_lineno": 559,
                  "id": "empty",
                  "lineno": 559,
                  "node_id": 1908,
                  "src": "19556:5:0"
                },
                "keyword": null,
                "keywords": [],
                "lineno": 559,
                "node_id": 1907,
                "src": "19556:14:0"
              },
              "src": "19547:23:0"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 42,
            "end_lineno": 560,
            "lineno": 560,
            "node_id": 1912,
            "src": "19575:38:0",
            "value": {
              "ast_type": "Subscript",
              "col_offset": 11,
              "end_col_offset": 42,
              "end_lineno": 560,
              "lineno": 560,
              "node_id": 1913,
              "slice": {
                "ast_type": "Index",
                "col_offset": 11,
                "end_col_offset": 42,
                "end_lineno": 560,
                "lineno": 560,
                "node_id": 1921,
                "src": "19582:31:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 36,
                  "end_col_offset": 41,
                  "end_lineno": 560,
                  "id": "owner",
                  "lineno": 560,
                  "node_id": 1918,
                  "src": "19607:5:0"
                }
              },
              "src": "19582:31:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "ownerToNFTokenCount",
                "col_offset": 11,
                "end_col_offset": 35,
                "end_lineno": 560,
                "lineno": 560,
                "node_id": 1914,
                "src": "19582:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 560,
                  "id": "self",
                  "lineno": 560,
                  "node_id": 1915,
                  "src": "19582:4:0"
                }
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 549,
            "id": "external",
            "lineno": 549,
            "node_id": 1922,
            "src": "19045:8:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 550,
            "id": "view",
            "lineno": 550,
            "node_id": 1924,
            "src": "19055:4:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 558,
          "lineno": 552,
          "node_id": 1928,
          "src": "19132:403:0",
          "value": "\n    @notice Enumerate NFTs assigned to an owner\n    @dev Throws if `index` >= `balanceOf(owner)` or if `owner` is the zero address, representing invalid NFTs.\n    @param owner An address where we are interested in NFTs owned by them\n    @param index A counter less than `balanceOf(owner)`\n    @return The token identifier for the `index`th NFT assigned to `owner`, (sort order not specified)\n    "
        },
        "end_col_offset": 42,
        "end_lineno": 560,
        "lineno": 551,
        "name": "tokenOfOwnerByIndex",
        "node_id": 1892,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 59,
          "end_col_offset": 66,
          "end_lineno": 551,
          "id": "uint256",
          "lineno": 551,
          "node_id": 1926,
          "src": "19119:7:0"
        },
        "src": "19060:553:0"
      }
    ],
    "col_offset": 0,
    "doc_string": null,
    "end_col_offset": 42,
    "end_lineno": 560,
    "lineno": 1,
    "name": "contracts/NFT.vy",
    "node_id": 0,
    "src": "0:19613:0"
  },
  "bytecode": "",
  "bytecodeSha1": "754010633deb0c12617a9273cc48313d5109d081",
  "compiler": {
    "evm_version": "istanbul",
    "version": "0.3.7"
  },
  "contractName": "NFT",
  "coverageMap": {
    "branches": {
      "0": {
        "NFT._addTokenTo": {
          "91": [
            8660,
            8709,
            true
          ]
        },
        "NFT._addTokenURI": {
          "86": [
            9400,
            9456,
            true
          ]
        },
        "NFT._clearApproval": {
          "105": [
            10314,
            10355,
            true
          ],
          "106": [
            10363,
            10409,
            false
          ]
        },
        "NFT._removeTokenFrom": {
          "101": [
            9897,
            9937,
            true
          ]
        },
        "NFT._transferFrom": {
          "109": [
            11019,
            11068,
            true
          ],
          "111": [
            11115,
            11143,
            true
          ]
        },
        "NFT.admin_withdraw_erc20": {
          "78": [
            18419,
            18451,
            true
          ]
        },
        "NFT.approve": {
          "9": [
            14248,
            14278,
            true
          ],
          "11": [
            14332,
            14357,
            true
          ],
          "15": [
            14530,
            14578,
            true
          ]
        },
        "NFT.balanceOf": {
          "29": [
            6316,
            6347,
            true
          ]
        },
        "NFT.burn": {
          "60": [
            16970,
            17022,
            true
          ],
          "63": [
            17119,
            17149,
            true
          ]
        },
        "NFT.getApproved": {
          "37": [
            7057,
            7106,
            true
          ]
        },
        "NFT.mint": {
          "47": [
            15989,
            16021,
            true
          ],
          "49": [
            16064,
            16092,
            true
          ],
          "52": [
            16268,
            16340,
            true
          ]
        },
        "NFT.ownerOf": {
          "33": [
            6716,
            6746,
            true
          ]
        },
        "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword": {
          "19": [
            5525,
            5558,
            true
          ],
          "22": [
            5687,
            5759,
            true
          ]
        },
        "NFT.safeTransferFrom": {
          "3": [
            13176,
            13191,
            false
          ],
          "5": [
            13442,
            13544,
            true
          ]
        },
        "NFT.setApprovalForAll": {
          "43": [
            15306,
            15336,
            true
          ]
        },
        "NFT.setBaseURI": {
          "70": [
            17505,
            17537,
            true
          ]
        },
        "NFT.set_contract_uri": {
          "75": [
            18094,
            18126,
            true
          ]
        },
        "NFT.tokenOfOwnerByIndex": {
          "83": [
            19540,
            19570,
            true
          ]
        },
        "NFT.transferMinter": {
          "67": [
            17344,
            17376,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "NFT._addTokenTo": {
          "90": [
            8660,
            8709
          ],
          "92": [
            8737,
            8767
          ],
          "93": [
            8800,
            8834
          ]
        },
        "NFT._addTokenURI": {
          "85": [
            9400,
            9456
          ],
          "87": [
            9485,
            9521
          ],
          "88": [
            9554,
            9609
          ],
          "89": [
            9614,
            9662
          ]
        },
        "NFT._clearApproval": {
          "104": [
            10314,
            10355
          ],
          "107": [
            10445,
            10490
          ]
        },
        "NFT._editTokenURI": {
          "39": [
            8911,
            8947
          ]
        },
        "NFT._isApprovedOrOwner": {
          "94": [
            8019,
            8060
          ],
          "95": [
            8065,
            8105
          ],
          "96": [
            8110,
            8176
          ],
          "97": [
            8181,
            8253
          ],
          "98": [
            8258,
            8342
          ],
          "99": [
            8347,
            8441
          ]
        },
        "NFT._removeTokenFrom": {
          "100": [
            9897,
            9937
          ],
          "102": [
            9965,
            10006
          ],
          "103": [
            10039,
            10075
          ]
        },
        "NFT._transferFrom": {
          "108": [
            11019,
            11068
          ],
          "110": [
            11115,
            11143
          ],
          "112": [
            11213,
            11249
          ],
          "113": [
            11312,
            11350
          ],
          "114": [
            11369,
            11400
          ],
          "115": [
            11428,
            11462
          ]
        },
        "NFT.addTokenURI": {
          "40": [
            9022,
            9060
          ]
        },
        "NFT.admin_withdraw_erc20": {
          "77": [
            18419,
            18451
          ],
          "79": [
            18477,
            18513
          ]
        },
        "NFT.approve": {
          "6": [
            14156,
            14197
          ],
          "7": [
            14651,
            14691
          ],
          "8": [
            14248,
            14278
          ],
          "10": [
            14332,
            14357
          ],
          "12": [
            14387,
            14447
          ],
          "13": [
            14452,
            14525
          ],
          "14": [
            14530,
            14578
          ],
          "16": [
            14606,
            14646
          ]
        },
        "NFT.balanceOf": {
          "28": [
            6316,
            6347
          ],
          "30": [
            6352,
            6391
          ]
        },
        "NFT.burn": {
          "58": [
            16970,
            17022
          ],
          "59": [
            17238,
            17283
          ],
          "61": [
            17027,
            17068
          ],
          "62": [
            17119,
            17149
          ],
          "64": [
            17154,
            17190
          ],
          "65": [
            17195,
            17233
          ]
        },
        "NFT.contractURI": {
          "73": [
            17826,
            17850
          ]
        },
        "NFT.getApproved": {
          "35": [
            7057,
            7106
          ],
          "36": [
            7111,
            7146
          ]
        },
        "NFT.getTokenURIByTokenId": {
          "41": [
            9141,
            9172
          ]
        },
        "NFT.isApprovedForAll": {
          "38": [
            7438,
            7548
          ]
        },
        "NFT.mint": {
          "46": [
            15989,
            16021
          ],
          "48": [
            16064,
            16092
          ],
          "50": [
            16208,
            16263
          ],
          "51": [
            16268,
            16340
          ],
          "53": [
            16346,
            16384
          ],
          "54": [
            16431,
            16476
          ],
          "55": [
            16481,
            16531
          ],
          "56": [
            16563,
            16583
          ],
          "57": [
            16588,
            16599
          ]
        },
        "NFT.ownerOf": {
          "31": [
            6624,
            6665
          ],
          "32": [
            6716,
            6746
          ],
          "34": [
            6751,
            6763
          ]
        },
        "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword": {
          "18": [
            5525,
            5558
          ],
          "20": [
            5619,
            5682
          ],
          "21": [
            5687,
            5759
          ],
          "23": [
            5765,
            5815
          ],
          "24": [
            5820,
            5873
          ],
          "25": [
            5878,
            5940
          ],
          "26": [
            5945,
            5965
          ],
          "27": [
            5970,
            5992
          ]
        },
        "NFT.safeTransferFrom": {
          "1": [
            13116,
            13168
          ],
          "2": [
            13240,
            13334
          ],
          "4": [
            13442,
            13544
          ]
        },
        "NFT.setApprovalForAll": {
          "42": [
            15306,
            15336
          ],
          "44": [
            15341,
            15397
          ],
          "45": [
            15402,
            15454
          ]
        },
        "NFT.setBaseURI": {
          "69": [
            17505,
            17537
          ],
          "71": [
            17542,
            17561
          ]
        },
        "NFT.set_contract_uri": {
          "74": [
            18094,
            18126
          ],
          "76": [
            18131,
            18158
          ]
        },
        "NFT.supportsInterface": {
          "17": [
            5305,
            5348
          ]
        },
        "NFT.tokenByIndex": {
          "81": [
            19028,
            19041
          ]
        },
        "NFT.tokenOfOwnerByIndex": {
          "82": [
            19540,
            19570
          ],
          "84": [
            19575,
            19613
          ]
        },
        "NFT.tokenURI": {
          "72": [
            17632,
            17685
          ]
        },
        "NFT.totalSupply": {
          "80": [
            18720,
            18742
          ]
        },
        "NFT.transferFrom": {
          "0": [
            12136,
            12188
          ]
        },
        "NFT.transferMinter": {
          "66": [
            17344,
            17376
          ],
          "68": [
            17381,
            17407
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "-1:-1:0:-;;;;:::-;;:::-;:::-;;;;;;;;;:::-;;;;;:::-;;;;;;;:::-;11529:14;;-1:-1;;;;;;:::-;11545:12;;12155:5;-1:-1;;;12162:3;-1:-1;;;12167:8;-1:-1;;;12177:10;-1:-1;;;12136:52;:::i;-1:-1::-;;:::-;;;;12210:1334;:::-;-1:-1;;;;:::-;;;;;;;;12313:18;-1:-1;;12313:18;-1:-1;:::-;12210:1334::-;-1:-1;;;12210:1334;:::-;-1:-1;;;;:::-;;;;12313:18;-1:-1;12313:18;-1:-1;;;:::-;12313:18;-1:-1;;;;;12313:18;-1:-1;;;;;;;12313:18;-1:-1::-;;;;;;;:::-;12240:14;;-1:-1;;;;;;:::-;12264:12;;13135:5;-1:-1;;;13142:3;-1:-1;;;13318:8;-1:-1;;;13157:10;-1:-1;;;13116:52;:::i;:::-;13176:3;-1:-1;13176:15;;-1:-1;13173:371::-;13262:19;:72;-1:-1;;;;13299:10;-1:-1;;13311:5;-1:-1;;;13318:8;-1:-1;;;;;;;;;13328:5;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13262:72;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;13262:72;;13240:94;;;13464:80;13449:11;:95;;13442:102;:::-;-1:-1::-;;12210:1334::-;-1:-1;;;;:::-;;;;;:::-;;;;;;;:::-;13578:18;;14173:14;14682:8;14173:24;;;;;;;;14156:41;;;14255:5;:23;;14248:30;:::-;14352:5;-1:-1;14339:9;-1:-1;;14332:25;:::-;14437:10;14409:14;14682:8;14409:24;;;;;;;;:38;;14387:60;;14484:21;14506:5;-1:-1;14484:28;;;;;;;-1:-1;14514:10;-1:-1;;;;;;;14483:42;;-1:-1;;14452:73;14538:13;-1:-1;14538:39;:::-;14555:22;14538:39;;:::-;:::-;;:::-;14530:48;;:::-;14637:9;-1:-1;14606:18;14682:8;14606:28;;;;;;;;:40;14682:8;14651:40;14671:9;14651:40;14664:5;14651:40;;;;;-1:-1;:::-;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;5042:20;;5312:12;:36;5328:20;5312:36;-1:-1;5312:36;:::-;-1:-1;5312:36;:::-;:::-;5328:20;5312:36;-1:-1;;:::-;;5312:36;-1:-1::-;:::-;5328:20;5312:36;-1:-1;;:::-;;5312:36;-1:-1::-;:::-;5328:20;5312:36;-1:-1;;:::-;;5312:36;-1:-1::-;:::-;5328:20;5312:36;-1:-1;;5312:36::-;;;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;5431:24;;-1:-1;;;5457:29;-1:-1;5457:29;-1:-1;;;:::-;5457:29;-1:-1;;;;;5457:29;-1:-1;;;;;;;5457:29;5549:9;5532:26;:13;:26;;5525:33;:::-;-1:-1;;;;;;;5663:17;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5651:30;;5641:41;-1:-1;;5641:41;-1:-1;5641:41;;;5619:63;;5694:25;5720:10;-1:-1;5694:37;;;;;;;:42;;5687:72;:::-;-1:-1;;5738:21;-1:-1;;5738:21;;5687:72;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5687:72::-;5782:15;-1:-1;;;5799:15;-1:-1;;;;5765:50;:::i;:::-;5838:15;-1:-1;;;5855:17;-1:-1;;;;;;;;;;;;5820:53;-1:-1;5820:53;:::i;:::-;5924:15;5878:62;5907:15;5878:62;;;;;;5945:15;-1:-1;5964:1;-1:-1;;;;;;:::-;5945:20;;:15;-1:-1;5977:15;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;6048:15;;6323:6;:24;;6316:31;:::-;6359:24;6384:6;-1:-1;6359:32;;;;;;;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;6641:14;6656:8;6641:24;;;;;;;;6624:41;;;6723:5;:23;;6716:30;:::-;-1:-1;6758:5;-1:-1;:::-;;;;;:::-;;;;;:::-;7064:14;7137:8;7064:24;;;;;;;;:42;;7057:49;:::-;7118:18;7137:8;7118:28;;;;;;;;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;7186:15;;-1:-1;;;;;;:::-;7203:18;;7446:21;7468:6;-1:-1;7446:29;;;;;;;-1:-1;7477:9;-1:-1;;;;;;;;7445:42;;-1:-1;7445:103;:::-;7491:23;:57;-1:-1;;;7538:9;-1:-1;;;;;;;7491:57;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;7491:57;;7445:103;;:::-;:::-;;:::-;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;8883:21;-1:-1;8883:21;-1:-1;;;:::-;8883:21;-1:-1;;;;;8883:21;-1:-1;;;;;;;8883:21;8938:9;8911:36;;:14;8926:8;8911:24;;;;;;;;-1:-1;;8911:14;8926:8;8911:24;;;;;;;;-1:-1;;8911:36;-1:-1;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;;8911:36;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;8994:21;-1:-1;8994:21;-1:-1;;;:::-;8994:21;-1:-1;;;;;8994:21;-1:-1;;;;;;;8994:21;9040:8;-1:-1;;;9050:9;-1:-1;;;;;;;;;;;;9022:38;-1:-1;9022:38;:::i;-1:-1::-;;:::-;;;;;:::-;;;;;:::-;;;;;9148:14;9163:8;9148:24;;;;;;;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;14726:18;;-1:-1;;;;;;:::-;14746:15;;15326:10;15313:9;-1:-1;;15306:30;:::-;15388:9;-1:-1;15341:21;15363:10;15341:33;;;;;;;-1:-1;15375:9;-1:-1;;;;;;;;15341:44;;-1:-1;15433:9;15402:52;15421:10;15402:52;15444:9;-1:-1;;;;15402:52;;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;15507:12;;-1:-1;;;15521:21;-1:-1;15521:21;-1:-1;;;:::-;15521:21;-1:-1;;;;;15521:21;-1:-1;;;;;;;15521:21;16010:11;15996:25;:10;:25;15989:32;:::-;16071:3;:21;;16064:28;:::-;-1:-1;;;;;;;16252:9;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16240:22;;16230:33;-1:-1;;16230:33;-1:-1;16230:33;;;16208:55;;16275:25;16301:10;-1:-1;16275:37;;;;;;;:42;;16268:72;:::-;-1:-1;;16319:21;-1:-1;;16319:21;;16268:72;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16268:72::-;16363:3;-1:-1;;;16368:15;-1:-1;;;;16346:38;:::i;:::-;16449:15;-1:-1;;;16466:9;-1:-1;;;;;;;;;;;;16431:45;-1:-1;16431:45;:::i;:::-;16515:15;16481:50;16510:3;16481:50;;;;;;16563:15;-1:-1;16582:1;-1:-1;;;;;;:::-;16563:20;;:15;-1:-1;16595:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;17001:10;-1:-1;;17274:8;-1:-1;;;;16977:45;;:::i;:::-;;16970:52;;;:::-;17044:14;17274:8;17044:24;;;;;;;;17027:41;;;17126:5;:23;;17119:30;:::-;17174:5;-1:-1;;;17274:8;-1:-1;;;;17154:36;:::i;:::-;17217:5;-1:-1;;;17274:8;-1:-1;;;;17195:38;:::i;:::-;17274:8;17238:45;;17251:5;17238:45;;;;;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;17316:21;;17365:11;17351:25;:10;:25;17344:32;:::-;17395:12;-1:-1;17381:11;-1:-1;;:::-;;;;;:::-;;;;;:::-;;;;17435:16;-1:-1;17435:16;-1:-1;;;:::-;17435:16;-1:-1;;;;;17435:16;-1:-1;;;;;;;17435:16;17526:11;17512:25;:10;:25;17505:32;:::-;17557:4;17542:19;;:12;-1:-1;;;;;17542:19;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;;17639:46;17646:12;-1:-1;;;;;;;;;;;;;;;17660:14;17675:8;17660:24;;;;;;;;-1:-1;;;;;;;;;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;;;;;;;;;;;;;;17639:46;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;17833:17;-1:-1;;;;;;;;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;17883:19;-1:-1;17883:19;-1:-1;;;:::-;17883:19;-1:-1;;;;;17883:19;-1:-1;;;;;;;17883:19;18116:10;18101:11;:25;;18094:32;:::-;18151:7;18131:27;;:17;-1:-1;;18131:27;-1:-1;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;18131:27;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;18196:13;;-1:-1;;;;;;:::-;18211:15;;18441:10;18426:11;:25;;18419:32;:::-;18477:11;:36;-1:-1;;;18498:6;-1:-1;;;18506:6;-1:-1;;;;;;;;18477:36;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;18477:36;-1:-1;;:::-;;;;;:::-;;;;;:::-;18727:15;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;19035:6;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;19084:14;;19547:5;:23;;19540:30;:::-;19582:24;19607:5;-1:-1;19582:31;;;;;;;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;:::-;;;;9184:478::-;9411:14;9426:8;-1:-1;9411:24;;;;;;;9407:29;:34;9400:56;:::-;-1:-1;;9443:13;-1:-1;;9443:13;;9400:56;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9400:56::-;9512:9;9485:36;;:14;9500:8;-1:-1;9485:24;;;;;;;-1:-1;;9485:14;9500:8;-1:-1;9485:24;;;;;;;-1:-1;;9485:36;-1:-1;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;;9485:36;-1:-1;;;;;;;9598:9;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9586:22;;9576:33;-1:-1;;9576:33;-1:-1;9576:33;;;9554:55;;9654:8;-1:-1;9614:25;9640:10;-1:-1;9614:37;;;;;;;-1:-1;:::-;8454:380::-;8667:14;8682:8;-1:-1;8667:24;;;;;;;:42;8660:49;:::-;8764:3;-1:-1;8737:14;8752:8;-1:-1;8737:24;;;;;;;-1:-1;8800:24;8825:3;-1:-1;8800:29;;;;;;;-1:-1;;8833:1;-1:-1;;;;;;:::-;8800:34;;-1:-1;;8800:34;-1:-1::-;7602:839::-;8036:14;8051:8;-1:-1;8036:24;;;;;;;-1:-1;;8019:41;8097:8;-1:-1;8088:5;-1:-1;8088:17;-1:-1;8065:40;8148:18;8167:8;-1:-1;8148:28;;;;;;;-1:-1;8136:8;-1:-1;8136:40;-1:-1;8110:66;8214:21;8236:5;-1:-1;8214:28;;;;;;;-1:-1;8244:8;-1:-1;;;;;;;;8213:40;;-1:-1;;8181:72;8286:23;:56;-1:-1;;;8333:8;-1:-1;;;;;;;8286:56;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;8286:56;;8258:84;;;8355:14;-1:-1;8355:35;:::-;8373:17;8355:35;;:::-;:::-;;:::-;8354:87;:::-;8395:23;-1:-1;8354:87;:::-;8422:19;-1:-1;8354:87;:::-;:::-;-1:-1;8354:87;:::-;:::-;;:::-;-1:-1;8347:94;;-1:-1::-;9675:400::-;9932:5;9904:33;:14;9919:8;-1:-1;9904:24;;;;;;;:33;;9897:40;:::-;-1:-1;9965:14;9980:8;-1:-1;9965:24;;;;;;;-1:-1;10039:24;10064:5;-1:-1;10039:31;;;;;;;-1:-1;;10074:1;-1:-1;;;;;;:::-;10039:36;;-1:-1;;10039:36;-1:-1::-;10088:402::-;10349:6;10321:34;:14;10336:8;-1:-1;10321:24;;;;;;;:34;;10314:41;:::-;10363:18;10382:8;-1:-1;10363:28;;;;;;;:46;;-1:-1;10360:130::-;-1:-1;10445:18;10464:8;-1:-1;10445:28;;;;;;;-1:-1;10088:402::-;-1:-1::-;10503:959::-;11050:7;-1:-1;;;11059:8;-1:-1;;;;11026:42;;:::i;:::-;;11019:49;;;:::-;11122:3;:21;;11115:28;:::-;11233:5;-1:-1;;;11240:8;-1:-1;;;;11213:36;:::i;:::-;11334:5;-1:-1;;;11341:8;-1:-1;;;;11312:38;:::i;:::-;11386:3;-1:-1;;;11391:8;-1:-1;;;;11369:31;:::i;:::-;11453:8;11428:34;11448:3;11428:34;11441:5;11428:34;;;;;-1:-1::-;:::-;;;",
  "language": "Vyper",
  "natspec": {
    "methods": {
      "__init__(address,uint256)": {
        "details": "Contract constructor."
      },
      "admin_withdraw_erc20(address,address,uint256)": {
        "notice": "Withdraw ERC20 tokens accidentally sent to contract",
        "params": {
          "amount": "Wei",
          "coin": "ERC20 address",
          "target": "Address to receive"
        }
      },
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT. The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner. Throws if `_tokenId` is not a valid NFT. (NOTE: This is not written the EIP) Throws if `_approved` is the current owner. (NOTE: This is not written the EIP)",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. Throws if `_owner` is the zero address. NFTs assigned to the zero address are considered invalid.",
        "params": {
          "_owner": "Address for whom to query the balance."
        }
      },
      "burn(uint256)": {
        "details": "Burns a specific ERC721 token. Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_tokenId` is not a valid NFT.",
        "params": {
          "_tokenId": "uint256 id of the ERC721 token to be burned."
        }
      },
      "contractURI()": {
        "notice": "URI for contract level metadata",
        "returns": {
          "_0": "Contract URI"
        }
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT. Throws if `_tokenId` is not a valid NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        }
      },
      "mint(address,string)": {
        "details": "Function to mint tokens Throws if `msg.sender` is not the minter. Throws if `_to` is zero address. Throws if `_tokenId` is owned by someone.",
        "params": {
          "_to": "The address that will receive the minted tokens.",
          "_tokenURI": "The token uri of next token to mint."
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. Throws if `_tokenId` is not a valid NFT.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address. Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. If `_to` is a smart contract, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address. Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. If `_to` is a smart contract, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event. Throws if `_operator` is the `msg.sender`. (NOTE: This is not written the EIP)",
        "notice": "This works even if sender doesn't own any tokens at the time.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "set_contract_uri(string)": {
        "notice": "Admin function to set a new contract URI",
        "params": {
          "new_uri": "New URI for the contract"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Interface identification is specified in ERC-165.",
        "notice": "Query if a contract implements an interface.",
        "params": {
          "interface_id": "Bytes4 representing the interface."
        },
        "returns": {
          "_0": "bool True if supported."
        }
      },
      "tokenByIndex(uint256)": {
        "details": "With no burn and direct minting, this is simple",
        "notice": "Enumerate valid NFTs",
        "params": {
          "_index": "A counter less than `totalSupply()`"
        },
        "returns": {
          "_0": "The token identifier for the `_index`th NFT,"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Throws if `index` >= `balanceOf(owner)` or if `owner` is the zero address, representing invalid NFTs.",
        "notice": "Enumerate NFTs assigned to an owner",
        "params": {
          "index": "A counter less than `balanceOf(owner)`",
          "owner": "An address where we are interested in NFTs owned by them"
        },
        "returns": {
          "_0": "The token identifier for the `index`th NFT assigned to `owner`, (sort order not specified)"
        }
      },
      "totalSupply()": {
        "details": "Throws if `_index` >= `totalSupply()`.",
        "notice": "Enumerate valid NFTs",
        "returns": {
          "_0": "The token identifier for the `_index`th NFT"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.",
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      }
    }
  },
  "offset": [
    0,
    19614
  ],
  "opcodes": "PUSH1 0x3 CALLDATASIZE GT PUSH2 0x0C JUMPI PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x23B872DD DUP2 XOR PUSH2 0x069 JUMPI PUSH1 0x64 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x1391 JUMPI PUSH2 0x220 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x1391 JUMPI PUSH2 0x240 MSTORE PUSH2 0x220 MLOAD PUSH2 0x180 MSTORE PUSH2 0x240 MLOAD PUSH2 0x1A0 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x1C0 MSTORE CALLER PUSH2 0x1E0 MSTORE PUSH2 0x067 PUSH2 0x12EF JUMP JUMPDEST STOP JUMPDEST PUSH4 0x42842EE DUP2 XOR PUSH2 0x093 JUMPI PUSH1 0x64 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x0 PUSH2 0x680 MSTORE PUSH2 0x680 DUP1 MLOAD DUP1 PUSH2 0x260 MSTORE POP POP PUSH2 0x0CB JUMP JUMPDEST PUSH4 0xB88D4FDE DUP2 XOR PUSH2 0x1F0 JUMPI PUSH1 0xA4 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x40 DUP2 CALLDATALOAD GT PUSH2 0x1391 JUMPI DUP1 CALLDATALOAD DUP1 PUSH2 0x260 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 PUSH2 0x280 CALLDATACOPY POP POP POP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x1391 JUMPI PUSH2 0x220 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x1391 JUMPI PUSH2 0x240 MSTORE PUSH2 0x220 MLOAD PUSH2 0x180 MSTORE PUSH2 0x240 MLOAD PUSH2 0x1A0 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x1C0 MSTORE CALLER PUSH2 0x1E0 MSTORE PUSH2 0x1D PUSH2 0x12EF JUMP JUMPDEST PUSH2 0x240 MLOAD EXTCODESIZE ISZERO PUSH2 0x1EE JUMPI PUSH2 0x240 MLOAD PUSH4 0x15B7A2 PUSH2 0x6C0 MSTORE PUSH1 0x80 CALLER PUSH2 0x6E0 MSTORE PUSH2 0x220 MLOAD PUSH2 0x70 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x720 MSTORE DUP1 PUSH2 0x740 MSTORE DUP1 PUSH2 0x6E0 ADD PUSH2 0x260 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 DUP4 PUSH2 0x280 PUSH1 0x4 GAS STATICCALL POP POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP DUP2 ADD POP POP PUSH1 0x20 PUSH2 0x6C0 PUSH2 0x4A4 PUSH2 0x6DC PUSH1 0x0 DUP6 GAS CALL PUSH2 0x1A1 JUMPI RETURNDATASIZE PUSH1 0x0 PUSH1 0x0 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 RETURNDATASIZE LT PUSH2 0x1391 JUMPI PUSH2 0x6C0 MLOAD DUP1 PUSH1 0x20 SHL PUSH2 0x1391 JUMPI PUSH2 0xB80 MSTORE PUSH2 0xB80 SWAP1 POP MLOAD PUSH2 0x6A0 MSTORE PUSH32 0x15B7A20000000000000000000000000000 PUSH2 0x6A0 MLOAD XOR PUSH2 0x1391 JUMPI JUMPDEST STOP JUMPDEST PUSH4 0x95EA7B3 DUP2 XOR PUSH2 0x2CD JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x1391 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x24 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x60 MSTORE PUSH1 0x60 MLOAD ISZERO PUSH2 0x1391 JUMPI PUSH1 0x60 MLOAD PUSH1 0x40 MLOAD EQ PUSH2 0x1391 JUMPI CALLER PUSH1 0x0 PUSH1 0x24 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD EQ PUSH1 0x80 MSTORE PUSH1 0x3 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SLOAD PUSH1 0xA0 MSTORE PUSH1 0x80 MLOAD PUSH2 0x280 JUMPI PUSH1 0xA0 MLOAD PUSH2 0x283 JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x1391 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x24 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x60 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925 PUSH1 0x0 PUSH1 0xC0 LOG4 STOP JUMPDEST CALLVALUE PUSH2 0x1391 JUMPI PUSH4 0x1FFC9A7 DUP2 XOR PUSH2 0x3DE JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x20 SHL PUSH2 0x1391 JUMPI PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x1FFC9A70000000000000000000000000000 DUP2 XOR PUSH2 0x324 JUMPI PUSH1 0x1 PUSH2 0x3D3 JUMP JUMPDEST PUSH32 0x80AC58CD0000000000000000000000000000 DUP2 XOR PUSH2 0x352 JUMPI PUSH1 0x1 PUSH2 0x3D3 JUMP JUMPDEST PUSH32 0x15B7A20000000000000000000000000000 DUP2 XOR PUSH2 0x380 JUMPI PUSH1 0x1 PUSH2 0x3D3 JUMP JUMPDEST PUSH32 0x78E9D630000000000000000000000000000 DUP2 XOR PUSH2 0x3AE JUMPI PUSH1 0x1 PUSH2 0x3D3 JUMP JUMPDEST PUSH32 0x5B5E139F0000000000000000000000000000 DUP2 XOR ISZERO JUMPDEST SWAP1 POP PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 RETURN JUMPDEST PUSH4 0xB36A182 DUP2 XOR PUSH2 0x592 JUMPI PUSH1 0x84 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x1391 JUMPI PUSH2 0x180 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 ADD PUSH1 0x40 DUP2 CALLDATALOAD GT PUSH2 0x1391 JUMPI DUP1 CALLDATALOAD DUP1 PUSH2 0x1A0 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 PUSH2 0x1C0 CALLDATACOPY POP POP POP PUSH1 0x44 CALLDATALOAD PUSH1 0x9 SLOAD XOR PUSH2 0x1391 JUMPI PUSH1 0x20 DUP1 PUSH2 0x240 MSTORE DUP1 PUSH2 0x240 ADD PUSH2 0x1A0 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 DUP4 PUSH2 0x1C0 PUSH1 0x4 GAS STATICCALL POP POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP DUP2 ADD SWAP1 POP PUSH2 0x220 MSTORE PUSH2 0x220 DUP1 MLOAD PUSH1 0x20 DUP3 ADD SHA3 SWAP1 POP PUSH2 0x20 MSTORE PUSH1 0x7 PUSH2 0x20 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD ISZERO PUSH2 0x59 JUMPI PUSH1 0x13 PUSH2 0x220 MSTORE PUSH32 0x746F6B656E206973206E6F6E2D756E697175650000000000000 PUSH2 0x240 MSTORE PUSH2 0x220 POP PUSH2 0x220 MLOAD DUP1 PUSH2 0x240 ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH4 0x8C379A0 PUSH2 0x1E0 MSTORE PUSH1 0x20 PUSH2 0x20 MSTORE PUSH1 0x1F NOT PUSH1 0x1F PUSH2 0x220 MLOAD ADD AND PUSH1 0x44 ADD PUSH2 0x1FC REVERT JUMPDEST PUSH2 0x180 MLOAD PUSH1 0x40 MSTORE PUSH1 0xA SLOAD PUSH1 0x60 MSTORE PUSH2 0x51E PUSH2 0x112C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MSTORE PUSH2 0x1A0 MLOAD DUP1 PUSH1 0x60 MSTORE DUP1 PUSH1 0x80 DUP3 PUSH2 0x1C0 PUSH1 0x4 GAS STATICCALL POP POP PUSH2 0x541 PUSH2 0xFEE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x180 MLOAD PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 PUSH2 0x220 LOG4 PUSH1 0xA SLOAD PUSH1 0x1 DUP2 ADD DUP2 DUP2 LT PUSH2 0x1391 JUMPI SWAP1 POP PUSH1 0xA SSTORE PUSH1 0xA SLOAD PUSH2 0x220 MSTORE PUSH1 0x20 PUSH2 0x220 RETURN JUMPDEST PUSH4 0x70A08231 DUP2 XOR PUSH2 0x5D5 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x1391 JUMPI PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD ISZERO PUSH2 0x1391 JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 RETURN JUMPDEST PUSH4 0x6352211E DUP2 XOR PUSH2 0x6A JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD ISZERO PUSH2 0x1391 JUMPI PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0x81812FC DUP2 XOR PUSH2 0x64D JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD ISZERO PUSH2 0x1391 JUMPI PUSH1 0x1 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0xE985E9C5 DUP2 XOR PUSH2 0x6F9 JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x1391 JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x1391 JUMPI PUSH1 0x60 MSTORE PUSH1 0x3 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SLOAD PUSH2 0x6ED JUMPI PUSH1 0x6 SLOAD PUSH4 0x47606390 PUSH1 0x80 MSTORE PUSH1 0x60 MLOAD PUSH1 0xA0 MSTORE PUSH1 0x20 PUSH1 0x80 PUSH1 0x24 PUSH1 0x9C DUP5 GAS STATICCALL PUSH2 0x6CD JUMPI RETURNDATASIZE PUSH1 0x0 PUSH1 0x0 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 RETURNDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x80 MLOAD DUP1 PUSH1 0x1 SHR PUSH2 0x1391 JUMPI PUSH1 0xC0 MSTORE PUSH1 0xC0 SWAP1 POP MLOAD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xE0 MSTORE PUSH1 0x20 PUSH1 0xE0 RETURN JUMPDEST PUSH4 0x41C54053 DUP2 XOR PUSH2 0x78B JUMPI PUSH1 0x64 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 ADD PUSH1 0x40 DUP2 CALLDATALOAD GT PUSH2 0x1391 JUMPI DUP1 CALLDATALOAD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 PUSH1 0x60 CALLDATACOPY POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x8 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SSTORE PUSH1 0x1 PUSH1 0x8 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 ADD PUSH1 0x0 DUP3 PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x2 DUP2 GT PUSH2 0x1391 JUMPI DUP1 ISZERO PUSH2 0x785 JUMPI SWAP1 JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x60 ADD MLOAD DUP2 DUP5 ADD SSTORE PUSH1 0x1 ADD DUP2 DUP2 XOR PUSH2 0x76E JUMPI JUMPDEST POP POP POP POP STOP JUMPDEST PUSH4 0xB4393623 DUP2 XOR PUSH2 0x7E6 JUMPI PUSH1 0x64 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 ADD PUSH1 0x40 DUP2 CALLDATALOAD GT PUSH2 0x1391 JUMPI DUP1 CALLDATALOAD DUP1 PUSH2 0x180 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 PUSH2 0x1A0 CALLDATACOPY POP POP POP PUSH1 0x4 CALLDATALOAD PUSH1 0x40 MSTORE PUSH2 0x180 MLOAD DUP1 PUSH1 0x60 MSTORE DUP1 PUSH1 0x80 DUP3 PUSH2 0x1A0 PUSH1 0x4 GAS STATICCALL POP POP PUSH2 0x7E4 PUSH2 0xFEE JUMP JUMPDEST STOP JUMPDEST PUSH4 0xCEB5E59D DUP2 XOR PUSH2 0x880 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x20 DUP1 PUSH1 0x40 MSTORE PUSH1 0x8 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP2 PUSH1 0x40 ADD DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP4 PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x2 DUP2 GT PUSH2 0x1391 JUMPI DUP1 ISZERO PUSH2 0x84F JUMPI SWAP1 JUMPDEST DUP1 DUP5 ADD SLOAD DUP2 PUSH1 0x5 SHL DUP5 ADD MSTORE PUSH1 0x1 ADD DUP2 DUP2 XOR PUSH2 0x839 JUMPI JUMPDEST POP POP POP POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP SWAP1 POP DUP2 ADD SWAP1 POP PUSH1 0x40 RETURN JUMPDEST PUSH4 0xA22CB465 DUP2 XOR PUSH2 0x9D JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x1391 JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0x1 SHR PUSH2 0x1391 JUMPI PUSH1 0x60 MSTORE CALLER PUSH1 0x40 MLOAD EQ PUSH2 0x1391 JUMPI PUSH1 0x60 MLOAD PUSH1 0x3 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SSTORE PUSH1 0x40 MLOAD CALLER PUSH32 0x17307EAB39AB617E8899845AD3D59BD9653F20F22092489CA2B5937696C31 PUSH1 0x60 MLOAD PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 LOG3 STOP JUMPDEST PUSH4 0xD0DEF521 DUP2 XOR PUSH2 0xAC7 JUMPI PUSH1 0x64 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x1391 JUMPI PUSH2 0x180 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 ADD PUSH1 0x40 DUP2 CALLDATALOAD GT PUSH2 0x1391 JUMPI DUP1 CALLDATALOAD DUP1 PUSH2 0x1A0 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 PUSH2 0x1C0 CALLDATACOPY POP POP POP PUSH1 0x4 SLOAD CALLER XOR PUSH2 0x1391 JUMPI PUSH2 0x180 MLOAD ISZERO PUSH2 0x1391 JUMPI PUSH1 0x20 DUP1 PUSH2 0x240 MSTORE DUP1 PUSH2 0x240 ADD PUSH2 0x1A0 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 DUP4 PUSH2 0x1C0 PUSH1 0x4 GAS STATICCALL POP POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP DUP2 ADD SWAP1 POP PUSH2 0x220 MSTORE PUSH2 0x220 DUP1 MLOAD PUSH1 0x20 DUP3 ADD SHA3 SWAP1 POP PUSH2 0x20 MSTORE PUSH1 0x7 PUSH2 0x20 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD ISZERO PUSH2 0xA3F JUMPI PUSH1 0x13 PUSH2 0x220 MSTORE PUSH32 0x746F6B656E206973206E6F6E2D756E697175650000000000000 PUSH2 0x240 MSTORE PUSH2 0x220 POP PUSH2 0x220 MLOAD DUP1 PUSH2 0x240 ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH4 0x8C379A0 PUSH2 0x1E0 MSTORE PUSH1 0x20 PUSH2 0x20 MSTORE PUSH1 0x1F NOT PUSH1 0x1F PUSH2 0x220 MLOAD ADD AND PUSH1 0x44 ADD PUSH2 0x1FC REVERT JUMPDEST PUSH2 0x180 MLOAD PUSH1 0x40 MSTORE PUSH1 0xA SLOAD PUSH1 0x60 MSTORE PUSH2 0xA54 PUSH2 0x112C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MSTORE PUSH2 0x1A0 MLOAD DUP1 PUSH1 0x60 MSTORE DUP1 PUSH1 0x80 DUP3 PUSH2 0x1C0 PUSH1 0x4 GAS STATICCALL POP POP PUSH2 0xA77 PUSH2 0xFEE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x180 MLOAD PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 PUSH2 0x220 LOG4 PUSH1 0xA SLOAD PUSH1 0x1 DUP2 ADD DUP2 DUP2 LT PUSH2 0x1391 JUMPI SWAP1 POP PUSH1 0xA SSTORE PUSH1 0x1 PUSH2 0x220 MSTORE PUSH1 0x20 PUSH2 0x220 RETURN JUMPDEST PUSH4 0x42966C68 DUP2 XOR PUSH2 0xB72 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x1391 JUMPI CALLER PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x60 MSTORE PUSH2 0xAEF PUSH2 0x180 PUSH2 0x1179 JUMP JUMPDEST PUSH2 0x180 MLOAD ISZERO PUSH2 0x1391 JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH2 0x180 MSTORE PUSH2 0x180 MLOAD ISZERO PUSH2 0x1391 JUMPI PUSH2 0x180 MLOAD PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x60 MSTORE PUSH2 0xB2B PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x180 MLOAD PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x60 MSTORE PUSH2 0xB40 PUSH2 0x125A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 PUSH2 0x180 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 PUSH2 0x1A0 LOG4 STOP JUMPDEST PUSH4 0xFE99AD5A DUP2 XOR PUSH2 0xBA4 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x1391 JUMPI PUSH1 0x40 MSTORE PUSH1 0x4 SLOAD CALLER XOR PUSH2 0x1391 JUMPI PUSH1 0x40 MLOAD PUSH1 0x4 SSTORE STOP JUMPDEST PUSH4 0x55F84B3 DUP2 XOR PUSH2 0xBF1 JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH1 0x20 DUP2 CALLDATALOAD GT PUSH2 0x1391 JUMPI DUP1 CALLDATALOAD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP3 ADD DUP1 CALLDATALOAD PUSH1 0x60 MSTORE POP POP POP PUSH1 0x4 SLOAD CALLER XOR PUSH2 0x1391 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x10 SSTORE PUSH1 0x60 MLOAD PUSH1 0x11 SSTORE POP STOP JUMPDEST PUSH4 0xC87B56DD DUP2 XOR PUSH2 0xCC4 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x20 DUP1 PUSH1 0xC0 MSTORE PUSH1 0x0 PUSH1 0x10 SLOAD DUP2 PUSH1 0x60 ADD PUSH1 0x11 SLOAD DUP2 MSTORE POP DUP1 DUP3 ADD SWAP2 POP POP PUSH1 0x8 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP4 PUSH1 0x60 ADD PUSH1 0x0 DUP4 PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x2 DUP2 GT PUSH2 0x1391 JUMPI DUP1 ISZERO PUSH2 0xC68 JUMPI SWAP1 JUMPDEST DUP1 DUP5 ADD SLOAD DUP2 PUSH1 0x5 SHL DUP5 ADD MSTORE PUSH1 0x1 ADD DUP2 DUP2 XOR PUSH2 0xC52 JUMPI JUMPDEST POP POP POP POP DUP1 DUP4 ADD SWAP3 POP POP POP DUP1 PUSH1 0x40 MSTORE PUSH1 0x40 SWAP1 POP DUP2 PUSH1 0xC0 ADD DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP3 DUP2 DUP5 DUP5 PUSH1 0x4 GAS STATICCALL POP POP POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP SWAP1 POP DUP2 ADD SWAP1 POP PUSH1 0xC0 RETURN JUMPDEST PUSH4 0xE8A3D485 DUP2 XOR PUSH2 0xD49 JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x20 DUP1 PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 ADD PUSH1 0x12 SLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x3 DUP2 GT PUSH2 0x1391 JUMPI DUP1 ISZERO PUSH2 0xD1B JUMPI SWAP1 JUMPDEST DUP1 PUSH1 0x13 ADD SLOAD DUP2 PUSH1 0x5 SHL DUP5 ADD MSTORE PUSH1 0x1 ADD DUP2 DUP2 XOR PUSH2 0xD4 JUMPI JUMPDEST POP POP POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP DUP2 ADD SWAP1 POP PUSH1 0x40 RETURN JUMPDEST PUSH4 0x3D57DF47 DUP2 XOR PUSH2 0xDC3 JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH1 0x42 DUP2 CALLDATALOAD GT PUSH2 0x1391 JUMPI DUP1 CALLDATALOAD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 PUSH1 0x60 CALLDATACOPY POP POP POP CALLER PUSH1 0x4 SLOAD XOR PUSH2 0x1391 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x12 SSTORE PUSH1 0x0 DUP2 PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x3 DUP2 GT PUSH2 0x1391 JUMPI DUP1 ISZERO PUSH2 0xDBE JUMPI SWAP1 JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x60 ADD MLOAD DUP2 PUSH1 0x13 ADD SSTORE PUSH1 0x1 ADD DUP2 DUP2 XOR PUSH2 0xDA6 JUMPI JUMPDEST POP POP POP STOP JUMPDEST PUSH4 0x706523F DUP2 XOR PUSH2 0xE4A JUMPI PUSH1 0x64 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x1391 JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x1391 JUMPI PUSH1 0x60 MSTORE CALLER PUSH1 0x4 SLOAD XOR PUSH2 0x1391 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA959CBB PUSH1 0x80 MSTORE PUSH1 0x60 MLOAD PUSH1 0xA0 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0x80 PUSH1 0x44 PUSH1 0x9C PUSH1 0x0 DUP6 GAS CALL PUSH2 0xE2E JUMPI RETURNDATASIZE PUSH1 0x0 PUSH1 0x0 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 RETURNDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x80 MLOAD DUP1 PUSH1 0x1 SHR PUSH2 0x1391 JUMPI PUSH1 0xE0 MSTORE PUSH1 0xE0 POP POP STOP JUMPDEST PUSH4 0x1816DDD DUP2 XOR PUSH2 0xE69 JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0x4F6CCCE7 DUP2 XOR PUSH2 0xE88 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0x2F745C59 DUP2 XOR PUSH2 0xECB JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x1391 JUMPI PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD ISZERO PUSH2 0x1391 JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 RETURN JUMPDEST PUSH4 0x2FDD40D4 DUP2 XOR PUSH2 0xEEA JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0x9F181B5E DUP2 XOR PUSH2 0xF9 JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0x6FDDE3 DUP2 XOR PUSH2 0xF8E JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x20 DUP1 PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 ADD PUSH1 0xB SLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x2 DUP2 GT PUSH2 0x1391 JUMPI DUP1 ISZERO PUSH2 0xF60 JUMPI SWAP1 JUMPDEST DUP1 PUSH1 0xC ADD SLOAD DUP2 PUSH1 0x5 SHL DUP5 ADD MSTORE PUSH1 0x1 ADD DUP2 DUP2 XOR PUSH2 0xF49 JUMPI JUMPDEST POP POP POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP DUP2 ADD SWAP1 POP PUSH1 0x40 RETURN JUMPDEST PUSH4 0x95D89B41 DUP2 XOR PUSH2 0xFE6 JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1391 JUMPI PUSH1 0x20 DUP1 PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 ADD PUSH1 0xE SLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0xF SLOAD DUP2 MSTORE POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP DUP2 ADD SWAP1 POP PUSH1 0x40 RETURN JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD ISZERO PUSH2 0x1061 JUMPI PUSH1 0xB PUSH1 0xC0 MSTORE PUSH32 0x546F6B656E206E6F742030000000000000000000000 PUSH1 0xE0 MSTORE PUSH1 0xC0 POP PUSH1 0xC0 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH4 0x8C379A0 PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0xA0 MSTORE PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0xC0 MLOAD ADD AND PUSH1 0x44 ADD PUSH1 0x9C REVERT JUMPDEST PUSH1 0x60 MLOAD DUP1 PUSH1 0x8 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SSTORE PUSH1 0x1 PUSH1 0x8 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 ADD PUSH1 0x0 DUP3 PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x2 DUP2 GT PUSH2 0x1391 JUMPI DUP1 ISZERO PUSH2 0x10B9 JUMPI SWAP1 JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x80 ADD MLOAD DUP2 DUP5 ADD SSTORE PUSH1 0x1 ADD DUP2 DUP2 XOR PUSH2 0x10A2 JUMPI JUMPDEST POP POP POP POP PUSH1 0x20 DUP1 PUSH2 0x10 MSTORE DUP1 PUSH2 0x10 ADD PUSH1 0x60 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 DUP4 PUSH1 0x80 PUSH1 0x4 GAS STATICCALL POP POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP DUP2 ADD SWAP1 POP PUSH1 0xE0 MSTORE PUSH1 0xE0 DUP1 MLOAD PUSH1 0x20 DUP3 ADD SHA3 SWAP1 POP PUSH1 0xC0 MSTORE PUSH1 0x40 MLOAD PUSH1 0x7 PUSH1 0xC0 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH2 0x1391 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SSTORE PUSH1 0x2 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP2 DUP2 LT PUSH2 0x1391 JUMPI SWAP1 POP DUP2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH1 0x80 MLOAD EQ PUSH1 0xA0 MSTORE PUSH1 0x1 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x40 MLOAD EQ PUSH1 0xC0 MSTORE PUSH1 0x3 PUSH1 0x80 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SLOAD PUSH1 0xE0 MSTORE PUSH1 0x6 SLOAD PUSH4 0x47606390 PUSH2 0x120 MSTORE PUSH1 0x40 MLOAD PUSH2 0x140 MSTORE PUSH1 0x20 PUSH2 0x120 PUSH1 0x24 PUSH2 0x13C DUP5 GAS STATICCALL PUSH2 0x123 JUMPI RETURNDATASIZE PUSH1 0x0 PUSH1 0x0 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 RETURNDATASIZE LT PUSH2 0x1391 JUMPI PUSH2 0x120 MLOAD DUP1 PUSH1 0x1 SHR PUSH2 0x1391 JUMPI PUSH2 0x160 MSTORE PUSH2 0x160 SWAP1 POP MLOAD PUSH2 0x10 MSTORE PUSH1 0xA0 MLOAD PUSH2 0x1234 JUMPI PUSH1 0xC0 MLOAD PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1252 JUMPI PUSH1 0xE0 MLOAD PUSH2 0x124B JUMPI PUSH2 0x10 MLOAD PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD XOR PUSH2 0x1391 JUMPI PUSH1 0x0 PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SSTORE PUSH1 0x2 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x1 DUP2 SUB DUP2 DUP2 GT PUSH2 0x1391 JUMPI SWAP1 POP DUP2 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD XOR PUSH2 0x1391 JUMPI PUSH1 0x1 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD ISZERO PUSH2 0x12ED JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SSTORE JUMPDEST JUMP JUMPDEST PUSH2 0x1E0 MLOAD PUSH1 0x40 MSTORE PUSH2 0x1C0 MLOAD PUSH1 0x60 MSTORE PUSH2 0x138 PUSH2 0x20 PUSH2 0x1179 JUMP JUMPDEST PUSH2 0x20 MLOAD ISZERO PUSH2 0x1391 JUMPI PUSH2 0x1A0 MLOAD ISZERO PUSH2 0x1391 JUMPI PUSH2 0x180 MLOAD PUSH1 0x40 MSTORE PUSH2 0x1C0 MLOAD PUSH1 0x60 MSTORE PUSH2 0x1330 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x180 MLOAD PUSH1 0x40 MSTORE PUSH2 0x1C0 MLOAD PUSH1 0x60 MSTORE PUSH2 0x1346 PUSH2 0x125A JUMP JUMPDEST PUSH2 0x1A0 MLOAD PUSH1 0x40 MSTORE PUSH2 0x1C0 MLOAD PUSH1 0x60 MSTORE PUSH2 0x135C PUSH2 0x112C JUMP JUMPDEST PUSH2 0x1C0 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x180 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 PUSH2 0x20 LOG4 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT LOG1 PUSH6 0x767970657283 STOP SUB SMOD STOP SIGNEXTEND",
  "pcMap": {
    "0": {
      "offset": [
        0,
        19613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2": {
      "op": "CALLDATASIZE"
    },
    "3": {
      "op": "GT"
    },
    "4": {
      "op": "PUSH2",
      "value": "0x0C"
    },
    "7": {
      "op": "JUMPI"
    },
    "8": {
      "op": "PUSH2",
      "value": "0xFE8"
    },
    "11": {
      "op": "JUMP"
    },
    "12": {
      "op": "JUMPDEST"
    },
    "13": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15": {
      "op": "CALLDATALOAD"
    },
    "16": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18": {
      "op": "SHR"
    },
    "19": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "24": {
      "op": "DUP2"
    },
    "25": {
      "op": "XOR"
    },
    "26": {
      "op": "PUSH2",
      "value": "0x069"
    },
    "29": {
      "op": "JUMPI"
    },
    "30": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "32": {
      "op": "CALLDATASIZE"
    },
    "33": {
      "op": "LT"
    },
    "34": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "37": {
      "op": "JUMPI"
    },
    "38": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "40": {
      "op": "CALLDATALOAD"
    },
    "41": {
      "op": "DUP1"
    },
    "42": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "44": {
      "op": "SHR"
    },
    "45": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "48": {
      "op": "JUMPI"
    },
    "49": {
      "fn": "NFT.transferFrom",
      "offset": [
        11529,
        11543
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "52": {
      "fn": "NFT.transferFrom",
      "offset": [
        11529,
        11543
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "53": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "55": {
      "op": "CALLDATALOAD"
    },
    "56": {
      "op": "DUP1"
    },
    "57": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "59": {
      "op": "SHR"
    },
    "60": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "63": {
      "op": "JUMPI"
    },
    "64": {
      "fn": "NFT.transferFrom",
      "offset": [
        11545,
        11557
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x240"
    },
    "67": {
      "fn": "NFT.transferFrom",
      "offset": [
        11545,
        11557
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "68": {
      "fn": "NFT.transferFrom",
      "offset": [
        12155,
        12160
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 0,
      "value": "0x220"
    },
    "71": {
      "op": "MLOAD"
    },
    "72": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "75": {
      "op": "MSTORE"
    },
    "76": {
      "fn": "NFT.transferFrom",
      "offset": [
        12162,
        12165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x240"
    },
    "79": {
      "op": "MLOAD"
    },
    "80": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "83": {
      "op": "MSTORE"
    },
    "84": {
      "fn": "NFT.transferFrom",
      "offset": [
        12167,
        12175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "86": {
      "op": "CALLDATALOAD"
    },
    "87": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "90": {
      "op": "MSTORE"
    },
    "91": {
      "fn": "NFT.transferFrom",
      "offset": [
        12177,
        12187
      ],
      "op": "CALLER",
      "path": "0"
    },
    "92": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "95": {
      "op": "MSTORE"
    },
    "96": {
      "op": "PUSH2",
      "value": "0x067"
    },
    "99": {
      "fn": "NFT.transferFrom",
      "offset": [
        12136,
        12188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12EF"
    },
    "102": {
      "fn": "NFT.transferFrom",
      "jump": "i",
      "offset": [
        12136,
        12188
      ],
      "op": "JUMP",
      "path": "0"
    },
    "103": {
      "op": "JUMPDEST"
    },
    "104": {
      "op": "STOP"
    },
    "105": {
      "op": "JUMPDEST"
    },
    "106": {
      "op": "PUSH4",
      "value": "0x42842EE"
    },
    "111": {
      "op": "DUP2"
    },
    "112": {
      "op": "XOR"
    },
    "113": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        12210,
        13544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x093"
    },
    "116": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        12210,
        13544
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "117": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "119": {
      "op": "CALLDATASIZE"
    },
    "120": {
      "op": "LT"
    },
    "121": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "124": {
      "op": "JUMPI"
    },
    "125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "127": {
      "op": "PUSH2",
      "value": "0x680"
    },
    "130": {
      "op": "MSTORE"
    },
    "131": {
      "op": "PUSH2",
      "value": "0x680"
    },
    "134": {
      "op": "DUP1"
    },
    "135": {
      "op": "MLOAD"
    },
    "136": {
      "op": "DUP1"
    },
    "137": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        12313,
        12331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "140": {
      "op": "MSTORE"
    },
    "141": {
      "op": "POP"
    },
    "142": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        12313,
        12331
      ],
      "op": "POP",
      "path": "0"
    },
    "143": {
      "op": "PUSH2",
      "value": "0x0CB"
    },
    "146": {
      "op": "JUMP"
    },
    "147": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        12210,
        13544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "148": {
      "op": "PUSH4",
      "value": "0xB88D4FDE"
    },
    "153": {
      "op": "DUP2"
    },
    "154": {
      "op": "XOR"
    },
    "155": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        12210,
        13544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0"
    },
    "158": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        12210,
        13544
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "159": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "161": {
      "op": "CALLDATASIZE"
    },
    "162": {
      "op": "LT"
    },
    "163": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "166": {
      "op": "JUMPI"
    },
    "167": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "169": {
      "op": "CALLDATALOAD"
    },
    "170": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "172": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        12313,
        12331
      ],
      "op": "ADD",
      "path": "0"
    },
    "173": {
      "op": "PUSH2",
      "value": "0x40"
    },
    "176": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        12313,
        12331
      ],
      "op": "DUP2",
      "path": "0"
    },
    "177": {
      "op": "CALLDATALOAD"
    },
    "178": {
      "op": "GT"
    },
    "179": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "182": {
      "op": "JUMPI"
    },
    "183": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        12313,
        12331
      ],
      "op": "DUP1",
      "path": "0"
    },
    "184": {
      "op": "CALLDATALOAD"
    },
    "185": {
      "op": "DUP1"
    },
    "186": {
      "op": "PUSH2",
      "value": "0x260"
    },
    "189": {
      "op": "MSTORE"
    },
    "190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "192": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        12313,
        12331
      ],
      "op": "DUP3",
      "path": "0"
    },
    "193": {
      "op": "ADD"
    },
    "194": {
      "op": "DUP2"
    },
    "195": {
      "op": "DUP2"
    },
    "196": {
      "op": "PUSH2",
      "value": "0x280"
    },
    "199": {
      "op": "CALLDATACOPY"
    },
    "200": {
      "op": "POP"
    },
    "201": {
      "op": "POP"
    },
    "202": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        12313,
        12331
      ],
      "op": "POP",
      "path": "0"
    },
    "203": {
      "op": "JUMPDEST"
    },
    "204": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "206": {
      "op": "CALLDATALOAD"
    },
    "207": {
      "op": "DUP1"
    },
    "208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "210": {
      "op": "SHR"
    },
    "211": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "214": {
      "op": "JUMPI"
    },
    "215": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        12240,
        12254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "218": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        12240,
        12254
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "219": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "221": {
      "op": "CALLDATALOAD"
    },
    "222": {
      "op": "DUP1"
    },
    "223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "225": {
      "op": "SHR"
    },
    "226": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "229": {
      "op": "JUMPI"
    },
    "230": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        12264,
        12276
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x240"
    },
    "233": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        12264,
        12276
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "234": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13135,
        13140
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 1,
      "value": "0x220"
    },
    "237": {
      "op": "MLOAD"
    },
    "238": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "241": {
      "op": "MSTORE"
    },
    "242": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13142,
        13145
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x240"
    },
    "245": {
      "op": "MLOAD"
    },
    "246": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13318,
        13326
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x44"
    },
    "252": {
      "op": "CALLDATALOAD"
    },
    "253": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "256": {
      "op": "MSTORE"
    },
    "257": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13157,
        13167
      ],
      "op": "CALLER",
      "path": "0"
    },
    "258": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "261": {
      "op": "MSTORE"
    },
    "262": {
      "op": "PUSH2",
      "value": "0x1D"
    },
    "265": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13116,
        13168
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12EF"
    },
    "268": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        13116,
        13168
      ],
      "op": "JUMP",
      "path": "0"
    },
    "269": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13116,
        13168
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "270": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13176,
        13179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x240"
    },
    "273": {
      "op": "MLOAD"
    },
    "274": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13176,
        13191
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "275": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13176,
        13191
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "276": {
      "op": "PUSH2",
      "value": "0x1EE"
    },
    "279": {
      "branch": 3,
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13173,
        13544
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "280": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13262,
        13281
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x240"
    },
    "283": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13262,
        13334
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "284": {
      "op": "PUSH4",
      "value": "0x15B7A2"
    },
    "289": {
      "op": "PUSH2",
      "value": "0x6C0"
    },
    "292": {
      "op": "MSTORE"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "295": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13299,
        13309
      ],
      "op": "CALLER",
      "path": "0"
    },
    "296": {
      "op": "PUSH2",
      "value": "0x6E0"
    },
    "299": {
      "op": "MSTORE"
    },
    "300": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13311,
        13316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "303": {
      "op": "MLOAD"
    },
    "304": {
      "op": "PUSH2",
      "value": "0x70"
    },
    "307": {
      "op": "MSTORE"
    },
    "308": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13318,
        13326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "310": {
      "op": "CALLDATALOAD"
    },
    "311": {
      "op": "PUSH2",
      "value": "0x720"
    },
    "314": {
      "op": "MSTORE"
    },
    "315": {
      "op": "DUP1"
    },
    "316": {
      "op": "PUSH2",
      "value": "0x740"
    },
    "319": {
      "op": "MSTORE"
    },
    "320": {
      "op": "DUP1"
    },
    "321": {
      "op": "PUSH2",
      "value": "0x6E0"
    },
    "324": {
      "op": "ADD"
    },
    "325": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13328,
        13333
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "328": {
      "op": "MLOAD"
    },
    "329": {
      "op": "DUP1"
    },
    "330": {
      "op": "DUP3"
    },
    "331": {
      "op": "MSTORE"
    },
    "332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "334": {
      "op": "DUP3"
    },
    "335": {
      "op": "ADD"
    },
    "336": {
      "op": "DUP2"
    },
    "337": {
      "op": "DUP2"
    },
    "338": {
      "op": "DUP4"
    },
    "339": {
      "op": "PUSH2",
      "value": "0x280"
    },
    "342": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "344": {
      "op": "GAS"
    },
    "345": {
      "op": "STATICCALL"
    },
    "346": {
      "op": "POP"
    },
    "347": {
      "op": "POP"
    },
    "348": {
      "op": "POP"
    },
    "349": {
      "op": "DUP1"
    },
    "350": {
      "op": "MLOAD"
    },
    "351": {
      "op": "DUP1"
    },
    "352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "354": {
      "op": "DUP4"
    },
    "355": {
      "op": "ADD"
    },
    "356": {
      "op": "ADD"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "359": {
      "op": "DUP3"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "362": {
      "op": "SUB"
    },
    "363": {
      "op": "AND"
    },
    "364": {
      "op": "CALLDATASIZE"
    },
    "365": {
      "op": "DUP3"
    },
    "366": {
      "op": "CALLDATACOPY"
    },
    "367": {
      "op": "POP"
    },
    "368": {
      "op": "POP"
    },
    "369": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "371": {
      "op": "NOT"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "374": {
      "op": "DUP3"
    },
    "375": {
      "op": "MLOAD"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "378": {
      "op": "ADD"
    },
    "379": {
      "op": "ADD"
    },
    "380": {
      "op": "AND"
    },
    "381": {
      "op": "SWAP1"
    },
    "382": {
      "op": "POP"
    },
    "383": {
      "op": "DUP2"
    },
    "384": {
      "op": "ADD"
    },
    "385": {
      "op": "POP"
    },
    "386": {
      "op": "POP"
    },
    "387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "389": {
      "op": "PUSH2",
      "value": "0x6C0"
    },
    "392": {
      "op": "PUSH2",
      "value": "0x4A4"
    },
    "395": {
      "op": "PUSH2",
      "value": "0x6DC"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "400": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13262,
        13334
      ],
      "op": "DUP6",
      "path": "0"
    },
    "401": {
      "op": "GAS"
    },
    "402": {
      "op": "CALL"
    },
    "403": {
      "op": "PUSH2",
      "value": "0x1A1"
    },
    "406": {
      "op": "JUMPI"
    },
    "407": {
      "op": "RETURNDATASIZE"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "412": {
      "op": "RETURNDATACOPY"
    },
    "413": {
      "op": "RETURNDATASIZE"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "416": {
      "op": "REVERT"
    },
    "417": {
      "op": "JUMPDEST"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "420": {
      "op": "RETURNDATASIZE"
    },
    "421": {
      "op": "LT"
    },
    "422": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "425": {
      "op": "JUMPI"
    },
    "426": {
      "op": "PUSH2",
      "value": "0x6C0"
    },
    "429": {
      "op": "MLOAD"
    },
    "430": {
      "op": "DUP1"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "433": {
      "op": "SHL"
    },
    "434": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "437": {
      "op": "JUMPI"
    },
    "438": {
      "op": "PUSH2",
      "value": "0xB80"
    },
    "441": {
      "op": "MSTORE"
    },
    "442": {
      "op": "PUSH2",
      "value": "0xB80"
    },
    "445": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13262,
        13334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "446": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13262,
        13334
      ],
      "op": "POP",
      "path": "0"
    },
    "447": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13240,
        13334
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "448": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13240,
        13334
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A0"
    },
    "451": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13240,
        13334
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "452": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13464,
        13544
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 4,
      "value": "0x15B7A20000000000000000000000000000"
    },
    "485": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13449,
        13460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A0"
    },
    "488": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13449,
        13544
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "489": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13449,
        13544
      ],
      "op": "XOR",
      "path": "0"
    },
    "490": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13442,
        13544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "493": {
      "branch": 5,
      "fn": "NFT.safeTransferFrom",
      "offset": [
        13442,
        13544
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "494": {
      "op": "JUMPDEST"
    },
    "495": {
      "op": "STOP"
    },
    "496": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        12210,
        13544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "497": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "502": {
      "op": "DUP2"
    },
    "503": {
      "op": "XOR"
    },
    "504": {
      "op": "PUSH2",
      "value": "0x2CD"
    },
    "507": {
      "op": "JUMPI"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "510": {
      "op": "CALLDATASIZE"
    },
    "511": {
      "op": "LT"
    },
    "512": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "515": {
      "op": "JUMPI"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "518": {
      "op": "CALLDATALOAD"
    },
    "519": {
      "op": "DUP1"
    },
    "520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "522": {
      "op": "SHR"
    },
    "523": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "526": {
      "op": "JUMPI"
    },
    "527": {
      "fn": "NFT.approve",
      "offset": [
        13578,
        13596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "529": {
      "fn": "NFT.approve",
      "offset": [
        13578,
        13596
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "530": {
      "fn": "NFT.approve",
      "offset": [
        14173,
        14187
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x0"
    },
    "532": {
      "fn": "NFT.approve",
      "offset": [
        14682,
        14690
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x24"
    },
    "534": {
      "fn": "NFT.approve",
      "offset": [
        14173,
        14197
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "535": {
      "fn": "NFT.approve",
      "offset": [
        14173,
        14197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "537": {
      "fn": "NFT.approve",
      "offset": [
        14173,
        14197
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "538": {
      "fn": "NFT.approve",
      "offset": [
        14173,
        14197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "540": {
      "fn": "NFT.approve",
      "offset": [
        14173,
        14197
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "541": {
      "fn": "NFT.approve",
      "offset": [
        14173,
        14197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "543": {
      "fn": "NFT.approve",
      "offset": [
        14173,
        14197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "545": {
      "fn": "NFT.approve",
      "offset": [
        14173,
        14197
      ],
      "op": "SHA3",
      "path": "0"
    },
    "546": {
      "fn": "NFT.approve",
      "offset": [
        14156,
        14197
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "547": {
      "fn": "NFT.approve",
      "offset": [
        14156,
        14197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "549": {
      "fn": "NFT.approve",
      "offset": [
        14156,
        14197
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "550": {
      "fn": "NFT.approve",
      "offset": [
        14255,
        14260
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x60"
    },
    "552": {
      "fn": "NFT.approve",
      "offset": [
        14255,
        14278
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "553": {
      "fn": "NFT.approve",
      "offset": [
        14255,
        14278
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "554": {
      "fn": "NFT.approve",
      "offset": [
        14248,
        14278
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "557": {
      "branch": 9,
      "fn": "NFT.approve",
      "offset": [
        14248,
        14278
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "558": {
      "fn": "NFT.approve",
      "offset": [
        14352,
        14357
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x60"
    },
    "560": {
      "op": "MLOAD"
    },
    "561": {
      "fn": "NFT.approve",
      "offset": [
        14339,
        14348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "563": {
      "op": "MLOAD"
    },
    "564": {
      "op": "EQ"
    },
    "565": {
      "fn": "NFT.approve",
      "offset": [
        14332,
        14357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "568": {
      "branch": 11,
      "fn": "NFT.approve",
      "offset": [
        14332,
        14357
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "569": {
      "fn": "NFT.approve",
      "offset": [
        14437,
        14447
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 12
    },
    "570": {
      "fn": "NFT.approve",
      "offset": [
        14409,
        14423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "572": {
      "fn": "NFT.approve",
      "offset": [
        14682,
        14690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "574": {
      "fn": "NFT.approve",
      "offset": [
        14409,
        14433
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "575": {
      "fn": "NFT.approve",
      "offset": [
        14409,
        14433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "577": {
      "fn": "NFT.approve",
      "offset": [
        14409,
        14433
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "578": {
      "fn": "NFT.approve",
      "offset": [
        14409,
        14433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "580": {
      "fn": "NFT.approve",
      "offset": [
        14409,
        14433
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "581": {
      "fn": "NFT.approve",
      "offset": [
        14409,
        14433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "583": {
      "fn": "NFT.approve",
      "offset": [
        14409,
        14433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "585": {
      "fn": "NFT.approve",
      "offset": [
        14409,
        14433
      ],
      "op": "SHA3",
      "path": "0"
    },
    "586": {
      "fn": "NFT.approve",
      "offset": [
        14409,
        14447
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "587": {
      "fn": "NFT.approve",
      "offset": [
        14409,
        14447
      ],
      "op": "EQ",
      "path": "0"
    },
    "588": {
      "fn": "NFT.approve",
      "offset": [
        14387,
        14447
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "590": {
      "fn": "NFT.approve",
      "offset": [
        14387,
        14447
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "591": {
      "fn": "NFT.approve",
      "offset": [
        14484,
        14505
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x3"
    },
    "593": {
      "fn": "NFT.approve",
      "offset": [
        14506,
        14511
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "595": {
      "op": "MLOAD"
    },
    "596": {
      "fn": "NFT.approve",
      "offset": [
        14484,
        14512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "598": {
      "fn": "NFT.approve",
      "offset": [
        14484,
        14512
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "599": {
      "fn": "NFT.approve",
      "offset": [
        14484,
        14512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "601": {
      "fn": "NFT.approve",
      "offset": [
        14484,
        14512
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "602": {
      "fn": "NFT.approve",
      "offset": [
        14484,
        14512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "604": {
      "fn": "NFT.approve",
      "offset": [
        14484,
        14512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "606": {
      "fn": "NFT.approve",
      "offset": [
        14484,
        14512
      ],
      "op": "SHA3",
      "path": "0"
    },
    "607": {
      "op": "DUP1"
    },
    "608": {
      "fn": "NFT.approve",
      "offset": [
        14514,
        14524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "611": {
      "op": "MSTORE"
    },
    "612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "614": {
      "op": "MSTORE"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "619": {
      "op": "SHA3"
    },
    "620": {
      "fn": "NFT.approve",
      "offset": [
        14483,
        14525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "621": {
      "fn": "NFT.approve",
      "offset": [
        14483,
        14525
      ],
      "op": "POP",
      "path": "0"
    },
    "622": {
      "op": "SLOAD"
    },
    "623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "625": {
      "fn": "NFT.approve",
      "offset": [
        14452,
        14525
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "626": {
      "fn": "NFT.approve",
      "offset": [
        14538,
        14551
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x80"
    },
    "628": {
      "op": "MLOAD"
    },
    "629": {
      "fn": "NFT.approve",
      "offset": [
        14538,
        14577
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "632": {
      "fn": "NFT.approve",
      "offset": [
        14538,
        14577
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "633": {
      "fn": "NFT.approve",
      "offset": [
        14555,
        14577
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "635": {
      "fn": "NFT.approve",
      "offset": [
        14538,
        14577
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "636": {
      "fn": "NFT.approve",
      "offset": [
        14538,
        14577
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x283"
    },
    "639": {
      "fn": "NFT.approve",
      "offset": [
        14538,
        14577
      ],
      "op": "JUMP",
      "path": "0"
    },
    "640": {
      "fn": "NFT.approve",
      "offset": [
        14538,
        14577
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "641": {
      "fn": "NFT.approve",
      "offset": [
        14538,
        14577
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "643": {
      "fn": "NFT.approve",
      "offset": [
        14538,
        14577
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "644": {
      "fn": "NFT.approve",
      "offset": [
        14530,
        14578
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "645": {
      "fn": "NFT.approve",
      "offset": [
        14530,
        14578
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "648": {
      "branch": 15,
      "fn": "NFT.approve",
      "offset": [
        14530,
        14578
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "649": {
      "fn": "NFT.approve",
      "offset": [
        14637,
        14646
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x40"
    },
    "651": {
      "op": "MLOAD"
    },
    "652": {
      "fn": "NFT.approve",
      "offset": [
        14606,
        14624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "654": {
      "fn": "NFT.approve",
      "offset": [
        14682,
        14690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "656": {
      "fn": "NFT.approve",
      "offset": [
        14606,
        14634
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "657": {
      "fn": "NFT.approve",
      "offset": [
        14606,
        14634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "659": {
      "fn": "NFT.approve",
      "offset": [
        14606,
        14634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "660": {
      "fn": "NFT.approve",
      "offset": [
        14606,
        14634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "662": {
      "fn": "NFT.approve",
      "offset": [
        14606,
        14634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "663": {
      "fn": "NFT.approve",
      "offset": [
        14606,
        14634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "665": {
      "fn": "NFT.approve",
      "offset": [
        14606,
        14634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "667": {
      "fn": "NFT.approve",
      "offset": [
        14606,
        14634
      ],
      "op": "SHA3",
      "path": "0"
    },
    "668": {
      "fn": "NFT.approve",
      "offset": [
        14606,
        14646
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "669": {
      "fn": "NFT.approve",
      "offset": [
        14682,
        14690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "671": {
      "fn": "NFT.approve",
      "offset": [
        14651,
        14691
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "672": {
      "fn": "NFT.approve",
      "offset": [
        14671,
        14680
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "674": {
      "fn": "NFT.approve",
      "offset": [
        14651,
        14691
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "675": {
      "fn": "NFT.approve",
      "offset": [
        14664,
        14669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "677": {
      "fn": "NFT.approve",
      "offset": [
        14651,
        14691
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "678": {
      "fn": "NFT.approve",
      "offset": [
        14651,
        14691
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925"
    },
    "711": {
      "fn": "NFT.approve",
      "offset": [
        14651,
        14691
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "713": {
      "fn": "NFT.approve",
      "offset": [
        14651,
        14691
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "715": {
      "fn": "NFT.approve",
      "offset": [
        14651,
        14691
      ],
      "op": "LOG4",
      "path": "0"
    },
    "716": {
      "op": "STOP"
    },
    "717": {
      "op": "JUMPDEST"
    },
    "718": {
      "op": "CALLVALUE"
    },
    "719": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "722": {
      "op": "JUMPI"
    },
    "723": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "728": {
      "op": "DUP2"
    },
    "729": {
      "op": "XOR"
    },
    "730": {
      "op": "PUSH2",
      "value": "0x3DE"
    },
    "733": {
      "op": "JUMPI"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "736": {
      "op": "CALLDATASIZE"
    },
    "737": {
      "op": "LT"
    },
    "738": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "741": {
      "op": "JUMPI"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "744": {
      "op": "CALLDATALOAD"
    },
    "745": {
      "op": "DUP1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "748": {
      "op": "SHL"
    },
    "749": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "752": {
      "op": "JUMPI"
    },
    "753": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5042,
        5062
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "755": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5042,
        5062
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "756": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5324
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x40"
    },
    "758": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5348
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "759": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5328,
        5348
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x1FFC9A70000000000000000000000000000"
    },
    "792": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5348
      ],
      "op": "DUP2",
      "path": "0"
    },
    "793": {
      "op": "XOR"
    },
    "794": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5348
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324"
    },
    "797": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5348
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5348
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D3"
    },
    "803": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5348
      ],
      "op": "JUMP",
      "path": "0"
    },
    "804": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5348
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "805": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5328,
        5348
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x80AC58CD0000000000000000000000000000"
    },
    "838": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5348
      ],
      "op": "DUP2",
      "path": "0"
    },
    "839": {
      "op": "XOR"
    },
    "840": {
      "op": "PUSH2",
      "value": "0x352"
    },
    "843": {
      "op": "JUMPI"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "846": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5348
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D3"
    },
    "849": {
      "op": "JUMP"
    },
    "850": {
      "op": "JUMPDEST"
    },
    "851": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5328,
        5348
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x15B7A20000000000000000000000000000"
    },
    "884": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5348
      ],
      "op": "DUP2",
      "path": "0"
    },
    "885": {
      "op": "XOR"
    },
    "886": {
      "op": "PUSH2",
      "value": "0x380"
    },
    "889": {
      "op": "JUMPI"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "892": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5348
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D3"
    },
    "895": {
      "op": "JUMP"
    },
    "896": {
      "op": "JUMPDEST"
    },
    "897": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5328,
        5348
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x78E9D630000000000000000000000000000"
    },
    "930": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5348
      ],
      "op": "DUP2",
      "path": "0"
    },
    "931": {
      "op": "XOR"
    },
    "932": {
      "op": "PUSH2",
      "value": "0x3AE"
    },
    "935": {
      "op": "JUMPI"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "938": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5348
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D3"
    },
    "941": {
      "op": "JUMP"
    },
    "942": {
      "op": "JUMPDEST"
    },
    "943": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5328,
        5348
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x5B5E139F0000000000000000000000000000"
    },
    "976": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5348
      ],
      "op": "DUP2",
      "path": "0"
    },
    "977": {
      "op": "XOR"
    },
    "978": {
      "op": "ISZERO"
    },
    "979": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5348
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "980": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5348
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "981": {
      "fn": "NFT.supportsInterface",
      "offset": [
        5312,
        5348
      ],
      "op": "POP",
      "path": "0"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "984": {
      "op": "MSTORE"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "989": {
      "op": "RETURN"
    },
    "990": {
      "op": "JUMPDEST"
    },
    "991": {
      "op": "PUSH4",
      "value": "0xB36A182"
    },
    "996": {
      "op": "DUP2"
    },
    "997": {
      "op": "XOR"
    },
    "998": {
      "op": "PUSH2",
      "value": "0x592"
    },
    "1001": {
      "op": "JUMPI"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1004": {
      "op": "CALLDATASIZE"
    },
    "1005": {
      "op": "LT"
    },
    "1006": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1009": {
      "op": "JUMPI"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1012": {
      "op": "CALLDATALOAD"
    },
    "1013": {
      "op": "DUP1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1016": {
      "op": "SHR"
    },
    "1017": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1020": {
      "op": "JUMPI"
    },
    "1021": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5431,
        5455
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "1024": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5431,
        5455
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1027": {
      "op": "CALLDATALOAD"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1030": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5457,
        5486
      ],
      "op": "ADD",
      "path": "0"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1033": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5457,
        5486
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1034": {
      "op": "CALLDATALOAD"
    },
    "1035": {
      "op": "GT"
    },
    "1036": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1039": {
      "op": "JUMPI"
    },
    "1040": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5457,
        5486
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1041": {
      "op": "CALLDATALOAD"
    },
    "1042": {
      "op": "DUP1"
    },
    "1043": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "1046": {
      "op": "MSTORE"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1049": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5457,
        5486
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1050": {
      "op": "ADD"
    },
    "1051": {
      "op": "DUP2"
    },
    "1052": {
      "op": "DUP2"
    },
    "1053": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "1056": {
      "op": "CALLDATACOPY"
    },
    "1057": {
      "op": "POP"
    },
    "1058": {
      "op": "POP"
    },
    "1059": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5457,
        5486
      ],
      "op": "POP",
      "path": "0"
    },
    "1060": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5549,
        5558
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x44"
    },
    "1062": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5532,
        5558
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1063": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5532,
        5545
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "1065": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5532,
        5558
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1066": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5532,
        5558
      ],
      "op": "XOR",
      "path": "0"
    },
    "1067": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5525,
        5558
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "1070": {
      "branch": 19,
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5525,
        5558
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1073": {
      "op": "DUP1"
    },
    "1074": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "1077": {
      "op": "MSTORE"
    },
    "1078": {
      "op": "DUP1"
    },
    "1079": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "1082": {
      "op": "ADD"
    },
    "1083": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5663,
        5680
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0x1A0"
    },
    "1086": {
      "op": "MLOAD"
    },
    "1087": {
      "op": "DUP1"
    },
    "1088": {
      "op": "DUP3"
    },
    "1089": {
      "op": "MSTORE"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1092": {
      "op": "DUP3"
    },
    "1093": {
      "op": "ADD"
    },
    "1094": {
      "op": "DUP2"
    },
    "1095": {
      "op": "DUP2"
    },
    "1096": {
      "op": "DUP4"
    },
    "1097": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1102": {
      "op": "GAS"
    },
    "1103": {
      "op": "STATICCALL"
    },
    "1104": {
      "op": "POP"
    },
    "1105": {
      "op": "POP"
    },
    "1106": {
      "op": "POP"
    },
    "1107": {
      "op": "DUP1"
    },
    "1108": {
      "op": "MLOAD"
    },
    "1109": {
      "op": "DUP1"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1112": {
      "op": "DUP4"
    },
    "1113": {
      "op": "ADD"
    },
    "1114": {
      "op": "ADD"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1117": {
      "op": "DUP3"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1120": {
      "op": "SUB"
    },
    "1121": {
      "op": "AND"
    },
    "1122": {
      "op": "CALLDATASIZE"
    },
    "1123": {
      "op": "DUP3"
    },
    "1124": {
      "op": "CALLDATACOPY"
    },
    "1125": {
      "op": "POP"
    },
    "1126": {
      "op": "POP"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1129": {
      "op": "NOT"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1132": {
      "op": "DUP3"
    },
    "1133": {
      "op": "MLOAD"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1136": {
      "op": "ADD"
    },
    "1137": {
      "op": "ADD"
    },
    "1138": {
      "op": "AND"
    },
    "1139": {
      "op": "SWAP1"
    },
    "1140": {
      "op": "POP"
    },
    "1141": {
      "op": "DUP2"
    },
    "1142": {
      "op": "ADD"
    },
    "1143": {
      "op": "SWAP1"
    },
    "1144": {
      "op": "POP"
    },
    "1145": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "1148": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5651,
        5681
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1149": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5651,
        5681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "1152": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5641,
        5682
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1153": {
      "op": "MLOAD"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1156": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5641,
        5682
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1157": {
      "op": "ADD"
    },
    "1158": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5641,
        5682
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1159": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5641,
        5682
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1160": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5641,
        5682
      ],
      "op": "POP",
      "path": "0"
    },
    "1161": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5619,
        5682
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "1164": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5619,
        5682
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1165": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5694,
        5719
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x7"
    },
    "1167": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5720,
        5730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "1170": {
      "op": "MLOAD"
    },
    "1171": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5694,
        5731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1173": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5694,
        5731
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1174": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5694,
        5731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1176": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5694,
        5731
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1177": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5694,
        5731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1179": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5694,
        5731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1181": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5694,
        5731
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1182": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5694,
        5736
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1183": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5694,
        5736
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1184": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5687,
        5759
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59"
    },
    "1187": {
      "branch": 22,
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5687,
        5759
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1190": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "1193": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5738,
        5759
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1194": {
      "op": "PUSH32",
      "value": "0x746F6B656E206973206E6F6E2D756E697175650000000000000"
    },
    "1227": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "1230": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5738,
        5759
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1231": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5738,
        5759
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "1234": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5687,
        5759
      ],
      "op": "POP",
      "path": "0"
    },
    "1235": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "1238": {
      "op": "MLOAD"
    },
    "1239": {
      "op": "DUP1"
    },
    "1240": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "1243": {
      "op": "ADD"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1246": {
      "op": "DUP3"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1249": {
      "op": "SUB"
    },
    "1250": {
      "op": "AND"
    },
    "1251": {
      "op": "CALLDATASIZE"
    },
    "1252": {
      "op": "DUP3"
    },
    "1253": {
      "op": "CALLDATACOPY"
    },
    "1254": {
      "op": "POP"
    },
    "1255": {
      "op": "POP"
    },
    "1256": {
      "op": "PUSH4",
      "value": "0x8C379A0"
    },
    "1261": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "1264": {
      "op": "MSTORE"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1267": {
      "op": "PUSH2",
      "value": "0x20"
    },
    "1270": {
      "op": "MSTORE"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1273": {
      "op": "NOT"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1276": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "1279": {
      "op": "MLOAD"
    },
    "1280": {
      "op": "ADD"
    },
    "1281": {
      "op": "AND"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1284": {
      "op": "ADD"
    },
    "1285": {
      "op": "PUSH2",
      "value": "0x1FC"
    },
    "1288": {
      "op": "REVERT"
    },
    "1289": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5687,
        5759
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1290": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5782,
        5797
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 23,
      "value": "0x180"
    },
    "1293": {
      "op": "MLOAD"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1296": {
      "op": "MSTORE"
    },
    "1297": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5799,
        5814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "1299": {
      "op": "SLOAD"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1302": {
      "op": "MSTORE"
    },
    "1303": {
      "op": "PUSH2",
      "value": "0x51E"
    },
    "1306": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5765,
        5815
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112C"
    },
    "1309": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "jump": "i",
      "offset": [
        5765,
        5815
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1310": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5765,
        5815
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1311": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0xA"
    },
    "1313": {
      "op": "SLOAD"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1316": {
      "op": "MSTORE"
    },
    "1317": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5855,
        5872
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "1320": {
      "op": "MLOAD"
    },
    "1321": {
      "op": "DUP1"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1324": {
      "op": "MSTORE"
    },
    "1325": {
      "op": "DUP1"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1328": {
      "op": "DUP3"
    },
    "1329": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1334": {
      "op": "GAS"
    },
    "1335": {
      "op": "STATICCALL"
    },
    "1336": {
      "op": "POP"
    },
    "1337": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5820,
        5873
      ],
      "op": "POP",
      "path": "0"
    },
    "1338": {
      "op": "PUSH2",
      "value": "0x541"
    },
    "1341": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5820,
        5873
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFEE"
    },
    "1344": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "jump": "i",
      "offset": [
        5820,
        5873
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1345": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5820,
        5873
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1346": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5924,
        5939
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0xA"
    },
    "1348": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5878,
        5940
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1349": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5907,
        5922
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "1352": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5878,
        5940
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1353": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5878,
        5940
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1355": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5878,
        5940
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1388": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5878,
        5940
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1390": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5878,
        5940
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "1393": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5878,
        5940
      ],
      "op": "LOG4",
      "path": "0"
    },
    "1394": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5945,
        5960
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0xA"
    },
    "1396": {
      "op": "SLOAD"
    },
    "1397": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5964,
        5965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1399": {
      "op": "DUP2"
    },
    "1400": {
      "op": "ADD"
    },
    "1401": {
      "op": "DUP2"
    },
    "1402": {
      "op": "DUP2"
    },
    "1403": {
      "op": "LT"
    },
    "1404": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1407": {
      "op": "JUMPI"
    },
    "1408": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5945,
        5965
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1409": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5945,
        5965
      ],
      "op": "POP",
      "path": "0"
    },
    "1410": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5945,
        5960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "1412": {
      "op": "SSTORE"
    },
    "1413": {
      "fn": "NFT.safeMintToThisContractWithApprovalToExternalContractUsingPassword",
      "offset": [
        5977,
        5992
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0xA"
    },
    "1415": {
      "op": "SLOAD"
    },
    "1416": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "1419": {
      "op": "MSTORE"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1422": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "1425": {
      "op": "RETURN"
    },
    "1426": {
      "op": "JUMPDEST"
    },
    "1427": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1432": {
      "op": "DUP2"
    },
    "1433": {
      "op": "XOR"
    },
    "1434": {
      "op": "PUSH2",
      "value": "0x5D5"
    },
    "1437": {
      "op": "JUMPI"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1440": {
      "op": "CALLDATASIZE"
    },
    "1441": {
      "op": "LT"
    },
    "1442": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1445": {
      "op": "JUMPI"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1448": {
      "op": "CALLDATALOAD"
    },
    "1449": {
      "op": "DUP1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1452": {
      "op": "SHR"
    },
    "1453": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1456": {
      "op": "JUMPI"
    },
    "1457": {
      "fn": "NFT.balanceOf",
      "offset": [
        6048,
        6063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1459": {
      "fn": "NFT.balanceOf",
      "offset": [
        6048,
        6063
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1460": {
      "fn": "NFT.balanceOf",
      "offset": [
        6323,
        6329
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x40"
    },
    "1462": {
      "fn": "NFT.balanceOf",
      "offset": [
        6323,
        6347
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1463": {
      "fn": "NFT.balanceOf",
      "offset": [
        6323,
        6347
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1464": {
      "fn": "NFT.balanceOf",
      "offset": [
        6316,
        6347
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "1467": {
      "branch": 29,
      "fn": "NFT.balanceOf",
      "offset": [
        6316,
        6347
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1468": {
      "fn": "NFT.balanceOf",
      "offset": [
        6359,
        6383
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0x2"
    },
    "1470": {
      "fn": "NFT.balanceOf",
      "offset": [
        6384,
        6390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1472": {
      "op": "MLOAD"
    },
    "1473": {
      "fn": "NFT.balanceOf",
      "offset": [
        6359,
        6391
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1475": {
      "fn": "NFT.balanceOf",
      "offset": [
        6359,
        6391
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1476": {
      "fn": "NFT.balanceOf",
      "offset": [
        6359,
        6391
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1478": {
      "fn": "NFT.balanceOf",
      "offset": [
        6359,
        6391
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1479": {
      "fn": "NFT.balanceOf",
      "offset": [
        6359,
        6391
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1481": {
      "fn": "NFT.balanceOf",
      "offset": [
        6359,
        6391
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1483": {
      "fn": "NFT.balanceOf",
      "offset": [
        6359,
        6391
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1484": {
      "op": "SLOAD"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1487": {
      "op": "MSTORE"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1492": {
      "op": "RETURN"
    },
    "1493": {
      "op": "JUMPDEST"
    },
    "1494": {
      "op": "PUSH4",
      "value": "0x6352211E"
    },
    "1499": {
      "op": "DUP2"
    },
    "1500": {
      "op": "XOR"
    },
    "1501": {
      "op": "PUSH2",
      "value": "0x6A"
    },
    "1504": {
      "op": "JUMPI"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1507": {
      "op": "CALLDATASIZE"
    },
    "1508": {
      "op": "LT"
    },
    "1509": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1512": {
      "op": "JUMPI"
    },
    "1513": {
      "fn": "NFT.ownerOf",
      "offset": [
        6641,
        6655
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x0"
    },
    "1515": {
      "fn": "NFT.ownerOf",
      "offset": [
        6656,
        6664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1517": {
      "fn": "NFT.ownerOf",
      "offset": [
        6641,
        6665
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1518": {
      "fn": "NFT.ownerOf",
      "offset": [
        6641,
        6665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1520": {
      "fn": "NFT.ownerOf",
      "offset": [
        6641,
        6665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1521": {
      "fn": "NFT.ownerOf",
      "offset": [
        6641,
        6665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1523": {
      "fn": "NFT.ownerOf",
      "offset": [
        6641,
        6665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1524": {
      "fn": "NFT.ownerOf",
      "offset": [
        6641,
        6665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1526": {
      "fn": "NFT.ownerOf",
      "offset": [
        6641,
        6665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1528": {
      "fn": "NFT.ownerOf",
      "offset": [
        6641,
        6665
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1529": {
      "fn": "NFT.ownerOf",
      "offset": [
        6624,
        6665
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1530": {
      "fn": "NFT.ownerOf",
      "offset": [
        6624,
        6665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1532": {
      "fn": "NFT.ownerOf",
      "offset": [
        6624,
        6665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1533": {
      "fn": "NFT.ownerOf",
      "offset": [
        6723,
        6728
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0x40"
    },
    "1535": {
      "fn": "NFT.ownerOf",
      "offset": [
        6723,
        6746
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1536": {
      "fn": "NFT.ownerOf",
      "offset": [
        6723,
        6746
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1537": {
      "fn": "NFT.ownerOf",
      "offset": [
        6716,
        6746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "1540": {
      "branch": 33,
      "fn": "NFT.ownerOf",
      "offset": [
        6716,
        6746
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1543": {
      "fn": "NFT.ownerOf",
      "offset": [
        6758,
        6763
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 34,
      "value": "0x40"
    },
    "1545": {
      "op": "RETURN"
    },
    "1546": {
      "op": "JUMPDEST"
    },
    "1547": {
      "op": "PUSH4",
      "value": "0x81812FC"
    },
    "1552": {
      "op": "DUP2"
    },
    "1553": {
      "op": "XOR"
    },
    "1554": {
      "op": "PUSH2",
      "value": "0x64D"
    },
    "1557": {
      "op": "JUMPI"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1560": {
      "op": "CALLDATASIZE"
    },
    "1561": {
      "op": "LT"
    },
    "1562": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1565": {
      "op": "JUMPI"
    },
    "1566": {
      "fn": "NFT.getApproved",
      "offset": [
        7064,
        7078
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x0"
    },
    "1568": {
      "fn": "NFT.getApproved",
      "offset": [
        7137,
        7145
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 36,
      "value": "0x4"
    },
    "1570": {
      "fn": "NFT.getApproved",
      "offset": [
        7064,
        7088
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1571": {
      "fn": "NFT.getApproved",
      "offset": [
        7064,
        7088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1573": {
      "fn": "NFT.getApproved",
      "offset": [
        7064,
        7088
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1574": {
      "fn": "NFT.getApproved",
      "offset": [
        7064,
        7088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1576": {
      "fn": "NFT.getApproved",
      "offset": [
        7064,
        7088
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1577": {
      "fn": "NFT.getApproved",
      "offset": [
        7064,
        7088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1579": {
      "fn": "NFT.getApproved",
      "offset": [
        7064,
        7088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1581": {
      "fn": "NFT.getApproved",
      "offset": [
        7064,
        7088
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1582": {
      "fn": "NFT.getApproved",
      "offset": [
        7064,
        7106
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1583": {
      "fn": "NFT.getApproved",
      "offset": [
        7064,
        7106
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1584": {
      "fn": "NFT.getApproved",
      "offset": [
        7057,
        7106
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "1587": {
      "branch": 37,
      "fn": "NFT.getApproved",
      "offset": [
        7057,
        7106
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1588": {
      "fn": "NFT.getApproved",
      "offset": [
        7118,
        7136
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1590": {
      "fn": "NFT.getApproved",
      "offset": [
        7137,
        7145
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1592": {
      "fn": "NFT.getApproved",
      "offset": [
        7118,
        7146
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1593": {
      "fn": "NFT.getApproved",
      "offset": [
        7118,
        7146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1595": {
      "fn": "NFT.getApproved",
      "offset": [
        7118,
        7146
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1596": {
      "fn": "NFT.getApproved",
      "offset": [
        7118,
        7146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1598": {
      "fn": "NFT.getApproved",
      "offset": [
        7118,
        7146
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1599": {
      "fn": "NFT.getApproved",
      "offset": [
        7118,
        7146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1601": {
      "fn": "NFT.getApproved",
      "offset": [
        7118,
        7146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1603": {
      "fn": "NFT.getApproved",
      "offset": [
        7118,
        7146
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1604": {
      "op": "SLOAD"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1607": {
      "op": "MSTORE"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1612": {
      "op": "RETURN"
    },
    "1613": {
      "op": "JUMPDEST"
    },
    "1614": {
      "op": "PUSH4",
      "value": "0xE985E9C5"
    },
    "1619": {
      "op": "DUP2"
    },
    "1620": {
      "op": "XOR"
    },
    "1621": {
      "op": "PUSH2",
      "value": "0x6F9"
    },
    "1624": {
      "op": "JUMPI"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1627": {
      "op": "CALLDATASIZE"
    },
    "1628": {
      "op": "LT"
    },
    "1629": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1632": {
      "op": "JUMPI"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1635": {
      "op": "CALLDATALOAD"
    },
    "1636": {
      "op": "DUP1"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1639": {
      "op": "SHR"
    },
    "1640": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1643": {
      "op": "JUMPI"
    },
    "1644": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7186,
        7201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1646": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7186,
        7201
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1649": {
      "op": "CALLDATALOAD"
    },
    "1650": {
      "op": "DUP1"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1653": {
      "op": "SHR"
    },
    "1654": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1657": {
      "op": "JUMPI"
    },
    "1658": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7203,
        7221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1660": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7203,
        7221
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1661": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7446,
        7467
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 38,
      "value": "0x3"
    },
    "1663": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7468,
        7474
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1665": {
      "op": "MLOAD"
    },
    "1666": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7446,
        7475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1668": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7446,
        7475
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1669": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7446,
        7475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1671": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7446,
        7475
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1672": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7446,
        7475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1674": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7446,
        7475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1676": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7446,
        7475
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1677": {
      "op": "DUP1"
    },
    "1678": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7477,
        7486
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1680": {
      "op": "MLOAD"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1683": {
      "op": "MSTORE"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1686": {
      "op": "MSTORE"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1691": {
      "op": "SHA3"
    },
    "1692": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7445,
        7487
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1693": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7445,
        7487
      ],
      "op": "POP",
      "path": "0"
    },
    "1694": {
      "op": "SLOAD"
    },
    "1695": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7445,
        7548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6ED"
    },
    "1698": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7445,
        7548
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1699": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7491,
        7514
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1701": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7491,
        7548
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1702": {
      "op": "PUSH4",
      "value": "0x47606390"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1709": {
      "op": "MSTORE"
    },
    "1710": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7538,
        7547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1712": {
      "op": "MLOAD"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1715": {
      "op": "MSTORE"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x9C"
    },
    "1724": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7491,
        7548
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1725": {
      "op": "GAS"
    },
    "1726": {
      "op": "STATICCALL"
    },
    "1727": {
      "op": "PUSH2",
      "value": "0x6CD"
    },
    "1730": {
      "op": "JUMPI"
    },
    "1731": {
      "op": "RETURNDATASIZE"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1736": {
      "op": "RETURNDATACOPY"
    },
    "1737": {
      "op": "RETURNDATASIZE"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1740": {
      "op": "REVERT"
    },
    "1741": {
      "op": "JUMPDEST"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1744": {
      "op": "RETURNDATASIZE"
    },
    "1745": {
      "op": "LT"
    },
    "1746": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1749": {
      "op": "JUMPI"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1752": {
      "op": "MLOAD"
    },
    "1753": {
      "op": "DUP1"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1756": {
      "op": "SHR"
    },
    "1757": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1760": {
      "op": "JUMPI"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1763": {
      "op": "MSTORE"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1766": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7491,
        7548
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1767": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7491,
        7548
      ],
      "op": "POP",
      "path": "0"
    },
    "1768": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7445,
        7548
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1769": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7445,
        7548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F0"
    },
    "1772": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7445,
        7548
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1773": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7445,
        7548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1774": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7445,
        7548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1776": {
      "fn": "NFT.isApprovedForAll",
      "offset": [
        7445,
        7548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1779": {
      "op": "MSTORE"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1784": {
      "op": "RETURN"
    },
    "1785": {
      "op": "JUMPDEST"
    },
    "1786": {
      "op": "PUSH4",
      "value": "0x41C54053"
    },
    "1791": {
      "op": "DUP2"
    },
    "1792": {
      "op": "XOR"
    },
    "1793": {
      "op": "PUSH2",
      "value": "0x78B"
    },
    "1796": {
      "op": "JUMPI"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1799": {
      "op": "CALLDATASIZE"
    },
    "1800": {
      "op": "LT"
    },
    "1801": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1804": {
      "op": "JUMPI"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1807": {
      "op": "CALLDATALOAD"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1810": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8883,
        8904
      ],
      "op": "ADD",
      "path": "0"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1813": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8883,
        8904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1814": {
      "op": "CALLDATALOAD"
    },
    "1815": {
      "op": "GT"
    },
    "1816": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1819": {
      "op": "JUMPI"
    },
    "1820": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8883,
        8904
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1821": {
      "op": "CALLDATALOAD"
    },
    "1822": {
      "op": "DUP1"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1825": {
      "op": "MSTORE"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1828": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8883,
        8904
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1829": {
      "op": "ADD"
    },
    "1830": {
      "op": "DUP2"
    },
    "1831": {
      "op": "DUP2"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1834": {
      "op": "CALLDATACOPY"
    },
    "1835": {
      "op": "POP"
    },
    "1836": {
      "op": "POP"
    },
    "1837": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8883,
        8904
      ],
      "op": "POP",
      "path": "0"
    },
    "1838": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8938,
        8947
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 39,
      "value": "0x40"
    },
    "1840": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8947
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1841": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8947
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1842": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "1844": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8926,
        8934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1846": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8935
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1847": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1849": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8935
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1850": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1852": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8935
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1853": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1855": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1857": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8935
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1858": {
      "op": "SSTORE"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1861": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "1863": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8926,
        8934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1865": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8935
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1866": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1868": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8935
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1869": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1871": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8935
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1872": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1874": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1876": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8935
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1877": {
      "op": "ADD"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1880": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8947
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1883": {
      "op": "ADD"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1886": {
      "op": "SHR"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1889": {
      "op": "DUP2"
    },
    "1890": {
      "op": "GT"
    },
    "1891": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1894": {
      "op": "JUMPI"
    },
    "1895": {
      "op": "DUP1"
    },
    "1896": {
      "op": "ISZERO"
    },
    "1897": {
      "op": "PUSH2",
      "value": "0x785"
    },
    "1900": {
      "op": "JUMPI"
    },
    "1901": {
      "op": "SWAP1"
    },
    "1902": {
      "op": "JUMPDEST"
    },
    "1903": {
      "op": "DUP1"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1906": {
      "op": "SHL"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1909": {
      "op": "ADD"
    },
    "1910": {
      "op": "MLOAD"
    },
    "1911": {
      "op": "DUP2"
    },
    "1912": {
      "op": "DUP5"
    },
    "1913": {
      "op": "ADD"
    },
    "1914": {
      "op": "SSTORE"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1917": {
      "op": "ADD"
    },
    "1918": {
      "op": "DUP2"
    },
    "1919": {
      "op": "DUP2"
    },
    "1920": {
      "op": "XOR"
    },
    "1921": {
      "op": "PUSH2",
      "value": "0x76E"
    },
    "1924": {
      "op": "JUMPI"
    },
    "1925": {
      "op": "JUMPDEST"
    },
    "1926": {
      "op": "POP"
    },
    "1927": {
      "op": "POP"
    },
    "1928": {
      "op": "POP"
    },
    "1929": {
      "fn": "NFT._editTokenURI",
      "offset": [
        8911,
        8947
      ],
      "op": "POP",
      "path": "0"
    },
    "1930": {
      "op": "STOP"
    },
    "1931": {
      "op": "JUMPDEST"
    },
    "1932": {
      "op": "PUSH4",
      "value": "0xB4393623"
    },
    "1937": {
      "op": "DUP2"
    },
    "1938": {
      "op": "XOR"
    },
    "1939": {
      "op": "PUSH2",
      "value": "0x7E6"
    },
    "1942": {
      "op": "JUMPI"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1945": {
      "op": "CALLDATASIZE"
    },
    "1946": {
      "op": "LT"
    },
    "1947": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1950": {
      "op": "JUMPI"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1953": {
      "op": "CALLDATALOAD"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1956": {
      "fn": "NFT.addTokenURI",
      "offset": [
        8994,
        9015
      ],
      "op": "ADD",
      "path": "0"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1959": {
      "fn": "NFT.addTokenURI",
      "offset": [
        8994,
        9015
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1960": {
      "op": "CALLDATALOAD"
    },
    "1961": {
      "op": "GT"
    },
    "1962": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "1965": {
      "op": "JUMPI"
    },
    "1966": {
      "fn": "NFT.addTokenURI",
      "offset": [
        8994,
        9015
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1967": {
      "op": "CALLDATALOAD"
    },
    "1968": {
      "op": "DUP1"
    },
    "1969": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "1972": {
      "op": "MSTORE"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1975": {
      "fn": "NFT.addTokenURI",
      "offset": [
        8994,
        9015
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1976": {
      "op": "ADD"
    },
    "1977": {
      "op": "DUP2"
    },
    "1978": {
      "op": "DUP2"
    },
    "1979": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "1982": {
      "op": "CALLDATACOPY"
    },
    "1983": {
      "op": "POP"
    },
    "1984": {
      "op": "POP"
    },
    "1985": {
      "fn": "NFT.addTokenURI",
      "offset": [
        8994,
        9015
      ],
      "op": "POP",
      "path": "0"
    },
    "1986": {
      "fn": "NFT.addTokenURI",
      "offset": [
        9040,
        9048
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 40,
      "value": "0x4"
    },
    "1988": {
      "op": "CALLDATALOAD"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1991": {
      "op": "MSTORE"
    },
    "1992": {
      "fn": "NFT.addTokenURI",
      "offset": [
        9050,
        9059
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "1995": {
      "op": "MLOAD"
    },
    "1996": {
      "op": "DUP1"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1999": {
      "op": "MSTORE"
    },
    "2000": {
      "op": "DUP1"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2003": {
      "op": "DUP3"
    },
    "2004": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2009": {
      "op": "GAS"
    },
    "2010": {
      "op": "STATICCALL"
    },
    "2011": {
      "op": "POP"
    },
    "2012": {
      "fn": "NFT.addTokenURI",
      "offset": [
        9022,
        9060
      ],
      "op": "POP",
      "path": "0"
    },
    "2013": {
      "op": "PUSH2",
      "value": "0x7E4"
    },
    "2016": {
      "fn": "NFT.addTokenURI",
      "offset": [
        9022,
        9060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFEE"
    },
    "2019": {
      "fn": "NFT.addTokenURI",
      "jump": "i",
      "offset": [
        9022,
        9060
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2020": {
      "op": "JUMPDEST"
    },
    "2021": {
      "op": "STOP"
    },
    "2022": {
      "op": "JUMPDEST"
    },
    "2023": {
      "op": "PUSH4",
      "value": "0xCEB5E59D"
    },
    "2028": {
      "op": "DUP2"
    },
    "2029": {
      "op": "XOR"
    },
    "2030": {
      "op": "PUSH2",
      "value": "0x880"
    },
    "2033": {
      "op": "JUMPI"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2036": {
      "op": "CALLDATASIZE"
    },
    "2037": {
      "op": "LT"
    },
    "2038": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "2041": {
      "op": "JUMPI"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2044": {
      "op": "DUP1"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2047": {
      "op": "MSTORE"
    },
    "2048": {
      "fn": "NFT.getTokenURIByTokenId",
      "offset": [
        9148,
        9162
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0x8"
    },
    "2050": {
      "fn": "NFT.getTokenURIByTokenId",
      "offset": [
        9163,
        9171
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2052": {
      "fn": "NFT.getTokenURIByTokenId",
      "offset": [
        9148,
        9172
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2053": {
      "fn": "NFT.getTokenURIByTokenId",
      "offset": [
        9148,
        9172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2055": {
      "fn": "NFT.getTokenURIByTokenId",
      "offset": [
        9148,
        9172
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2056": {
      "fn": "NFT.getTokenURIByTokenId",
      "offset": [
        9148,
        9172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2058": {
      "fn": "NFT.getTokenURIByTokenId",
      "offset": [
        9148,
        9172
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2059": {
      "fn": "NFT.getTokenURIByTokenId",
      "offset": [
        9148,
        9172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2061": {
      "fn": "NFT.getTokenURIByTokenId",
      "offset": [
        9148,
        9172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2063": {
      "fn": "NFT.getTokenURIByTokenId",
      "offset": [
        9148,
        9172
      ],
      "op": "SHA3",
      "path": "0"
    },
    "2064": {
      "op": "DUP2"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2067": {
      "op": "ADD"
    },
    "2068": {
      "op": "DUP2"
    },
    "2069": {
      "op": "SLOAD"
    },
    "2070": {
      "op": "DUP1"
    },
    "2071": {
      "op": "DUP3"
    },
    "2072": {
      "op": "MSTORE"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2075": {
      "op": "DUP4"
    },
    "2076": {
      "op": "ADD"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2079": {
      "op": "DUP4"
    },
    "2080": {
      "op": "ADD"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2083": {
      "op": "DUP4"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2089": {
      "op": "SHR"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2092": {
      "op": "DUP2"
    },
    "2093": {
      "op": "GT"
    },
    "2094": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "2097": {
      "op": "JUMPI"
    },
    "2098": {
      "op": "DUP1"
    },
    "2099": {
      "op": "ISZERO"
    },
    "2100": {
      "op": "PUSH2",
      "value": "0x84F"
    },
    "2103": {
      "op": "JUMPI"
    },
    "2104": {
      "op": "SWAP1"
    },
    "2105": {
      "op": "JUMPDEST"
    },
    "2106": {
      "op": "DUP1"
    },
    "2107": {
      "op": "DUP5"
    },
    "2108": {
      "op": "ADD"
    },
    "2109": {
      "op": "SLOAD"
    },
    "2110": {
      "op": "DUP2"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2113": {
      "op": "SHL"
    },
    "2114": {
      "op": "DUP5"
    },
    "2115": {
      "op": "ADD"
    },
    "2116": {
      "op": "MSTORE"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2119": {
      "op": "ADD"
    },
    "2120": {
      "op": "DUP2"
    },
    "2121": {
      "op": "DUP2"
    },
    "2122": {
      "op": "XOR"
    },
    "2123": {
      "op": "PUSH2",
      "value": "0x839"
    },
    "2126": {
      "op": "JUMPI"
    },
    "2127": {
      "op": "JUMPDEST"
    },
    "2128": {
      "op": "POP"
    },
    "2129": {
      "op": "POP"
    },
    "2130": {
      "op": "POP"
    },
    "2131": {
      "op": "POP"
    },
    "2132": {
      "op": "POP"
    },
    "2133": {
      "op": "DUP1"
    },
    "2134": {
      "op": "MLOAD"
    },
    "2135": {
      "op": "DUP1"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2138": {
      "op": "DUP4"
    },
    "2139": {
      "op": "ADD"
    },
    "2140": {
      "op": "ADD"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2143": {
      "op": "DUP3"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2146": {
      "op": "SUB"
    },
    "2147": {
      "op": "AND"
    },
    "2148": {
      "op": "CALLDATASIZE"
    },
    "2149": {
      "op": "DUP3"
    },
    "2150": {
      "op": "CALLDATACOPY"
    },
    "2151": {
      "op": "POP"
    },
    "2152": {
      "op": "POP"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2155": {
      "op": "NOT"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2158": {
      "op": "DUP3"
    },
    "2159": {
      "op": "MLOAD"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2162": {
      "op": "ADD"
    },
    "2163": {
      "op": "ADD"
    },
    "2164": {
      "op": "AND"
    },
    "2165": {
      "op": "SWAP1"
    },
    "2166": {
      "op": "POP"
    },
    "2167": {
      "op": "SWAP1"
    },
    "2168": {
      "op": "POP"
    },
    "2169": {
      "op": "DUP2"
    },
    "2170": {
      "op": "ADD"
    },
    "2171": {
      "op": "SWAP1"
    },
    "2172": {
      "op": "POP"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2175": {
      "op": "RETURN"
    },
    "2176": {
      "op": "JUMPDEST"
    },
    "2177": {
      "op": "PUSH4",
      "value": "0xA22CB465"
    },
    "2182": {
      "op": "DUP2"
    },
    "2183": {
      "op": "XOR"
    },
    "2184": {
      "op": "PUSH2",
      "value": "0x9D"
    },
    "2187": {
      "op": "JUMPI"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2190": {
      "op": "CALLDATASIZE"
    },
    "2191": {
      "op": "LT"
    },
    "2192": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "2195": {
      "op": "JUMPI"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2198": {
      "op": "CALLDATALOAD"
    },
    "2199": {
      "op": "DUP1"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2202": {
      "op": "SHR"
    },
    "2203": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "2206": {
      "op": "JUMPI"
    },
    "2207": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        14726,
        14744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2209": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        14726,
        14744
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2212": {
      "op": "CALLDATALOAD"
    },
    "2213": {
      "op": "DUP1"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2216": {
      "op": "SHR"
    },
    "2217": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "2220": {
      "op": "JUMPI"
    },
    "2221": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        14746,
        14761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2223": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        14746,
        14761
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2224": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15326,
        15336
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 42
    },
    "2225": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15313,
        15322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2227": {
      "op": "MLOAD"
    },
    "2228": {
      "op": "EQ"
    },
    "2229": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15306,
        15336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "2232": {
      "branch": 43,
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15306,
        15336
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2233": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15388,
        15397
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 44,
      "value": "0x60"
    },
    "2235": {
      "op": "MLOAD"
    },
    "2236": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15341,
        15362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2238": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15363,
        15373
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2239": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15341,
        15374
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2241": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15341,
        15374
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2242": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15341,
        15374
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2244": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15341,
        15374
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2245": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15341,
        15374
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2247": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15341,
        15374
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2249": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15341,
        15374
      ],
      "op": "SHA3",
      "path": "0"
    },
    "2250": {
      "op": "DUP1"
    },
    "2251": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15375,
        15384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2253": {
      "op": "MLOAD"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2256": {
      "op": "MSTORE"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2259": {
      "op": "MSTORE"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2264": {
      "op": "SHA3"
    },
    "2265": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15341,
        15385
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2266": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15341,
        15385
      ],
      "op": "POP",
      "path": "0"
    },
    "2267": {
      "op": "SSTORE"
    },
    "2268": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15433,
        15442
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 45,
      "value": "0x40"
    },
    "2270": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15402,
        15454
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2271": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15421,
        15431
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2272": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15402,
        15454
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x17307EAB39AB617E8899845AD3D59BD9653F20F22092489CA2B5937696C31"
    },
    "2305": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15444,
        15453
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2307": {
      "op": "MLOAD"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2310": {
      "op": "MSTORE"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2313": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15402,
        15454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2315": {
      "fn": "NFT.setApprovalForAll",
      "offset": [
        15402,
        15454
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2316": {
      "op": "STOP"
    },
    "2317": {
      "op": "JUMPDEST"
    },
    "2318": {
      "op": "PUSH4",
      "value": "0xD0DEF521"
    },
    "2323": {
      "op": "DUP2"
    },
    "2324": {
      "op": "XOR"
    },
    "2325": {
      "op": "PUSH2",
      "value": "0xAC7"
    },
    "2328": {
      "op": "JUMPI"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2331": {
      "op": "CALLDATASIZE"
    },
    "2332": {
      "op": "LT"
    },
    "2333": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "2336": {
      "op": "JUMPI"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2339": {
      "op": "CALLDATALOAD"
    },
    "2340": {
      "op": "DUP1"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2343": {
      "op": "SHR"
    },
    "2344": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "2347": {
      "op": "JUMPI"
    },
    "2348": {
      "fn": "NFT.mint",
      "offset": [
        15507,
        15519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "2351": {
      "fn": "NFT.mint",
      "offset": [
        15507,
        15519
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2354": {
      "op": "CALLDATALOAD"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2357": {
      "fn": "NFT.mint",
      "offset": [
        15521,
        15542
      ],
      "op": "ADD",
      "path": "0"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2360": {
      "fn": "NFT.mint",
      "offset": [
        15521,
        15542
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2361": {
      "op": "CALLDATALOAD"
    },
    "2362": {
      "op": "GT"
    },
    "2363": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "2366": {
      "op": "JUMPI"
    },
    "2367": {
      "fn": "NFT.mint",
      "offset": [
        15521,
        15542
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2368": {
      "op": "CALLDATALOAD"
    },
    "2369": {
      "op": "DUP1"
    },
    "2370": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "2373": {
      "op": "MSTORE"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2376": {
      "fn": "NFT.mint",
      "offset": [
        15521,
        15542
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2377": {
      "op": "ADD"
    },
    "2378": {
      "op": "DUP2"
    },
    "2379": {
      "op": "DUP2"
    },
    "2380": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "2383": {
      "op": "CALLDATACOPY"
    },
    "2384": {
      "op": "POP"
    },
    "2385": {
      "op": "POP"
    },
    "2386": {
      "fn": "NFT.mint",
      "offset": [
        15521,
        15542
      ],
      "op": "POP",
      "path": "0"
    },
    "2387": {
      "fn": "NFT.mint",
      "offset": [
        16010,
        16021
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 46,
      "value": "0x4"
    },
    "2389": {
      "fn": "NFT.mint",
      "offset": [
        15996,
        16021
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2390": {
      "fn": "NFT.mint",
      "offset": [
        15996,
        16006
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2391": {
      "fn": "NFT.mint",
      "offset": [
        15996,
        16021
      ],
      "op": "XOR",
      "path": "0"
    },
    "2392": {
      "fn": "NFT.mint",
      "offset": [
        15989,
        16021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "2395": {
      "branch": 47,
      "fn": "NFT.mint",
      "offset": [
        15989,
        16021
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2396": {
      "fn": "NFT.mint",
      "offset": [
        16071,
        16074
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 48,
      "value": "0x180"
    },
    "2399": {
      "fn": "NFT.mint",
      "offset": [
        16071,
        16092
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2400": {
      "fn": "NFT.mint",
      "offset": [
        16071,
        16092
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2401": {
      "fn": "NFT.mint",
      "offset": [
        16064,
        16092
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "2404": {
      "branch": 49,
      "fn": "NFT.mint",
      "offset": [
        16064,
        16092
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2407": {
      "op": "DUP1"
    },
    "2408": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "2411": {
      "op": "MSTORE"
    },
    "2412": {
      "op": "DUP1"
    },
    "2413": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "2416": {
      "op": "ADD"
    },
    "2417": {
      "fn": "NFT.mint",
      "offset": [
        16252,
        16261
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 50,
      "value": "0x1A0"
    },
    "2420": {
      "op": "MLOAD"
    },
    "2421": {
      "op": "DUP1"
    },
    "2422": {
      "op": "DUP3"
    },
    "2423": {
      "op": "MSTORE"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2426": {
      "op": "DUP3"
    },
    "2427": {
      "op": "ADD"
    },
    "2428": {
      "op": "DUP2"
    },
    "2429": {
      "op": "DUP2"
    },
    "2430": {
      "op": "DUP4"
    },
    "2431": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2436": {
      "op": "GAS"
    },
    "2437": {
      "op": "STATICCALL"
    },
    "2438": {
      "op": "POP"
    },
    "2439": {
      "op": "POP"
    },
    "2440": {
      "op": "POP"
    },
    "2441": {
      "op": "DUP1"
    },
    "2442": {
      "op": "MLOAD"
    },
    "2443": {
      "op": "DUP1"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2446": {
      "op": "DUP4"
    },
    "2447": {
      "op": "ADD"
    },
    "2448": {
      "op": "ADD"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2451": {
      "op": "DUP3"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2454": {
      "op": "SUB"
    },
    "2455": {
      "op": "AND"
    },
    "2456": {
      "op": "CALLDATASIZE"
    },
    "2457": {
      "op": "DUP3"
    },
    "2458": {
      "op": "CALLDATACOPY"
    },
    "2459": {
      "op": "POP"
    },
    "2460": {
      "op": "POP"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2463": {
      "op": "NOT"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2466": {
      "op": "DUP3"
    },
    "2467": {
      "op": "MLOAD"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2470": {
      "op": "ADD"
    },
    "2471": {
      "op": "ADD"
    },
    "2472": {
      "op": "AND"
    },
    "2473": {
      "op": "SWAP1"
    },
    "2474": {
      "op": "POP"
    },
    "2475": {
      "op": "DUP2"
    },
    "2476": {
      "op": "ADD"
    },
    "2477": {
      "op": "SWAP1"
    },
    "2478": {
      "op": "POP"
    },
    "2479": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "2482": {
      "fn": "NFT.mint",
      "offset": [
        16240,
        16262
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2483": {
      "fn": "NFT.mint",
      "offset": [
        16240,
        16262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "2486": {
      "fn": "NFT.mint",
      "offset": [
        16230,
        16263
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2487": {
      "op": "MLOAD"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2490": {
      "fn": "NFT.mint",
      "offset": [
        16230,
        16263
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2491": {
      "op": "ADD"
    },
    "2492": {
      "fn": "NFT.mint",
      "offset": [
        16230,
        16263
      ],
      "op": "SHA3",
      "path": "0"
    },
    "2493": {
      "fn": "NFT.mint",
      "offset": [
        16230,
        16263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2494": {
      "fn": "NFT.mint",
      "offset": [
        16230,
        16263
      ],
      "op": "POP",
      "path": "0"
    },
    "2495": {
      "fn": "NFT.mint",
      "offset": [
        16208,
        16263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "2498": {
      "fn": "NFT.mint",
      "offset": [
        16208,
        16263
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2499": {
      "fn": "NFT.mint",
      "offset": [
        16275,
        16300
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 51,
      "value": "0x7"
    },
    "2501": {
      "fn": "NFT.mint",
      "offset": [
        16301,
        16311
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "2504": {
      "op": "MLOAD"
    },
    "2505": {
      "fn": "NFT.mint",
      "offset": [
        16275,
        16312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2507": {
      "fn": "NFT.mint",
      "offset": [
        16275,
        16312
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2508": {
      "fn": "NFT.mint",
      "offset": [
        16275,
        16312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2510": {
      "fn": "NFT.mint",
      "offset": [
        16275,
        16312
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2511": {
      "fn": "NFT.mint",
      "offset": [
        16275,
        16312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2513": {
      "fn": "NFT.mint",
      "offset": [
        16275,
        16312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2515": {
      "fn": "NFT.mint",
      "offset": [
        16275,
        16312
      ],
      "op": "SHA3",
      "path": "0"
    },
    "2516": {
      "fn": "NFT.mint",
      "offset": [
        16275,
        16317
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2517": {
      "fn": "NFT.mint",
      "offset": [
        16275,
        16317
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2518": {
      "fn": "NFT.mint",
      "offset": [
        16268,
        16340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3F"
    },
    "2521": {
      "branch": 52,
      "fn": "NFT.mint",
      "offset": [
        16268,
        16340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2524": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "2527": {
      "fn": "NFT.mint",
      "offset": [
        16319,
        16340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2528": {
      "op": "PUSH32",
      "value": "0x746F6B656E206973206E6F6E2D756E697175650000000000000"
    },
    "2561": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "2564": {
      "fn": "NFT.mint",
      "offset": [
        16319,
        16340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2565": {
      "fn": "NFT.mint",
      "offset": [
        16319,
        16340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "2568": {
      "fn": "NFT.mint",
      "offset": [
        16268,
        16340
      ],
      "op": "POP",
      "path": "0"
    },
    "2569": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "2572": {
      "op": "MLOAD"
    },
    "2573": {
      "op": "DUP1"
    },
    "2574": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "2577": {
      "op": "ADD"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2580": {
      "op": "DUP3"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2583": {
      "op": "SUB"
    },
    "2584": {
      "op": "AND"
    },
    "2585": {
      "op": "CALLDATASIZE"
    },
    "2586": {
      "op": "DUP3"
    },
    "2587": {
      "op": "CALLDATACOPY"
    },
    "2588": {
      "op": "POP"
    },
    "2589": {
      "op": "POP"
    },
    "2590": {
      "op": "PUSH4",
      "value": "0x8C379A0"
    },
    "2595": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "2598": {
      "op": "MSTORE"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2601": {
      "op": "PUSH2",
      "value": "0x20"
    },
    "2604": {
      "op": "MSTORE"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2607": {
      "op": "NOT"
    },
    "2608": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2610": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "2613": {
      "op": "MLOAD"
    },
    "2614": {
      "op": "ADD"
    },
    "2615": {
      "op": "AND"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2618": {
      "op": "ADD"
    },
    "2619": {
      "op": "PUSH2",
      "value": "0x1FC"
    },
    "2622": {
      "op": "REVERT"
    },
    "2623": {
      "fn": "NFT.mint",
      "offset": [
        16268,
        16340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2624": {
      "fn": "NFT.mint",
      "offset": [
        16363,
        16366
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 53,
      "value": "0x180"
    },
    "2627": {
      "op": "MLOAD"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2630": {
      "op": "MSTORE"
    },
    "2631": {
      "fn": "NFT.mint",
      "offset": [
        16368,
        16383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2633": {
      "op": "SLOAD"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2636": {
      "op": "MSTORE"
    },
    "2637": {
      "op": "PUSH2",
      "value": "0xA54"
    },
    "2640": {
      "fn": "NFT.mint",
      "offset": [
        16346,
        16384
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112C"
    },
    "2643": {
      "fn": "NFT.mint",
      "jump": "i",
      "offset": [
        16346,
        16384
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2644": {
      "fn": "NFT.mint",
      "offset": [
        16346,
        16384
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2645": {
      "fn": "NFT.mint",
      "offset": [
        16449,
        16464
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 54,
      "value": "0xA"
    },
    "2647": {
      "op": "SLOAD"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2650": {
      "op": "MSTORE"
    },
    "2651": {
      "fn": "NFT.mint",
      "offset": [
        16466,
        16475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "2654": {
      "op": "MLOAD"
    },
    "2655": {
      "op": "DUP1"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2658": {
      "op": "MSTORE"
    },
    "2659": {
      "op": "DUP1"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2662": {
      "op": "DUP3"
    },
    "2663": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2668": {
      "op": "GAS"
    },
    "2669": {
      "op": "STATICCALL"
    },
    "2670": {
      "op": "POP"
    },
    "2671": {
      "fn": "NFT.mint",
      "offset": [
        16431,
        16476
      ],
      "op": "POP",
      "path": "0"
    },
    "2672": {
      "op": "PUSH2",
      "value": "0xA77"
    },
    "2675": {
      "fn": "NFT.mint",
      "offset": [
        16431,
        16476
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFEE"
    },
    "2678": {
      "fn": "NFT.mint",
      "jump": "i",
      "offset": [
        16431,
        16476
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2679": {
      "fn": "NFT.mint",
      "offset": [
        16431,
        16476
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2680": {
      "fn": "NFT.mint",
      "offset": [
        16515,
        16530
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 55,
      "value": "0xA"
    },
    "2682": {
      "fn": "NFT.mint",
      "offset": [
        16481,
        16531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2683": {
      "fn": "NFT.mint",
      "offset": [
        16510,
        16513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "2686": {
      "fn": "NFT.mint",
      "offset": [
        16481,
        16531
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2687": {
      "fn": "NFT.mint",
      "offset": [
        16481,
        16531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2689": {
      "fn": "NFT.mint",
      "offset": [
        16481,
        16531
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2722": {
      "fn": "NFT.mint",
      "offset": [
        16481,
        16531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2724": {
      "fn": "NFT.mint",
      "offset": [
        16481,
        16531
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "2727": {
      "fn": "NFT.mint",
      "offset": [
        16481,
        16531
      ],
      "op": "LOG4",
      "path": "0"
    },
    "2728": {
      "fn": "NFT.mint",
      "offset": [
        16563,
        16578
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 56,
      "value": "0xA"
    },
    "2730": {
      "op": "SLOAD"
    },
    "2731": {
      "fn": "NFT.mint",
      "offset": [
        16582,
        16583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2733": {
      "op": "DUP2"
    },
    "2734": {
      "op": "ADD"
    },
    "2735": {
      "op": "DUP2"
    },
    "2736": {
      "op": "DUP2"
    },
    "2737": {
      "op": "LT"
    },
    "2738": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "2741": {
      "op": "JUMPI"
    },
    "2742": {
      "fn": "NFT.mint",
      "offset": [
        16563,
        16583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2743": {
      "fn": "NFT.mint",
      "offset": [
        16563,
        16583
      ],
      "op": "POP",
      "path": "0"
    },
    "2744": {
      "fn": "NFT.mint",
      "offset": [
        16563,
        16578
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2746": {
      "op": "SSTORE"
    },
    "2747": {
      "fn": "NFT.mint",
      "offset": [
        16595,
        16599
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 57,
      "value": "0x1"
    },
    "2749": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "2752": {
      "op": "MSTORE"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2755": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "2758": {
      "op": "RETURN"
    },
    "2759": {
      "op": "JUMPDEST"
    },
    "2760": {
      "op": "PUSH4",
      "value": "0x42966C68"
    },
    "2765": {
      "op": "DUP2"
    },
    "2766": {
      "op": "XOR"
    },
    "2767": {
      "op": "PUSH2",
      "value": "0xB72"
    },
    "2770": {
      "op": "JUMPI"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2773": {
      "op": "CALLDATASIZE"
    },
    "2774": {
      "op": "LT"
    },
    "2775": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "2778": {
      "op": "JUMPI"
    },
    "2779": {
      "fn": "NFT.burn",
      "offset": [
        17001,
        17011
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 58
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2782": {
      "op": "MSTORE"
    },
    "2783": {
      "fn": "NFT.burn",
      "offset": [
        17274,
        17282
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 59,
      "value": "0x4"
    },
    "2785": {
      "op": "CALLDATALOAD"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2788": {
      "op": "MSTORE"
    },
    "2789": {
      "op": "PUSH2",
      "value": "0xAEF"
    },
    "2792": {
      "fn": "NFT.burn",
      "offset": [
        16977,
        17022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "2795": {
      "fn": "NFT.burn",
      "offset": [
        16977,
        17022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1179"
    },
    "2798": {
      "fn": "NFT.burn",
      "jump": "i",
      "offset": [
        16977,
        17022
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2799": {
      "fn": "NFT.burn",
      "offset": [
        16977,
        17022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2800": {
      "fn": "NFT.burn",
      "offset": [
        16977,
        17022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "2803": {
      "fn": "NFT.burn",
      "offset": [
        16970,
        17022
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2804": {
      "fn": "NFT.burn",
      "offset": [
        16970,
        17022
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2805": {
      "fn": "NFT.burn",
      "offset": [
        16970,
        17022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "2808": {
      "branch": 60,
      "fn": "NFT.burn",
      "offset": [
        16970,
        17022
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2809": {
      "fn": "NFT.burn",
      "offset": [
        17044,
        17058
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 61,
      "value": "0x0"
    },
    "2811": {
      "fn": "NFT.burn",
      "offset": [
        17274,
        17282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2813": {
      "fn": "NFT.burn",
      "offset": [
        17044,
        17068
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2814": {
      "fn": "NFT.burn",
      "offset": [
        17044,
        17068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2816": {
      "fn": "NFT.burn",
      "offset": [
        17044,
        17068
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2817": {
      "fn": "NFT.burn",
      "offset": [
        17044,
        17068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2819": {
      "fn": "NFT.burn",
      "offset": [
        17044,
        17068
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2820": {
      "fn": "NFT.burn",
      "offset": [
        17044,
        17068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2822": {
      "fn": "NFT.burn",
      "offset": [
        17044,
        17068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2824": {
      "fn": "NFT.burn",
      "offset": [
        17044,
        17068
      ],
      "op": "SHA3",
      "path": "0"
    },
    "2825": {
      "fn": "NFT.burn",
      "offset": [
        17027,
        17068
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2826": {
      "fn": "NFT.burn",
      "offset": [
        17027,
        17068
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "2829": {
      "fn": "NFT.burn",
      "offset": [
        17027,
        17068
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2830": {
      "fn": "NFT.burn",
      "offset": [
        17126,
        17131
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 62,
      "value": "0x180"
    },
    "2833": {
      "fn": "NFT.burn",
      "offset": [
        17126,
        17149
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2834": {
      "fn": "NFT.burn",
      "offset": [
        17126,
        17149
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2835": {
      "fn": "NFT.burn",
      "offset": [
        17119,
        17149
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "2838": {
      "branch": 63,
      "fn": "NFT.burn",
      "offset": [
        17119,
        17149
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2839": {
      "fn": "NFT.burn",
      "offset": [
        17174,
        17179
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 64,
      "value": "0x180"
    },
    "2842": {
      "op": "MLOAD"
    },
    "2843": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2845": {
      "op": "MSTORE"
    },
    "2846": {
      "fn": "NFT.burn",
      "offset": [
        17274,
        17282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2848": {
      "op": "CALLDATALOAD"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2851": {
      "op": "MSTORE"
    },
    "2852": {
      "op": "PUSH2",
      "value": "0xB2B"
    },
    "2855": {
      "fn": "NFT.burn",
      "offset": [
        17154,
        17190
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12AA"
    },
    "2858": {
      "fn": "NFT.burn",
      "jump": "i",
      "offset": [
        17154,
        17190
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2859": {
      "fn": "NFT.burn",
      "offset": [
        17154,
        17190
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2860": {
      "fn": "NFT.burn",
      "offset": [
        17217,
        17222
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 65,
      "value": "0x180"
    },
    "2863": {
      "op": "MLOAD"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2866": {
      "op": "MSTORE"
    },
    "2867": {
      "fn": "NFT.burn",
      "offset": [
        17274,
        17282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2869": {
      "op": "CALLDATALOAD"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2872": {
      "op": "MSTORE"
    },
    "2873": {
      "op": "PUSH2",
      "value": "0xB40"
    },
    "2876": {
      "fn": "NFT.burn",
      "offset": [
        17195,
        17233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125A"
    },
    "2879": {
      "fn": "NFT.burn",
      "jump": "i",
      "offset": [
        17195,
        17233
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2880": {
      "fn": "NFT.burn",
      "offset": [
        17195,
        17233
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2881": {
      "fn": "NFT.burn",
      "offset": [
        17274,
        17282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2883": {
      "fn": "NFT.burn",
      "offset": [
        17238,
        17283
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2884": {
      "fn": "NFT.burn",
      "offset": [
        17238,
        17283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2886": {
      "fn": "NFT.burn",
      "offset": [
        17251,
        17256
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "2889": {
      "fn": "NFT.burn",
      "offset": [
        17238,
        17283
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2890": {
      "fn": "NFT.burn",
      "offset": [
        17238,
        17283
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2923": {
      "fn": "NFT.burn",
      "offset": [
        17238,
        17283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2925": {
      "fn": "NFT.burn",
      "offset": [
        17238,
        17283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "2928": {
      "fn": "NFT.burn",
      "offset": [
        17238,
        17283
      ],
      "op": "LOG4",
      "path": "0"
    },
    "2929": {
      "op": "STOP"
    },
    "2930": {
      "op": "JUMPDEST"
    },
    "2931": {
      "op": "PUSH4",
      "value": "0xFE99AD5A"
    },
    "2936": {
      "op": "DUP2"
    },
    "2937": {
      "op": "XOR"
    },
    "2938": {
      "op": "PUSH2",
      "value": "0xBA4"
    },
    "2941": {
      "op": "JUMPI"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2944": {
      "op": "CALLDATASIZE"
    },
    "2945": {
      "op": "LT"
    },
    "2946": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "2949": {
      "op": "JUMPI"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2952": {
      "op": "CALLDATALOAD"
    },
    "2953": {
      "op": "DUP1"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2956": {
      "op": "SHR"
    },
    "2957": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "2960": {
      "op": "JUMPI"
    },
    "2961": {
      "fn": "NFT.transferMinter",
      "offset": [
        17316,
        17337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2963": {
      "fn": "NFT.transferMinter",
      "offset": [
        17316,
        17337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2964": {
      "fn": "NFT.transferMinter",
      "offset": [
        17365,
        17376
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 66,
      "value": "0x4"
    },
    "2966": {
      "fn": "NFT.transferMinter",
      "offset": [
        17351,
        17376
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2967": {
      "fn": "NFT.transferMinter",
      "offset": [
        17351,
        17361
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2968": {
      "fn": "NFT.transferMinter",
      "offset": [
        17351,
        17376
      ],
      "op": "XOR",
      "path": "0"
    },
    "2969": {
      "fn": "NFT.transferMinter",
      "offset": [
        17344,
        17376
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "2972": {
      "branch": 67,
      "fn": "NFT.transferMinter",
      "offset": [
        17344,
        17376
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2973": {
      "fn": "NFT.transferMinter",
      "offset": [
        17395,
        17407
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 68,
      "value": "0x40"
    },
    "2975": {
      "op": "MLOAD"
    },
    "2976": {
      "fn": "NFT.transferMinter",
      "offset": [
        17381,
        17392
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2978": {
      "op": "SSTORE"
    },
    "2979": {
      "op": "STOP"
    },
    "2980": {
      "op": "JUMPDEST"
    },
    "2981": {
      "op": "PUSH4",
      "value": "0x55F84B3"
    },
    "2986": {
      "op": "DUP2"
    },
    "2987": {
      "op": "XOR"
    },
    "2988": {
      "op": "PUSH2",
      "value": "0xBF1"
    },
    "2991": {
      "op": "JUMPI"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2994": {
      "op": "CALLDATASIZE"
    },
    "2995": {
      "op": "LT"
    },
    "2996": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "2999": {
      "op": "JUMPI"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3002": {
      "op": "CALLDATALOAD"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3005": {
      "fn": "NFT.setBaseURI",
      "offset": [
        17435,
        17451
      ],
      "op": "ADD",
      "path": "0"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3008": {
      "fn": "NFT.setBaseURI",
      "offset": [
        17435,
        17451
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3009": {
      "op": "CALLDATALOAD"
    },
    "3010": {
      "op": "GT"
    },
    "3011": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3014": {
      "op": "JUMPI"
    },
    "3015": {
      "fn": "NFT.setBaseURI",
      "offset": [
        17435,
        17451
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3016": {
      "op": "CALLDATALOAD"
    },
    "3017": {
      "op": "DUP1"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3020": {
      "op": "MSTORE"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3023": {
      "fn": "NFT.setBaseURI",
      "offset": [
        17435,
        17451
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3024": {
      "op": "ADD"
    },
    "3025": {
      "op": "DUP1"
    },
    "3026": {
      "op": "CALLDATALOAD"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3029": {
      "op": "MSTORE"
    },
    "3030": {
      "op": "POP"
    },
    "3031": {
      "op": "POP"
    },
    "3032": {
      "fn": "NFT.setBaseURI",
      "offset": [
        17435,
        17451
      ],
      "op": "POP",
      "path": "0"
    },
    "3033": {
      "fn": "NFT.setBaseURI",
      "offset": [
        17526,
        17537
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 69,
      "value": "0x4"
    },
    "3035": {
      "fn": "NFT.setBaseURI",
      "offset": [
        17512,
        17537
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3036": {
      "fn": "NFT.setBaseURI",
      "offset": [
        17512,
        17522
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3037": {
      "fn": "NFT.setBaseURI",
      "offset": [
        17512,
        17537
      ],
      "op": "XOR",
      "path": "0"
    },
    "3038": {
      "fn": "NFT.setBaseURI",
      "offset": [
        17505,
        17537
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "3041": {
      "branch": 70,
      "fn": "NFT.setBaseURI",
      "offset": [
        17505,
        17537
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3042": {
      "fn": "NFT.setBaseURI",
      "offset": [
        17557,
        17561
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 71,
      "value": "0x40"
    },
    "3044": {
      "fn": "NFT.setBaseURI",
      "offset": [
        17542,
        17561
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3045": {
      "fn": "NFT.setBaseURI",
      "offset": [
        17542,
        17561
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3046": {
      "fn": "NFT.setBaseURI",
      "offset": [
        17542,
        17554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "3048": {
      "op": "SSTORE"
    },
    "3049": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3051": {
      "op": "MLOAD"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3054": {
      "op": "SSTORE"
    },
    "3055": {
      "fn": "NFT.setBaseURI",
      "offset": [
        17542,
        17561
      ],
      "op": "POP",
      "path": "0"
    },
    "3056": {
      "op": "STOP"
    },
    "3057": {
      "op": "JUMPDEST"
    },
    "3058": {
      "op": "PUSH4",
      "value": "0xC87B56DD"
    },
    "3063": {
      "op": "DUP2"
    },
    "3064": {
      "op": "XOR"
    },
    "3065": {
      "op": "PUSH2",
      "value": "0xCC4"
    },
    "3068": {
      "op": "JUMPI"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3071": {
      "op": "CALLDATASIZE"
    },
    "3072": {
      "op": "LT"
    },
    "3073": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3076": {
      "op": "JUMPI"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3079": {
      "op": "DUP1"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3082": {
      "op": "MSTORE"
    },
    "3083": {
      "fn": "NFT.tokenURI",
      "offset": [
        17639,
        17685
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 72,
      "value": "0x0"
    },
    "3085": {
      "fn": "NFT.tokenURI",
      "offset": [
        17646,
        17658
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "3087": {
      "op": "SLOAD"
    },
    "3088": {
      "op": "DUP2"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3091": {
      "op": "ADD"
    },
    "3092": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3094": {
      "op": "SLOAD"
    },
    "3095": {
      "op": "DUP2"
    },
    "3096": {
      "op": "MSTORE"
    },
    "3097": {
      "op": "POP"
    },
    "3098": {
      "op": "DUP1"
    },
    "3099": {
      "op": "DUP3"
    },
    "3100": {
      "op": "ADD"
    },
    "3101": {
      "op": "SWAP2"
    },
    "3102": {
      "op": "POP"
    },
    "3103": {
      "op": "POP"
    },
    "3104": {
      "fn": "NFT.tokenURI",
      "offset": [
        17660,
        17674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "3106": {
      "fn": "NFT.tokenURI",
      "offset": [
        17675,
        17683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3108": {
      "fn": "NFT.tokenURI",
      "offset": [
        17660,
        17684
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3109": {
      "fn": "NFT.tokenURI",
      "offset": [
        17660,
        17684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3111": {
      "fn": "NFT.tokenURI",
      "offset": [
        17660,
        17684
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3112": {
      "fn": "NFT.tokenURI",
      "offset": [
        17660,
        17684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3114": {
      "fn": "NFT.tokenURI",
      "offset": [
        17660,
        17684
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3115": {
      "fn": "NFT.tokenURI",
      "offset": [
        17660,
        17684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3117": {
      "fn": "NFT.tokenURI",
      "offset": [
        17660,
        17684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3119": {
      "fn": "NFT.tokenURI",
      "offset": [
        17660,
        17684
      ],
      "op": "SHA3",
      "path": "0"
    },
    "3120": {
      "op": "DUP1"
    },
    "3121": {
      "op": "SLOAD"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3124": {
      "op": "DUP3"
    },
    "3125": {
      "op": "ADD"
    },
    "3126": {
      "op": "DUP4"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3129": {
      "op": "ADD"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3132": {
      "op": "DUP4"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3135": {
      "op": "ADD"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3138": {
      "op": "SHR"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3141": {
      "op": "DUP2"
    },
    "3142": {
      "op": "GT"
    },
    "3143": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3146": {
      "op": "JUMPI"
    },
    "3147": {
      "op": "DUP1"
    },
    "3148": {
      "op": "ISZERO"
    },
    "3149": {
      "op": "PUSH2",
      "value": "0xC68"
    },
    "3152": {
      "op": "JUMPI"
    },
    "3153": {
      "op": "SWAP1"
    },
    "3154": {
      "op": "JUMPDEST"
    },
    "3155": {
      "op": "DUP1"
    },
    "3156": {
      "op": "DUP5"
    },
    "3157": {
      "op": "ADD"
    },
    "3158": {
      "op": "SLOAD"
    },
    "3159": {
      "op": "DUP2"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3162": {
      "op": "SHL"
    },
    "3163": {
      "op": "DUP5"
    },
    "3164": {
      "op": "ADD"
    },
    "3165": {
      "op": "MSTORE"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3168": {
      "op": "ADD"
    },
    "3169": {
      "op": "DUP2"
    },
    "3170": {
      "op": "DUP2"
    },
    "3171": {
      "op": "XOR"
    },
    "3172": {
      "op": "PUSH2",
      "value": "0xC52"
    },
    "3175": {
      "op": "JUMPI"
    },
    "3176": {
      "op": "JUMPDEST"
    },
    "3177": {
      "op": "POP"
    },
    "3178": {
      "op": "POP"
    },
    "3179": {
      "op": "POP"
    },
    "3180": {
      "op": "POP"
    },
    "3181": {
      "op": "DUP1"
    },
    "3182": {
      "op": "DUP4"
    },
    "3183": {
      "op": "ADD"
    },
    "3184": {
      "op": "SWAP3"
    },
    "3185": {
      "op": "POP"
    },
    "3186": {
      "op": "POP"
    },
    "3187": {
      "op": "POP"
    },
    "3188": {
      "op": "DUP1"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3191": {
      "op": "MSTORE"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3194": {
      "fn": "NFT.tokenURI",
      "offset": [
        17639,
        17685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3195": {
      "fn": "NFT.tokenURI",
      "offset": [
        17639,
        17685
      ],
      "op": "POP",
      "path": "0"
    },
    "3196": {
      "op": "DUP2"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3199": {
      "op": "ADD"
    },
    "3200": {
      "op": "DUP2"
    },
    "3201": {
      "op": "MLOAD"
    },
    "3202": {
      "op": "DUP1"
    },
    "3203": {
      "op": "DUP3"
    },
    "3204": {
      "op": "MSTORE"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3207": {
      "op": "DUP4"
    },
    "3208": {
      "op": "ADD"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3211": {
      "op": "DUP4"
    },
    "3212": {
      "op": "ADD"
    },
    "3213": {
      "op": "DUP3"
    },
    "3214": {
      "op": "DUP2"
    },
    "3215": {
      "op": "DUP5"
    },
    "3216": {
      "op": "DUP5"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3219": {
      "op": "GAS"
    },
    "3220": {
      "op": "STATICCALL"
    },
    "3221": {
      "op": "POP"
    },
    "3222": {
      "op": "POP"
    },
    "3223": {
      "op": "POP"
    },
    "3224": {
      "op": "POP"
    },
    "3225": {
      "op": "DUP1"
    },
    "3226": {
      "op": "MLOAD"
    },
    "3227": {
      "op": "DUP1"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3230": {
      "op": "DUP4"
    },
    "3231": {
      "op": "ADD"
    },
    "3232": {
      "op": "ADD"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3235": {
      "op": "DUP3"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3238": {
      "op": "SUB"
    },
    "3239": {
      "op": "AND"
    },
    "3240": {
      "op": "CALLDATASIZE"
    },
    "3241": {
      "op": "DUP3"
    },
    "3242": {
      "op": "CALLDATACOPY"
    },
    "3243": {
      "op": "POP"
    },
    "3244": {
      "op": "POP"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3247": {
      "op": "NOT"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3250": {
      "op": "DUP3"
    },
    "3251": {
      "op": "MLOAD"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3254": {
      "op": "ADD"
    },
    "3255": {
      "op": "ADD"
    },
    "3256": {
      "op": "AND"
    },
    "3257": {
      "op": "SWAP1"
    },
    "3258": {
      "op": "POP"
    },
    "3259": {
      "op": "SWAP1"
    },
    "3260": {
      "op": "POP"
    },
    "3261": {
      "op": "DUP2"
    },
    "3262": {
      "op": "ADD"
    },
    "3263": {
      "op": "SWAP1"
    },
    "3264": {
      "op": "POP"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3267": {
      "op": "RETURN"
    },
    "3268": {
      "op": "JUMPDEST"
    },
    "3269": {
      "op": "PUSH4",
      "value": "0xE8A3D485"
    },
    "3274": {
      "op": "DUP2"
    },
    "3275": {
      "op": "XOR"
    },
    "3276": {
      "op": "PUSH2",
      "value": "0xD49"
    },
    "3279": {
      "op": "JUMPI"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3282": {
      "op": "CALLDATASIZE"
    },
    "3283": {
      "op": "LT"
    },
    "3284": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3287": {
      "op": "JUMPI"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3290": {
      "op": "DUP1"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3293": {
      "op": "MSTORE"
    },
    "3294": {
      "op": "DUP1"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3297": {
      "op": "ADD"
    },
    "3298": {
      "fn": "NFT.contractURI",
      "offset": [
        17833,
        17850
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 73,
      "value": "0x12"
    },
    "3300": {
      "op": "SLOAD"
    },
    "3301": {
      "op": "DUP1"
    },
    "3302": {
      "op": "DUP3"
    },
    "3303": {
      "op": "MSTORE"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3306": {
      "op": "DUP3"
    },
    "3307": {
      "op": "ADD"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3310": {
      "op": "DUP3"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3313": {
      "op": "ADD"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3316": {
      "op": "SHR"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3319": {
      "op": "DUP2"
    },
    "3320": {
      "op": "GT"
    },
    "3321": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3324": {
      "op": "JUMPI"
    },
    "3325": {
      "op": "DUP1"
    },
    "3326": {
      "op": "ISZERO"
    },
    "3327": {
      "op": "PUSH2",
      "value": "0xD1B"
    },
    "3330": {
      "op": "JUMPI"
    },
    "3331": {
      "op": "SWAP1"
    },
    "3332": {
      "op": "JUMPDEST"
    },
    "3333": {
      "op": "DUP1"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "3336": {
      "op": "ADD"
    },
    "3337": {
      "op": "SLOAD"
    },
    "3338": {
      "op": "DUP2"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3341": {
      "op": "SHL"
    },
    "3342": {
      "op": "DUP5"
    },
    "3343": {
      "op": "ADD"
    },
    "3344": {
      "op": "MSTORE"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3347": {
      "op": "ADD"
    },
    "3348": {
      "op": "DUP2"
    },
    "3349": {
      "op": "DUP2"
    },
    "3350": {
      "op": "XOR"
    },
    "3351": {
      "op": "PUSH2",
      "value": "0xD4"
    },
    "3354": {
      "op": "JUMPI"
    },
    "3355": {
      "op": "JUMPDEST"
    },
    "3356": {
      "op": "POP"
    },
    "3357": {
      "op": "POP"
    },
    "3358": {
      "op": "POP"
    },
    "3359": {
      "op": "POP"
    },
    "3360": {
      "op": "DUP1"
    },
    "3361": {
      "op": "MLOAD"
    },
    "3362": {
      "op": "DUP1"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3365": {
      "op": "DUP4"
    },
    "3366": {
      "op": "ADD"
    },
    "3367": {
      "op": "ADD"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3370": {
      "op": "DUP3"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3373": {
      "op": "SUB"
    },
    "3374": {
      "op": "AND"
    },
    "3375": {
      "op": "CALLDATASIZE"
    },
    "3376": {
      "op": "DUP3"
    },
    "3377": {
      "op": "CALLDATACOPY"
    },
    "3378": {
      "op": "POP"
    },
    "3379": {
      "op": "POP"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3382": {
      "op": "NOT"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3385": {
      "op": "DUP3"
    },
    "3386": {
      "op": "MLOAD"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3389": {
      "op": "ADD"
    },
    "3390": {
      "op": "ADD"
    },
    "3391": {
      "op": "AND"
    },
    "3392": {
      "op": "SWAP1"
    },
    "3393": {
      "op": "POP"
    },
    "3394": {
      "op": "DUP2"
    },
    "3395": {
      "op": "ADD"
    },
    "3396": {
      "op": "SWAP1"
    },
    "3397": {
      "op": "POP"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3400": {
      "op": "RETURN"
    },
    "3401": {
      "op": "JUMPDEST"
    },
    "3402": {
      "op": "PUSH4",
      "value": "0x3D57DF47"
    },
    "3407": {
      "op": "DUP2"
    },
    "3408": {
      "op": "XOR"
    },
    "3409": {
      "op": "PUSH2",
      "value": "0xDC3"
    },
    "3412": {
      "op": "JUMPI"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3415": {
      "op": "CALLDATASIZE"
    },
    "3416": {
      "op": "LT"
    },
    "3417": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3420": {
      "op": "JUMPI"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3423": {
      "op": "CALLDATALOAD"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3426": {
      "fn": "NFT.set_contract_uri",
      "offset": [
        17883,
        17902
      ],
      "op": "ADD",
      "path": "0"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "3429": {
      "fn": "NFT.set_contract_uri",
      "offset": [
        17883,
        17902
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3430": {
      "op": "CALLDATALOAD"
    },
    "3431": {
      "op": "GT"
    },
    "3432": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3435": {
      "op": "JUMPI"
    },
    "3436": {
      "fn": "NFT.set_contract_uri",
      "offset": [
        17883,
        17902
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3437": {
      "op": "CALLDATALOAD"
    },
    "3438": {
      "op": "DUP1"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3441": {
      "op": "MSTORE"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3444": {
      "fn": "NFT.set_contract_uri",
      "offset": [
        17883,
        17902
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3445": {
      "op": "ADD"
    },
    "3446": {
      "op": "DUP2"
    },
    "3447": {
      "op": "DUP2"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3450": {
      "op": "CALLDATACOPY"
    },
    "3451": {
      "op": "POP"
    },
    "3452": {
      "op": "POP"
    },
    "3453": {
      "fn": "NFT.set_contract_uri",
      "offset": [
        17883,
        17902
      ],
      "op": "POP",
      "path": "0"
    },
    "3454": {
      "fn": "NFT.set_contract_uri",
      "offset": [
        18116,
        18126
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 74
    },
    "3455": {
      "fn": "NFT.set_contract_uri",
      "offset": [
        18101,
        18112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3457": {
      "fn": "NFT.set_contract_uri",
      "offset": [
        18101,
        18126
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3458": {
      "fn": "NFT.set_contract_uri",
      "offset": [
        18101,
        18126
      ],
      "op": "XOR",
      "path": "0"
    },
    "3459": {
      "fn": "NFT.set_contract_uri",
      "offset": [
        18094,
        18126
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "3462": {
      "branch": 75,
      "fn": "NFT.set_contract_uri",
      "offset": [
        18094,
        18126
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3463": {
      "fn": "NFT.set_contract_uri",
      "offset": [
        18151,
        18158
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 76,
      "value": "0x40"
    },
    "3465": {
      "fn": "NFT.set_contract_uri",
      "offset": [
        18131,
        18158
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3466": {
      "fn": "NFT.set_contract_uri",
      "offset": [
        18131,
        18158
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3467": {
      "fn": "NFT.set_contract_uri",
      "offset": [
        18131,
        18148
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "3469": {
      "op": "SSTORE"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3472": {
      "fn": "NFT.set_contract_uri",
      "offset": [
        18131,
        18158
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3475": {
      "op": "ADD"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3478": {
      "op": "SHR"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3481": {
      "op": "DUP2"
    },
    "3482": {
      "op": "GT"
    },
    "3483": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3486": {
      "op": "JUMPI"
    },
    "3487": {
      "op": "DUP1"
    },
    "3488": {
      "op": "ISZERO"
    },
    "3489": {
      "op": "PUSH2",
      "value": "0xDBE"
    },
    "3492": {
      "op": "JUMPI"
    },
    "3493": {
      "op": "SWAP1"
    },
    "3494": {
      "op": "JUMPDEST"
    },
    "3495": {
      "op": "DUP1"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3498": {
      "op": "SHL"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3501": {
      "op": "ADD"
    },
    "3502": {
      "op": "MLOAD"
    },
    "3503": {
      "op": "DUP2"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "3506": {
      "op": "ADD"
    },
    "3507": {
      "op": "SSTORE"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3510": {
      "op": "ADD"
    },
    "3511": {
      "op": "DUP2"
    },
    "3512": {
      "op": "DUP2"
    },
    "3513": {
      "op": "XOR"
    },
    "3514": {
      "op": "PUSH2",
      "value": "0xDA6"
    },
    "3517": {
      "op": "JUMPI"
    },
    "3518": {
      "op": "JUMPDEST"
    },
    "3519": {
      "op": "POP"
    },
    "3520": {
      "op": "POP"
    },
    "3521": {
      "fn": "NFT.set_contract_uri",
      "offset": [
        18131,
        18158
      ],
      "op": "POP",
      "path": "0"
    },
    "3522": {
      "op": "STOP"
    },
    "3523": {
      "op": "JUMPDEST"
    },
    "3524": {
      "op": "PUSH4",
      "value": "0x706523F"
    },
    "3529": {
      "op": "DUP2"
    },
    "3530": {
      "op": "XOR"
    },
    "3531": {
      "op": "PUSH2",
      "value": "0xE4A"
    },
    "3534": {
      "op": "JUMPI"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3537": {
      "op": "CALLDATASIZE"
    },
    "3538": {
      "op": "LT"
    },
    "3539": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3542": {
      "op": "JUMPI"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3545": {
      "op": "CALLDATALOAD"
    },
    "3546": {
      "op": "DUP1"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3549": {
      "op": "SHR"
    },
    "3550": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3553": {
      "op": "JUMPI"
    },
    "3554": {
      "fn": "NFT.admin_withdraw_erc20",
      "offset": [
        18196,
        18209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3556": {
      "fn": "NFT.admin_withdraw_erc20",
      "offset": [
        18196,
        18209
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3559": {
      "op": "CALLDATALOAD"
    },
    "3560": {
      "op": "DUP1"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3563": {
      "op": "SHR"
    },
    "3564": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3567": {
      "op": "JUMPI"
    },
    "3568": {
      "fn": "NFT.admin_withdraw_erc20",
      "offset": [
        18211,
        18226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3570": {
      "fn": "NFT.admin_withdraw_erc20",
      "offset": [
        18211,
        18226
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3571": {
      "fn": "NFT.admin_withdraw_erc20",
      "offset": [
        18441,
        18451
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 77
    },
    "3572": {
      "fn": "NFT.admin_withdraw_erc20",
      "offset": [
        18426,
        18437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3574": {
      "fn": "NFT.admin_withdraw_erc20",
      "offset": [
        18426,
        18451
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3575": {
      "fn": "NFT.admin_withdraw_erc20",
      "offset": [
        18426,
        18451
      ],
      "op": "XOR",
      "path": "0"
    },
    "3576": {
      "fn": "NFT.admin_withdraw_erc20",
      "offset": [
        18419,
        18451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "3579": {
      "branch": 78,
      "fn": "NFT.admin_withdraw_erc20",
      "offset": [
        18419,
        18451
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3580": {
      "fn": "NFT.admin_withdraw_erc20",
      "offset": [
        18477,
        18488
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 79,
      "value": "0x40"
    },
    "3582": {
      "fn": "NFT.admin_withdraw_erc20",
      "offset": [
        18477,
        18513
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3583": {
      "op": "PUSH4",
      "value": "0xA959CBB"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3590": {
      "op": "MSTORE"
    },
    "3591": {
      "fn": "NFT.admin_withdraw_erc20",
      "offset": [
        18498,
        18504
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3593": {
      "op": "MLOAD"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3596": {
      "op": "MSTORE"
    },
    "3597": {
      "fn": "NFT.admin_withdraw_erc20",
      "offset": [
        18506,
        18512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3599": {
      "op": "CALLDATALOAD"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3602": {
      "op": "MSTORE"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x9C"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3613": {
      "fn": "NFT.admin_withdraw_erc20",
      "offset": [
        18477,
        18513
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3614": {
      "op": "GAS"
    },
    "3615": {
      "op": "CALL"
    },
    "3616": {
      "op": "PUSH2",
      "value": "0xE2E"
    },
    "3619": {
      "op": "JUMPI"
    },
    "3620": {
      "op": "RETURNDATASIZE"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3625": {
      "op": "RETURNDATACOPY"
    },
    "3626": {
      "op": "RETURNDATASIZE"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3629": {
      "op": "REVERT"
    },
    "3630": {
      "op": "JUMPDEST"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3633": {
      "op": "RETURNDATASIZE"
    },
    "3634": {
      "op": "LT"
    },
    "3635": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3638": {
      "op": "JUMPI"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3641": {
      "op": "MLOAD"
    },
    "3642": {
      "op": "DUP1"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3645": {
      "op": "SHR"
    },
    "3646": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3649": {
      "op": "JUMPI"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3652": {
      "op": "MSTORE"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3655": {
      "fn": "NFT.admin_withdraw_erc20",
      "offset": [
        18477,
        18513
      ],
      "op": "POP",
      "path": "0"
    },
    "3656": {
      "op": "POP"
    },
    "3657": {
      "op": "STOP"
    },
    "3658": {
      "op": "JUMPDEST"
    },
    "3659": {
      "op": "PUSH4",
      "value": "0x1816DDD"
    },
    "3664": {
      "op": "DUP2"
    },
    "3665": {
      "op": "XOR"
    },
    "3666": {
      "op": "PUSH2",
      "value": "0xE69"
    },
    "3669": {
      "op": "JUMPI"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3672": {
      "op": "CALLDATASIZE"
    },
    "3673": {
      "op": "LT"
    },
    "3674": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3677": {
      "op": "JUMPI"
    },
    "3678": {
      "fn": "NFT.totalSupply",
      "offset": [
        18727,
        18742
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 80,
      "value": "0xA"
    },
    "3680": {
      "op": "SLOAD"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3683": {
      "op": "MSTORE"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3688": {
      "op": "RETURN"
    },
    "3689": {
      "op": "JUMPDEST"
    },
    "3690": {
      "op": "PUSH4",
      "value": "0x4F6CCCE7"
    },
    "3695": {
      "op": "DUP2"
    },
    "3696": {
      "op": "XOR"
    },
    "3697": {
      "op": "PUSH2",
      "value": "0xE88"
    },
    "3700": {
      "op": "JUMPI"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3703": {
      "op": "CALLDATASIZE"
    },
    "3704": {
      "op": "LT"
    },
    "3705": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3708": {
      "op": "JUMPI"
    },
    "3709": {
      "fn": "NFT.tokenByIndex",
      "offset": [
        19035,
        19041
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 81,
      "value": "0x4"
    },
    "3711": {
      "op": "CALLDATALOAD"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3714": {
      "op": "MSTORE"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3719": {
      "op": "RETURN"
    },
    "3720": {
      "op": "JUMPDEST"
    },
    "3721": {
      "op": "PUSH4",
      "value": "0x2F745C59"
    },
    "3726": {
      "op": "DUP2"
    },
    "3727": {
      "op": "XOR"
    },
    "3728": {
      "op": "PUSH2",
      "value": "0xECB"
    },
    "3731": {
      "op": "JUMPI"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3734": {
      "op": "CALLDATASIZE"
    },
    "3735": {
      "op": "LT"
    },
    "3736": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3739": {
      "op": "JUMPI"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3742": {
      "op": "CALLDATALOAD"
    },
    "3743": {
      "op": "DUP1"
    },
    "3744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3746": {
      "op": "SHR"
    },
    "3747": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3750": {
      "op": "JUMPI"
    },
    "3751": {
      "fn": "NFT.tokenOfOwnerByIndex",
      "offset": [
        19084,
        19098
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3753": {
      "fn": "NFT.tokenOfOwnerByIndex",
      "offset": [
        19084,
        19098
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3754": {
      "fn": "NFT.tokenOfOwnerByIndex",
      "offset": [
        19547,
        19552
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 82,
      "value": "0x40"
    },
    "3756": {
      "fn": "NFT.tokenOfOwnerByIndex",
      "offset": [
        19547,
        19570
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3757": {
      "fn": "NFT.tokenOfOwnerByIndex",
      "offset": [
        19547,
        19570
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3758": {
      "fn": "NFT.tokenOfOwnerByIndex",
      "offset": [
        19540,
        19570
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "3761": {
      "branch": 83,
      "fn": "NFT.tokenOfOwnerByIndex",
      "offset": [
        19540,
        19570
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3762": {
      "fn": "NFT.tokenOfOwnerByIndex",
      "offset": [
        19582,
        19606
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 84,
      "value": "0x2"
    },
    "3764": {
      "fn": "NFT.tokenOfOwnerByIndex",
      "offset": [
        19607,
        19612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3766": {
      "op": "MLOAD"
    },
    "3767": {
      "fn": "NFT.tokenOfOwnerByIndex",
      "offset": [
        19582,
        19613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3769": {
      "fn": "NFT.tokenOfOwnerByIndex",
      "offset": [
        19582,
        19613
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3770": {
      "fn": "NFT.tokenOfOwnerByIndex",
      "offset": [
        19582,
        19613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3772": {
      "fn": "NFT.tokenOfOwnerByIndex",
      "offset": [
        19582,
        19613
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3773": {
      "fn": "NFT.tokenOfOwnerByIndex",
      "offset": [
        19582,
        19613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3775": {
      "fn": "NFT.tokenOfOwnerByIndex",
      "offset": [
        19582,
        19613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3777": {
      "fn": "NFT.tokenOfOwnerByIndex",
      "offset": [
        19582,
        19613
      ],
      "op": "SHA3",
      "path": "0"
    },
    "3778": {
      "op": "SLOAD"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3781": {
      "op": "MSTORE"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3786": {
      "op": "RETURN"
    },
    "3787": {
      "op": "JUMPDEST"
    },
    "3788": {
      "op": "PUSH4",
      "value": "0x2FDD40D4"
    },
    "3793": {
      "op": "DUP2"
    },
    "3794": {
      "op": "XOR"
    },
    "3795": {
      "op": "PUSH2",
      "value": "0xEEA"
    },
    "3798": {
      "op": "JUMPI"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3801": {
      "op": "CALLDATASIZE"
    },
    "3802": {
      "op": "LT"
    },
    "3803": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3806": {
      "op": "JUMPI"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "3809": {
      "op": "SLOAD"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3812": {
      "op": "MSTORE"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3817": {
      "op": "RETURN"
    },
    "3818": {
      "op": "JUMPDEST"
    },
    "3819": {
      "op": "PUSH4",
      "value": "0x9F181B5E"
    },
    "3824": {
      "op": "DUP2"
    },
    "3825": {
      "op": "XOR"
    },
    "3826": {
      "op": "PUSH2",
      "value": "0xF9"
    },
    "3829": {
      "op": "JUMPI"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3832": {
      "op": "CALLDATASIZE"
    },
    "3833": {
      "op": "LT"
    },
    "3834": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3837": {
      "op": "JUMPI"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "3840": {
      "op": "SLOAD"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3843": {
      "op": "MSTORE"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3848": {
      "op": "RETURN"
    },
    "3849": {
      "op": "JUMPDEST"
    },
    "3850": {
      "op": "PUSH4",
      "value": "0x6FDDE3"
    },
    "3855": {
      "op": "DUP2"
    },
    "3856": {
      "op": "XOR"
    },
    "3857": {
      "op": "PUSH2",
      "value": "0xF8E"
    },
    "3860": {
      "op": "JUMPI"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3863": {
      "op": "CALLDATASIZE"
    },
    "3864": {
      "op": "LT"
    },
    "3865": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3868": {
      "op": "JUMPI"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3871": {
      "op": "DUP1"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3874": {
      "op": "MSTORE"
    },
    "3875": {
      "op": "DUP1"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3878": {
      "op": "ADD"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "3881": {
      "op": "SLOAD"
    },
    "3882": {
      "op": "DUP1"
    },
    "3883": {
      "op": "DUP3"
    },
    "3884": {
      "op": "MSTORE"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3887": {
      "op": "DUP3"
    },
    "3888": {
      "op": "ADD"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3891": {
      "op": "DUP3"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3894": {
      "op": "ADD"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3897": {
      "op": "SHR"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3900": {
      "op": "DUP2"
    },
    "3901": {
      "op": "GT"
    },
    "3902": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "3905": {
      "op": "JUMPI"
    },
    "3906": {
      "op": "DUP1"
    },
    "3907": {
      "op": "ISZERO"
    },
    "3908": {
      "op": "PUSH2",
      "value": "0xF60"
    },
    "3911": {
      "op": "JUMPI"
    },
    "3912": {
      "op": "SWAP1"
    },
    "3913": {
      "op": "JUMPDEST"
    },
    "3914": {
      "op": "DUP1"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "3917": {
      "op": "ADD"
    },
    "3918": {
      "op": "SLOAD"
    },
    "3919": {
      "op": "DUP2"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3922": {
      "op": "SHL"
    },
    "3923": {
      "op": "DUP5"
    },
    "3924": {
      "op": "ADD"
    },
    "3925": {
      "op": "MSTORE"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3928": {
      "op": "ADD"
    },
    "3929": {
      "op": "DUP2"
    },
    "3930": {
      "op": "DUP2"
    },
    "3931": {
      "op": "XOR"
    },
    "3932": {
      "op": "PUSH2",
      "value": "0xF49"
    },
    "3935": {
      "op": "JUMPI"
    },
    "3936": {
      "op": "JUMPDEST"
    },
    "3937": {
      "op": "POP"
    },
    "3938": {
      "op": "POP"
    },
    "3939": {
      "op": "POP"
    },
    "3940": {
      "op": "POP"
    },
    "3941": {
      "op": "DUP1"
    },
    "3942": {
      "op": "MLOAD"
    },
    "3943": {
      "op": "DUP1"
    },
    "3944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3946": {
      "op": "DUP4"
    },
    "3947": {
      "op": "ADD"
    },
    "3948": {
      "op": "ADD"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3951": {
      "op": "DUP3"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3954": {
      "op": "SUB"
    },
    "3955": {
      "op": "AND"
    },
    "3956": {
      "op": "CALLDATASIZE"
    },
    "3957": {
      "op": "DUP3"
    },
    "3958": {
      "op": "CALLDATACOPY"
    },
    "3959": {
      "op": "POP"
    },
    "3960": {
      "op": "POP"
    },
    "3961": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3963": {
      "op": "NOT"
    },
    "3964": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3966": {
      "op": "DUP3"
    },
    "3967": {
      "op": "MLOAD"
    },
    "3968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3970": {
      "op": "ADD"
    },
    "3971": {
      "op": "ADD"
    },
    "3972": {
      "op": "AND"
    },
    "3973": {
      "op": "SWAP1"
    },
    "3974": {
      "op": "POP"
    },
    "3975": {
      "op": "DUP2"
    },
    "3976": {
      "op": "ADD"
    },
    "3977": {
      "op": "SWAP1"
    },
    "3978": {
      "op": "POP"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3981": {
      "op": "RETURN"
    },
    "3982": {
      "op": "JUMPDEST"
    },
    "3983": {
      "op": "PUSH4",
      "value": "0x95D89B41"
    },
    "3988": {
      "op": "DUP2"
    },
    "3989": {
      "op": "XOR"
    },
    "3990": {
      "op": "PUSH2",
      "value": "0xFE6"
    },
    "3993": {
      "op": "JUMPI"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3996": {
      "op": "CALLDATASIZE"
    },
    "3997": {
      "op": "LT"
    },
    "3998": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "4001": {
      "op": "JUMPI"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4004": {
      "op": "DUP1"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4007": {
      "op": "MSTORE"
    },
    "4008": {
      "op": "DUP1"
    },
    "4009": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4011": {
      "op": "ADD"
    },
    "4012": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "4014": {
      "op": "SLOAD"
    },
    "4015": {
      "op": "DUP1"
    },
    "4016": {
      "op": "DUP3"
    },
    "4017": {
      "op": "MSTORE"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4020": {
      "op": "DUP3"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "4024": {
      "op": "SLOAD"
    },
    "4025": {
      "op": "DUP2"
    },
    "4026": {
      "op": "MSTORE"
    },
    "4027": {
      "op": "POP"
    },
    "4028": {
      "op": "POP"
    },
    "4029": {
      "op": "DUP1"
    },
    "4030": {
      "op": "MLOAD"
    },
    "4031": {
      "op": "DUP1"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4034": {
      "op": "DUP4"
    },
    "4035": {
      "op": "ADD"
    },
    "4036": {
      "op": "ADD"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4039": {
      "op": "DUP3"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4042": {
      "op": "SUB"
    },
    "4043": {
      "op": "AND"
    },
    "4044": {
      "op": "CALLDATASIZE"
    },
    "4045": {
      "op": "DUP3"
    },
    "4046": {
      "op": "CALLDATACOPY"
    },
    "4047": {
      "op": "POP"
    },
    "4048": {
      "op": "POP"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4051": {
      "op": "NOT"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4054": {
      "op": "DUP3"
    },
    "4055": {
      "op": "MLOAD"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4058": {
      "op": "ADD"
    },
    "4059": {
      "op": "ADD"
    },
    "4060": {
      "op": "AND"
    },
    "4061": {
      "op": "SWAP1"
    },
    "4062": {
      "op": "POP"
    },
    "4063": {
      "op": "DUP2"
    },
    "4064": {
      "op": "ADD"
    },
    "4065": {
      "op": "SWAP1"
    },
    "4066": {
      "op": "POP"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4069": {
      "op": "RETURN"
    },
    "4070": {
      "op": "JUMPDEST"
    },
    "4071": {
      "op": "POP"
    },
    "4072": {
      "op": "JUMPDEST"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4077": {
      "op": "REVERT"
    },
    "4078": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9184,
        9662
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4079": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9411,
        9425
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 85,
      "value": "0x8"
    },
    "4081": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9426,
        9434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4083": {
      "op": "MLOAD"
    },
    "4084": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9411,
        9435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4086": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9411,
        9435
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4087": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9411,
        9435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4089": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9411,
        9435
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4090": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9411,
        9435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4092": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9411,
        9435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4094": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9411,
        9435
      ],
      "op": "SHA3",
      "path": "0"
    },
    "4095": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9407,
        9436
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4096": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9407,
        9441
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4097": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9400,
        9456
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1061"
    },
    "4100": {
      "branch": 86,
      "fn": "NFT._addTokenURI",
      "offset": [
        9400,
        9456
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4105": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9443,
        9456
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4106": {
      "op": "PUSH32",
      "value": "0x546F6B656E206E6F742030000000000000000000000"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4141": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9443,
        9456
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4142": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9443,
        9456
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "4144": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9400,
        9456
      ],
      "op": "POP",
      "path": "0"
    },
    "4145": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4147": {
      "op": "MLOAD"
    },
    "4148": {
      "op": "DUP1"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4151": {
      "op": "ADD"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4154": {
      "op": "DUP3"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4157": {
      "op": "SUB"
    },
    "4158": {
      "op": "AND"
    },
    "4159": {
      "op": "CALLDATASIZE"
    },
    "4160": {
      "op": "DUP3"
    },
    "4161": {
      "op": "CALLDATACOPY"
    },
    "4162": {
      "op": "POP"
    },
    "4163": {
      "op": "POP"
    },
    "4164": {
      "op": "PUSH4",
      "value": "0x8C379A0"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4171": {
      "op": "MSTORE"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4176": {
      "op": "MSTORE"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4179": {
      "op": "NOT"
    },
    "4180": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4184": {
      "op": "MLOAD"
    },
    "4185": {
      "op": "ADD"
    },
    "4186": {
      "op": "AND"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4189": {
      "op": "ADD"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0x9C"
    },
    "4192": {
      "op": "REVERT"
    },
    "4193": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9400,
        9456
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4194": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9512,
        9521
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 87,
      "value": "0x60"
    },
    "4196": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9521
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4197": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9521
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4198": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "4200": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9500,
        9508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4202": {
      "op": "MLOAD"
    },
    "4203": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4205": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9509
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4206": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4208": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9509
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4209": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4211": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4213": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9509
      ],
      "op": "SHA3",
      "path": "0"
    },
    "4214": {
      "op": "SSTORE"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4217": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "4219": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9500,
        9508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4221": {
      "op": "MLOAD"
    },
    "4222": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4224": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9509
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4225": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4227": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9509
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4228": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4230": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4232": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9509
      ],
      "op": "SHA3",
      "path": "0"
    },
    "4233": {
      "op": "ADD"
    },
    "4234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4236": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9521
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4239": {
      "op": "ADD"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4242": {
      "op": "SHR"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4245": {
      "op": "DUP2"
    },
    "4246": {
      "op": "GT"
    },
    "4247": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "4250": {
      "op": "JUMPI"
    },
    "4251": {
      "op": "DUP1"
    },
    "4252": {
      "op": "ISZERO"
    },
    "4253": {
      "op": "PUSH2",
      "value": "0x10B9"
    },
    "4256": {
      "op": "JUMPI"
    },
    "4257": {
      "op": "SWAP1"
    },
    "4258": {
      "op": "JUMPDEST"
    },
    "4259": {
      "op": "DUP1"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4262": {
      "op": "SHL"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4265": {
      "op": "ADD"
    },
    "4266": {
      "op": "MLOAD"
    },
    "4267": {
      "op": "DUP2"
    },
    "4268": {
      "op": "DUP5"
    },
    "4269": {
      "op": "ADD"
    },
    "4270": {
      "op": "SSTORE"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4273": {
      "op": "ADD"
    },
    "4274": {
      "op": "DUP2"
    },
    "4275": {
      "op": "DUP2"
    },
    "4276": {
      "op": "XOR"
    },
    "4277": {
      "op": "PUSH2",
      "value": "0x10A2"
    },
    "4280": {
      "op": "JUMPI"
    },
    "4281": {
      "op": "JUMPDEST"
    },
    "4282": {
      "op": "POP"
    },
    "4283": {
      "op": "POP"
    },
    "4284": {
      "op": "POP"
    },
    "4285": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9485,
        9521
      ],
      "op": "POP",
      "path": "0"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4288": {
      "op": "DUP1"
    },
    "4289": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "4292": {
      "op": "MSTORE"
    },
    "4293": {
      "op": "DUP1"
    },
    "4294": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "4297": {
      "op": "ADD"
    },
    "4298": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9598,
        9607
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 88,
      "value": "0x60"
    },
    "4300": {
      "op": "MLOAD"
    },
    "4301": {
      "op": "DUP1"
    },
    "4302": {
      "op": "DUP3"
    },
    "4303": {
      "op": "MSTORE"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4306": {
      "op": "DUP3"
    },
    "4307": {
      "op": "ADD"
    },
    "4308": {
      "op": "DUP2"
    },
    "4309": {
      "op": "DUP2"
    },
    "4310": {
      "op": "DUP4"
    },
    "4311": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4315": {
      "op": "GAS"
    },
    "4316": {
      "op": "STATICCALL"
    },
    "4317": {
      "op": "POP"
    },
    "4318": {
      "op": "POP"
    },
    "4319": {
      "op": "POP"
    },
    "4320": {
      "op": "DUP1"
    },
    "4321": {
      "op": "MLOAD"
    },
    "4322": {
      "op": "DUP1"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4325": {
      "op": "DUP4"
    },
    "4326": {
      "op": "ADD"
    },
    "4327": {
      "op": "ADD"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4330": {
      "op": "DUP3"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4333": {
      "op": "SUB"
    },
    "4334": {
      "op": "AND"
    },
    "4335": {
      "op": "CALLDATASIZE"
    },
    "4336": {
      "op": "DUP3"
    },
    "4337": {
      "op": "CALLDATACOPY"
    },
    "4338": {
      "op": "POP"
    },
    "4339": {
      "op": "POP"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4342": {
      "op": "NOT"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4345": {
      "op": "DUP3"
    },
    "4346": {
      "op": "MLOAD"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4349": {
      "op": "ADD"
    },
    "4350": {
      "op": "ADD"
    },
    "4351": {
      "op": "AND"
    },
    "4352": {
      "op": "SWAP1"
    },
    "4353": {
      "op": "POP"
    },
    "4354": {
      "op": "DUP2"
    },
    "4355": {
      "op": "ADD"
    },
    "4356": {
      "op": "SWAP1"
    },
    "4357": {
      "op": "POP"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4360": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9586,
        9608
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4361": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9586,
        9608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4363": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9576,
        9609
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4364": {
      "op": "MLOAD"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4367": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9576,
        9609
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4368": {
      "op": "ADD"
    },
    "4369": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9576,
        9609
      ],
      "op": "SHA3",
      "path": "0"
    },
    "4370": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9576,
        9609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4371": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9576,
        9609
      ],
      "op": "POP",
      "path": "0"
    },
    "4372": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9554,
        9609
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "4374": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9554,
        9609
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4375": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9654,
        9662
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 89,
      "value": "0x40"
    },
    "4377": {
      "op": "MLOAD"
    },
    "4378": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9614,
        9639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "4380": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9640,
        9650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "4382": {
      "op": "MLOAD"
    },
    "4383": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9614,
        9651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4385": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9614,
        9651
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4386": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9614,
        9651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4388": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9614,
        9651
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4389": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9614,
        9651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4391": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9614,
        9651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4393": {
      "fn": "NFT._addTokenURI",
      "offset": [
        9614,
        9651
      ],
      "op": "SHA3",
      "path": "0"
    },
    "4394": {
      "op": "SSTORE"
    },
    "4395": {
      "op": "JUMP"
    },
    "4396": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8454,
        8834
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4397": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8667,
        8681
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 90,
      "value": "0x0"
    },
    "4399": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8682,
        8690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4401": {
      "op": "MLOAD"
    },
    "4402": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8667,
        8691
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4404": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8667,
        8691
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4405": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8667,
        8691
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4407": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8667,
        8691
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4408": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8667,
        8691
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4410": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8667,
        8691
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4412": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8667,
        8691
      ],
      "op": "SHA3",
      "path": "0"
    },
    "4413": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8667,
        8709
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4414": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8660,
        8709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "4417": {
      "branch": 91,
      "fn": "NFT._addTokenTo",
      "offset": [
        8660,
        8709
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4418": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8764,
        8767
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 92,
      "value": "0x40"
    },
    "4420": {
      "op": "MLOAD"
    },
    "4421": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8737,
        8751
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4423": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8752,
        8760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4425": {
      "op": "MLOAD"
    },
    "4426": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8737,
        8761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4428": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8737,
        8761
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4429": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8737,
        8761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4431": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8737,
        8761
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4432": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8737,
        8761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4434": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8737,
        8761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4436": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8737,
        8761
      ],
      "op": "SHA3",
      "path": "0"
    },
    "4437": {
      "op": "SSTORE"
    },
    "4438": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8800,
        8824
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 93,
      "value": "0x2"
    },
    "4440": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8825,
        8828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4442": {
      "op": "MLOAD"
    },
    "4443": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8800,
        8829
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4445": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8800,
        8829
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4446": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8800,
        8829
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4448": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8800,
        8829
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4449": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8800,
        8829
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4451": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8800,
        8829
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4453": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8800,
        8829
      ],
      "op": "SHA3",
      "path": "0"
    },
    "4454": {
      "op": "DUP1"
    },
    "4455": {
      "op": "SLOAD"
    },
    "4456": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8833,
        8834
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4458": {
      "op": "DUP2"
    },
    "4459": {
      "op": "ADD"
    },
    "4460": {
      "op": "DUP2"
    },
    "4461": {
      "op": "DUP2"
    },
    "4462": {
      "op": "LT"
    },
    "4463": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "4466": {
      "op": "JUMPI"
    },
    "4467": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8800,
        8834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4468": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8800,
        8834
      ],
      "op": "POP",
      "path": "0"
    },
    "4469": {
      "op": "DUP2"
    },
    "4470": {
      "op": "SSTORE"
    },
    "4471": {
      "fn": "NFT._addTokenTo",
      "offset": [
        8800,
        8834
      ],
      "op": "POP",
      "path": "0"
    },
    "4472": {
      "op": "JUMP"
    },
    "4473": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        7602,
        8441
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4474": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8036,
        8050
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 94,
      "value": "0x0"
    },
    "4476": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8051,
        8059
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4478": {
      "op": "MLOAD"
    },
    "4479": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8036,
        8060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4481": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8036,
        8060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4482": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8036,
        8060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4484": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8036,
        8060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4485": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8036,
        8060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4487": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8036,
        8060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4489": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8036,
        8060
      ],
      "op": "SHA3",
      "path": "0"
    },
    "4490": {
      "op": "SLOAD"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4493": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8019,
        8060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4494": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8097,
        8105
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 95,
      "value": "0x40"
    },
    "4496": {
      "op": "MLOAD"
    },
    "4497": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8088,
        8093
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "4499": {
      "op": "MLOAD"
    },
    "4500": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8088,
        8105
      ],
      "op": "EQ",
      "path": "0"
    },
    "4501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4503": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8065,
        8105
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4504": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8148,
        8166
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 96,
      "value": "0x1"
    },
    "4506": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8167,
        8175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4508": {
      "op": "MLOAD"
    },
    "4509": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8148,
        8176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4511": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8148,
        8176
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4512": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8148,
        8176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4514": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8148,
        8176
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4515": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8148,
        8176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4517": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8148,
        8176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4519": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8148,
        8176
      ],
      "op": "SHA3",
      "path": "0"
    },
    "4520": {
      "op": "SLOAD"
    },
    "4521": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8136,
        8144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4523": {
      "op": "MLOAD"
    },
    "4524": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8136,
        8176
      ],
      "op": "EQ",
      "path": "0"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4527": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8110,
        8176
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4528": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8214,
        8235
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 97,
      "value": "0x3"
    },
    "4530": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8236,
        8241
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "4532": {
      "op": "MLOAD"
    },
    "4533": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8214,
        8242
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4535": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8214,
        8242
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4536": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8214,
        8242
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4538": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8214,
        8242
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4539": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8214,
        8242
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4541": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8214,
        8242
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4543": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8214,
        8242
      ],
      "op": "SHA3",
      "path": "0"
    },
    "4544": {
      "op": "DUP1"
    },
    "4545": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8244,
        8252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4547": {
      "op": "MLOAD"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4550": {
      "op": "MSTORE"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4553": {
      "op": "MSTORE"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4558": {
      "op": "SHA3"
    },
    "4559": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8213,
        8253
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4560": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8213,
        8253
      ],
      "op": "POP",
      "path": "0"
    },
    "4561": {
      "op": "SLOAD"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4564": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8181,
        8253
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4565": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8286,
        8309
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 98,
      "value": "0x6"
    },
    "4567": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8286,
        8342
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4568": {
      "op": "PUSH4",
      "value": "0x47606390"
    },
    "4573": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "4576": {
      "op": "MSTORE"
    },
    "4577": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8333,
        8341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4579": {
      "op": "MLOAD"
    },
    "4580": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "4583": {
      "op": "MSTORE"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4586": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4591": {
      "op": "PUSH2",
      "value": "0x13C"
    },
    "4594": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8286,
        8342
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4595": {
      "op": "GAS"
    },
    "4596": {
      "op": "STATICCALL"
    },
    "4597": {
      "op": "PUSH2",
      "value": "0x123"
    },
    "4600": {
      "op": "JUMPI"
    },
    "4601": {
      "op": "RETURNDATASIZE"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4606": {
      "op": "RETURNDATACOPY"
    },
    "4607": {
      "op": "RETURNDATASIZE"
    },
    "4608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4610": {
      "op": "REVERT"
    },
    "4611": {
      "op": "JUMPDEST"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4614": {
      "op": "RETURNDATASIZE"
    },
    "4615": {
      "op": "LT"
    },
    "4616": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "4619": {
      "op": "JUMPI"
    },
    "4620": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "4623": {
      "op": "MLOAD"
    },
    "4624": {
      "op": "DUP1"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4627": {
      "op": "SHR"
    },
    "4628": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "4631": {
      "op": "JUMPI"
    },
    "4632": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "4635": {
      "op": "MSTORE"
    },
    "4636": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "4639": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8286,
        8342
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4640": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8286,
        8342
      ],
      "op": "POP",
      "path": "0"
    },
    "4641": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8258,
        8342
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4642": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8258,
        8342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "4645": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8258,
        8342
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4646": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8355,
        8369
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 99,
      "value": "0xA0"
    },
    "4648": {
      "op": "MLOAD"
    },
    "4649": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8355,
        8390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1234"
    },
    "4652": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8355,
        8390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4653": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8373,
        8390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "4655": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8355,
        8390
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4656": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8355,
        8390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1237"
    },
    "4659": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8355,
        8390
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4660": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8355,
        8390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4661": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8355,
        8390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4663": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8355,
        8390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4664": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8354,
        8441
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1252"
    },
    "4667": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8354,
        8441
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4668": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8395,
        8418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4670": {
      "op": "MLOAD"
    },
    "4671": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8354,
        8441
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124B"
    },
    "4674": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8354,
        8441
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4675": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8422,
        8441
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "4678": {
      "op": "MLOAD"
    },
    "4679": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8354,
        8441
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1255"
    },
    "4682": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8354,
        8441
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4683": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8354,
        8441
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4686": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8354,
        8441
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1255"
    },
    "4689": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8354,
        8441
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4690": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8354,
        8441
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4691": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8354,
        8441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4693": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8354,
        8441
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4694": {
      "op": "DUP2"
    },
    "4695": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8347,
        8441
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4696": {
      "fn": "NFT._isApprovedOrOwner",
      "offset": [
        8347,
        8441
      ],
      "op": "POP",
      "path": "0"
    },
    "4697": {
      "op": "JUMP"
    },
    "4698": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9675,
        10075
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4699": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9932,
        9937
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 100,
      "value": "0x40"
    },
    "4701": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9904,
        9937
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4702": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9904,
        9918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4704": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9919,
        9927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4706": {
      "op": "MLOAD"
    },
    "4707": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9904,
        9928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4709": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9904,
        9928
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4710": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9904,
        9928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4712": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9904,
        9928
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4713": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9904,
        9928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4715": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9904,
        9928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4717": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9904,
        9928
      ],
      "op": "SHA3",
      "path": "0"
    },
    "4718": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9904,
        9937
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4719": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9904,
        9937
      ],
      "op": "XOR",
      "path": "0"
    },
    "4720": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9897,
        9937
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "4723": {
      "branch": 101,
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9897,
        9937
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4726": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9965,
        9979
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 102,
      "value": "0x0"
    },
    "4728": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9980,
        9988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4730": {
      "op": "MLOAD"
    },
    "4731": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9965,
        9989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4733": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9965,
        9989
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4734": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9965,
        9989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4736": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9965,
        9989
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4737": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9965,
        9989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4739": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9965,
        9989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4741": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        9965,
        9989
      ],
      "op": "SHA3",
      "path": "0"
    },
    "4742": {
      "op": "SSTORE"
    },
    "4743": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        10039,
        10063
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 103,
      "value": "0x2"
    },
    "4745": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        10064,
        10069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4747": {
      "op": "MLOAD"
    },
    "4748": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        10039,
        10070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4750": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        10039,
        10070
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4751": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        10039,
        10070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4753": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        10039,
        10070
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4754": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        10039,
        10070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4756": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        10039,
        10070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4758": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        10039,
        10070
      ],
      "op": "SHA3",
      "path": "0"
    },
    "4759": {
      "op": "DUP1"
    },
    "4760": {
      "op": "SLOAD"
    },
    "4761": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        10074,
        10075
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4763": {
      "op": "DUP2"
    },
    "4764": {
      "op": "SUB"
    },
    "4765": {
      "op": "DUP2"
    },
    "4766": {
      "op": "DUP2"
    },
    "4767": {
      "op": "GT"
    },
    "4768": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "4771": {
      "op": "JUMPI"
    },
    "4772": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        10039,
        10075
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4773": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        10039,
        10075
      ],
      "op": "POP",
      "path": "0"
    },
    "4774": {
      "op": "DUP2"
    },
    "4775": {
      "op": "SSTORE"
    },
    "4776": {
      "fn": "NFT._removeTokenFrom",
      "offset": [
        10039,
        10075
      ],
      "op": "POP",
      "path": "0"
    },
    "4777": {
      "op": "JUMP"
    },
    "4778": {
      "fn": "NFT._clearApproval",
      "offset": [
        10088,
        10490
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4779": {
      "fn": "NFT._clearApproval",
      "offset": [
        10349,
        10355
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 104,
      "value": "0x40"
    },
    "4781": {
      "fn": "NFT._clearApproval",
      "offset": [
        10321,
        10355
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4782": {
      "fn": "NFT._clearApproval",
      "offset": [
        10321,
        10335
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4784": {
      "fn": "NFT._clearApproval",
      "offset": [
        10336,
        10344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4786": {
      "op": "MLOAD"
    },
    "4787": {
      "fn": "NFT._clearApproval",
      "offset": [
        10321,
        10345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4789": {
      "fn": "NFT._clearApproval",
      "offset": [
        10321,
        10345
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4790": {
      "fn": "NFT._clearApproval",
      "offset": [
        10321,
        10345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4792": {
      "fn": "NFT._clearApproval",
      "offset": [
        10321,
        10345
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4793": {
      "fn": "NFT._clearApproval",
      "offset": [
        10321,
        10345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4795": {
      "fn": "NFT._clearApproval",
      "offset": [
        10321,
        10345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4797": {
      "fn": "NFT._clearApproval",
      "offset": [
        10321,
        10345
      ],
      "op": "SHA3",
      "path": "0"
    },
    "4798": {
      "fn": "NFT._clearApproval",
      "offset": [
        10321,
        10355
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4799": {
      "fn": "NFT._clearApproval",
      "offset": [
        10321,
        10355
      ],
      "op": "XOR",
      "path": "0"
    },
    "4800": {
      "fn": "NFT._clearApproval",
      "offset": [
        10314,
        10355
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "4803": {
      "branch": 105,
      "fn": "NFT._clearApproval",
      "offset": [
        10314,
        10355
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4804": {
      "fn": "NFT._clearApproval",
      "offset": [
        10363,
        10381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4806": {
      "fn": "NFT._clearApproval",
      "offset": [
        10382,
        10390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4808": {
      "op": "MLOAD"
    },
    "4809": {
      "fn": "NFT._clearApproval",
      "offset": [
        10363,
        10391
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4811": {
      "fn": "NFT._clearApproval",
      "offset": [
        10363,
        10391
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4812": {
      "fn": "NFT._clearApproval",
      "offset": [
        10363,
        10391
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4814": {
      "fn": "NFT._clearApproval",
      "offset": [
        10363,
        10391
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4815": {
      "fn": "NFT._clearApproval",
      "offset": [
        10363,
        10391
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4817": {
      "fn": "NFT._clearApproval",
      "offset": [
        10363,
        10391
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4819": {
      "fn": "NFT._clearApproval",
      "offset": [
        10363,
        10391
      ],
      "op": "SHA3",
      "path": "0"
    },
    "4820": {
      "fn": "NFT._clearApproval",
      "offset": [
        10363,
        10409
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4821": {
      "fn": "NFT._clearApproval",
      "offset": [
        10363,
        10409
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4822": {
      "op": "PUSH2",
      "value": "0x12ED"
    },
    "4825": {
      "branch": 106,
      "fn": "NFT._clearApproval",
      "offset": [
        10360,
        10490
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4828": {
      "fn": "NFT._clearApproval",
      "offset": [
        10445,
        10463
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 107,
      "value": "0x1"
    },
    "4830": {
      "fn": "NFT._clearApproval",
      "offset": [
        10464,
        10472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4832": {
      "op": "MLOAD"
    },
    "4833": {
      "fn": "NFT._clearApproval",
      "offset": [
        10445,
        10473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4835": {
      "fn": "NFT._clearApproval",
      "offset": [
        10445,
        10473
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4836": {
      "fn": "NFT._clearApproval",
      "offset": [
        10445,
        10473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4838": {
      "fn": "NFT._clearApproval",
      "offset": [
        10445,
        10473
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4839": {
      "fn": "NFT._clearApproval",
      "offset": [
        10445,
        10473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4841": {
      "fn": "NFT._clearApproval",
      "offset": [
        10445,
        10473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4843": {
      "fn": "NFT._clearApproval",
      "offset": [
        10445,
        10473
      ],
      "op": "SHA3",
      "path": "0"
    },
    "4844": {
      "op": "SSTORE"
    },
    "4845": {
      "fn": "NFT._clearApproval",
      "offset": [
        10088,
        10490
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4846": {
      "op": "JUMP"
    },
    "4847": {
      "fn": "NFT._transferFrom",
      "offset": [
        10503,
        11462
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4848": {
      "fn": "NFT._transferFrom",
      "offset": [
        11050,
        11057
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 108,
      "value": "0x1E0"
    },
    "4851": {
      "op": "MLOAD"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4854": {
      "op": "MSTORE"
    },
    "4855": {
      "fn": "NFT._transferFrom",
      "offset": [
        11059,
        11067
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "4858": {
      "op": "MLOAD"
    },
    "4859": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4861": {
      "op": "MSTORE"
    },
    "4862": {
      "op": "PUSH2",
      "value": "0x138"
    },
    "4865": {
      "fn": "NFT._transferFrom",
      "offset": [
        11026,
        11068
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "4868": {
      "fn": "NFT._transferFrom",
      "offset": [
        11026,
        11068
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1179"
    },
    "4871": {
      "fn": "NFT._transferFrom",
      "jump": "i",
      "offset": [
        11026,
        11068
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4872": {
      "fn": "NFT._transferFrom",
      "offset": [
        11026,
        11068
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4873": {
      "fn": "NFT._transferFrom",
      "offset": [
        11026,
        11068
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "4876": {
      "fn": "NFT._transferFrom",
      "offset": [
        11019,
        11068
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4877": {
      "fn": "NFT._transferFrom",
      "offset": [
        11019,
        11068
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4878": {
      "fn": "NFT._transferFrom",
      "offset": [
        11019,
        11068
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "4881": {
      "branch": 109,
      "fn": "NFT._transferFrom",
      "offset": [
        11019,
        11068
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4882": {
      "fn": "NFT._transferFrom",
      "offset": [
        11122,
        11125
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 110,
      "value": "0x1A0"
    },
    "4885": {
      "fn": "NFT._transferFrom",
      "offset": [
        11122,
        11143
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4886": {
      "fn": "NFT._transferFrom",
      "offset": [
        11122,
        11143
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4887": {
      "fn": "NFT._transferFrom",
      "offset": [
        11115,
        11143
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1391"
    },
    "4890": {
      "branch": 111,
      "fn": "NFT._transferFrom",
      "offset": [
        11115,
        11143
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4891": {
      "fn": "NFT._transferFrom",
      "offset": [
        11233,
        11238
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 112,
      "value": "0x180"
    },
    "4894": {
      "op": "MLOAD"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4897": {
      "op": "MSTORE"
    },
    "4898": {
      "fn": "NFT._transferFrom",
      "offset": [
        11240,
        11248
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "4901": {
      "op": "MLOAD"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4904": {
      "op": "MSTORE"
    },
    "4905": {
      "op": "PUSH2",
      "value": "0x1330"
    },
    "4908": {
      "fn": "NFT._transferFrom",
      "offset": [
        11213,
        11249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12AA"
    },
    "4911": {
      "fn": "NFT._transferFrom",
      "jump": "i",
      "offset": [
        11213,
        11249
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4912": {
      "fn": "NFT._transferFrom",
      "offset": [
        11213,
        11249
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4913": {
      "fn": "NFT._transferFrom",
      "offset": [
        11334,
        11339
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 113,
      "value": "0x180"
    },
    "4916": {
      "op": "MLOAD"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4919": {
      "op": "MSTORE"
    },
    "4920": {
      "fn": "NFT._transferFrom",
      "offset": [
        11341,
        11349
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "4923": {
      "op": "MLOAD"
    },
    "4924": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4926": {
      "op": "MSTORE"
    },
    "4927": {
      "op": "PUSH2",
      "value": "0x1346"
    },
    "4930": {
      "fn": "NFT._transferFrom",
      "offset": [
        11312,
        11350
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125A"
    },
    "4933": {
      "fn": "NFT._transferFrom",
      "jump": "i",
      "offset": [
        11312,
        11350
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4934": {
      "fn": "NFT._transferFrom",
      "offset": [
        11312,
        11350
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4935": {
      "fn": "NFT._transferFrom",
      "offset": [
        11386,
        11389
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 114,
      "value": "0x1A0"
    },
    "4938": {
      "op": "MLOAD"
    },
    "4939": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4941": {
      "op": "MSTORE"
    },
    "4942": {
      "fn": "NFT._transferFrom",
      "offset": [
        11391,
        11399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "4945": {
      "op": "MLOAD"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4948": {
      "op": "MSTORE"
    },
    "4949": {
      "op": "PUSH2",
      "value": "0x135C"
    },
    "4952": {
      "fn": "NFT._transferFrom",
      "offset": [
        11369,
        11400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112C"
    },
    "4955": {
      "fn": "NFT._transferFrom",
      "jump": "i",
      "offset": [
        11369,
        11400
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4956": {
      "fn": "NFT._transferFrom",
      "offset": [
        11369,
        11400
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4957": {
      "fn": "NFT._transferFrom",
      "offset": [
        11453,
        11461
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 115,
      "value": "0x1C0"
    },
    "4960": {
      "fn": "NFT._transferFrom",
      "offset": [
        11428,
        11462
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4961": {
      "fn": "NFT._transferFrom",
      "offset": [
        11448,
        11451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "4964": {
      "fn": "NFT._transferFrom",
      "offset": [
        11428,
        11462
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4965": {
      "fn": "NFT._transferFrom",
      "offset": [
        11441,
        11446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "4968": {
      "fn": "NFT._transferFrom",
      "offset": [
        11428,
        11462
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4969": {
      "fn": "NFT._transferFrom",
      "offset": [
        11428,
        11462
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5002": {
      "fn": "NFT._transferFrom",
      "offset": [
        11428,
        11462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5004": {
      "fn": "NFT._transferFrom",
      "offset": [
        11428,
        11462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "5007": {
      "fn": "NFT._transferFrom",
      "offset": [
        11428,
        11462
      ],
      "op": "LOG4",
      "path": "0"
    },
    "5008": {
      "op": "JUMP"
    },
    "5009": {
      "op": "JUMPDEST"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5012": {
      "op": "DUP1"
    },
    "5013": {
      "op": "REVERT"
    }
  },
  "sha1": "c2733d732e303de2ad93e4064e4bc1ac26b22c0f",
  "source": "# @version ^0.3.7\n# @dev Implementation of ERC-721 non-fungible token standard.\n# @author Ryuya Nakamura (@nrryuya)\n# Modified from: https://github.com/vyperlang/vyper/blob/de74722bf2d8718cca46902be165f9fe0e3641dd/examples/tokens/ERC721.vy\n# Again from: https://github.com/vykintasmak/vyper-nft-example/blob/main/contracts/ERC721_OpenSea.vy\n# https://etherscan.io/address/0xa5ea010a46EaE77bD20EEE754f6D15320358dfD8#code\n\n\nfrom vyper.interfaces import ERC20\nfrom vyper.interfaces import ERC165\nfrom vyper.interfaces import ERC721\n\nimplements: ERC721\nimplements: ERC165\n\n# Interface for the contract called by safeTransferFrom()\ninterface ERC721Receiver:\n    def onERC721Received(\n            _operator: address,\n            _from: address,\n            _tokenId: uint256,\n            _data: Bytes[1024]\n        ) -> bytes4: nonpayable\n\n\n# @dev Emits when ownership of any NFT changes by any mechanism. This event emits when NFTs are\n#      created (`from` == 0) and destroyed (`to` == 0). Exception: during contract creation, any\n#      number of NFTs may be created and assigned without emitting Transfer. At the time of any\n#      transfer, the approved address for that NFT (if any) is reset to none.\n# @param _from Sender of NFT (if address is zero address it indicates token creation).\n# @param _to Receiver of NFT (if address is zero address it indicates token destruction).\n# @param _tokenId The NFT that got transfered.\nevent Transfer:\n    sender: indexed(address)\n    receiver: indexed(address)\n    tokenId: indexed(uint256)\n\n# @dev This emits when the approved address for an NFT is changed or reaffirmed. The zero\n#      address indicates there is no approved address. When a Transfer event emits, this also\n#      indicates that the approved address for that NFT (if any) is reset to none.\n# @param _owner Owner of NFT.\n# @param _approved Address that we are approving.\n# @param _tokenId NFT which we are approving.\nevent Approval:\n    owner: indexed(address)\n    approved: indexed(address)\n    tokenId: indexed(uint256)\n\n# @dev This emits when an operator is enabled or disabled for an owner. The operator can manage\n#      all NFTs of the owner.\n# @param _owner Owner of NFT.\n# @param _operator Address to which we are setting operator rights.\n# @param _approved Status of operator rights(true if operator rights are given and false if\n# revoked).\nevent ApprovalForAll:\n    owner: indexed(address)\n    operator: indexed(address)\n    approved: bool\n\n\n# @dev Mapping from NFT ID to the address that owns it.\nidToOwner: HashMap[uint256, address]\n\n# @dev Mapping from NFT ID to approved address.\nidToApprovals: HashMap[uint256, address]\n\n# @dev Mapping from owner address to count of his tokens.\nownerToNFTokenCount: HashMap[address, uint256]\n\n# @dev Mapping from owner address to mapping of operator addresses.\nownerToOperators: HashMap[address, HashMap[address, bool]]\n\n# @dev Address of minter, who can mint a token\nminter: address\n\n# @dev Hacky helper convert int to string\nIDENTITY_PRECOMPILE: constant(address) = 0x0000000000000000000000000000000000000004\n\n# == Wolvercoin specific NFT fields ==\n# == Wolvercoin specific NFT fields ==\n\n# What grad year the nft collection is for\ngradYear : uint256\n\n# Check for active user and grad year\ninterface ActiveUser:\n    def getCurrentGradYear() -> uint256: view\n    def getIsActiveUser(potentialUser: address) -> bool: view\n    def getIsAdmin(potentialAdmin: address) -> bool: view\n    def getContractWhitelisted(_contractAddress: address) -> bool: view\nactiveUserContract: public(ActiveUser)\n\n\n# Creates a unique ID from the hash to make sure there are no two the same\n# Maps it to a token ID so UniqueHash => TokenId\nuniqueHashesForToken: HashMap[bytes32, uint256]\ntokenURIs: HashMap[uint256, String[64]]\npassword: uint256\n\n\n# Total NFT minted \ntokenCount: public(uint256)\n\n# ERC721 metadata\nname: public(String[64])\nsymbol: public(String[32])\nbaseURI: String[32]\ncontract_uri: String[66]\n\n\n\n# @dev Static list of supported ERC165 interface ids\nSUPPORTED_INTERFACES: constant(bytes4[5]) = [\n    0x01FFC9A7,  # ERC165\n    0x80AC58CD,  # ERC721\n    0x150B7A02,  # ERC721TokenReceiver\n    0x780E9D63,  # ERC721Enumerable\n    0x5B5E139F,  # ERC721Metadata\n]\n\n# For testing this can manually set the 'auctionContract' who will own all the NFTs after mint\n# Eventuall want to update this to automatically mint to the auctionContract or at least approveIt... \n# . Actually should probably only approve the auctionContract\n# Need to only allow 'actuveUsers to mint'\n# Remove password after ActuveUsers works\n# Set password to something basic for start '12345'\n@external\ndef __init__(activeUserAddress: address, _password: uint256):  # activeUserContractAddress: address):\n    \"\"\"\n    @dev Contract constructor.\n    \"\"\"\n    self.name = \"Not-So-Fungible Wolvies\"\n    self.symbol = \"NSFW\"\n    self.minter = msg.sender\n    self.baseURI = \"\"\n    self.tokenCount = 0\n    self.password = _password\n    self.activeUserContract = ActiveUser(activeUserAddress)\n\n\n@pure\n@external\ndef supportsInterface(interface_id: bytes4) -> bool:\n    \"\"\"\n    @notice Query if a contract implements an interface.\n    @dev Interface identification is specified in ERC-165.\n    @param interface_id Bytes4 representing the interface.\n    @return bool True if supported.\n    \"\"\"\n\n    return interface_id in SUPPORTED_INTERFACES\n\n\n@external\ndef safeMintToThisContractWithApprovalToExternalContractUsingPassword(_auctionAddress: address, _tokenMetaDataUri: String[64], _password: uint256) -> uint256:\n\n    assert self.password == _password\n\n    # assert token does not exist uniqueHashesForToken\n    uniqueHash: bytes32 = keccak256(_abi_encode(_tokenMetaDataUri))\n    assert self.uniqueHashesForToken[uniqueHash] == 0, \"token is non-unique\"\n\n    self._addTokenTo(_auctionAddress, self.tokenCount)\n    self._addTokenURI(self.tokenCount, _tokenMetaDataUri)\n    log Transfer(empty(address), _auctionAddress, self.tokenCount)\n    self.tokenCount += 1\n    return self.tokenCount\n\n### VIEW FUNCTIONS ###\n\n@view\n@external\ndef balanceOf(_owner: address) -> uint256:\n    \"\"\"\n    @dev Returns the number of NFTs owned by `_owner`.\n         Throws if `_owner` is the zero address. NFTs assigned to the zero address are considered invalid.\n    @param _owner Address for whom to query the balance.\n    \"\"\"\n    assert _owner != empty(address)\n    return self.ownerToNFTokenCount[_owner]\n\n\n@view\n@external\ndef ownerOf(_tokenId: uint256) -> address:\n    \"\"\"\n    @dev Returns the address of the owner of the NFT.\n         Throws if `_tokenId` is not a valid NFT.\n    @param _tokenId The identifier for an NFT.\n    \"\"\"\n    owner: address = self.idToOwner[_tokenId]\n    # Throws if `_tokenId` is not a valid NFT\n    assert owner != empty(address)\n    return owner\n\n\n@view\n@external\ndef getApproved(_tokenId: uint256) -> address:\n    \"\"\"\n    @dev Get the approved address for a single NFT.\n         Throws if `_tokenId` is not a valid NFT.\n    @param _tokenId ID of the NFT to query the approval of.\n    \"\"\"\n    # Throws if `_tokenId` is not a valid NFT\n    assert self.idToOwner[_tokenId] != empty(address)\n    return self.idToApprovals[_tokenId]\n\n\n@view\n@external\ndef isApprovedForAll(_owner: address, _operator: address) -> bool:\n    \"\"\"\n    @dev Checks if `_operator` is an approved operator for `_owner`.\n    @param _owner The address that owns the NFTs.\n    @param _operator The address that acts on behalf of the owner.\n    \"\"\"\n    return (self.ownerToOperators[_owner])[_operator] or self.activeUserContract.getContractWhitelisted(_operator)\n\n\n### TRANSFER FUNCTION HELPERS ###\n\n@view\n@internal\ndef _isApprovedOrOwner(_spender: address, _tokenId: uint256) -> bool:\n    \"\"\"\n    @dev Returns whether the given spender can transfer a given token ID\n    @param spender address of the spender to query\n    @param tokenId uint256 ID of the token to be transferred\n    @return bool whether the msg.sender is approved for the given token ID,\n        is an operator of the owner, or is the owner of the token\n    \"\"\"\n    owner: address = self.idToOwner[_tokenId]\n    spenderIsOwner: bool = owner == _spender\n    spenderIsApproved: bool = _spender == self.idToApprovals[_tokenId]\n    spenderIsApprovedForAll: bool = (self.ownerToOperators[owner])[_spender]\n    contractWhitelisted: bool = self.activeUserContract.getContractWhitelisted(_spender)\n    return (spenderIsOwner or spenderIsApproved) or spenderIsApprovedForAll or contractWhitelisted\n\n\n@internal\ndef _addTokenTo(_to: address, _tokenId: uint256):\n    \"\"\"\n    @dev Add a NFT to a given address\n         Throws if `_tokenId` is owned by someone.\n    \"\"\"\n    # Throws if `_tokenId` is owned by someone\n    assert self.idToOwner[_tokenId] == empty(address)\n    # Change the owner\n    self.idToOwner[_tokenId] = _to\n    # Change count tracking\n    self.ownerToNFTokenCount[_to] += 1\n\n@external\ndef _editTokenURI(_tokenId: uint256, _tokenURI: String[64]):\n    self.tokenURIs[_tokenId] = _tokenURI\n\n@external\ndef addTokenURI(_tokenId: uint256, _tokenURI: String[64]):\n    self._addTokenURI(_tokenId, _tokenURI)\n\n@view\n@external\ndef getTokenURIByTokenId(_tokenId: uint256) -> String[64]:\n    return self.tokenURIs[_tokenId]\n\n@internal\ndef _addTokenURI(_tokenId: uint256, _tokenURI: String[64]):\n    \"\"\"\n    @dev Add a TokenURI for a given tokenId\n        Throws if `_tokenId` already has a URI.\n    \"\"\"\n    #Throws if `_tokenId` already has a URI\n    assert len(self.tokenURIs[_tokenId]) == 0, \"Token not 0\"\n    # Add the token URI\n    self.tokenURIs[_tokenId] = _tokenURI\n    # Add to uniquie hashes\n    uniqueHash: bytes32 = keccak256(_abi_encode(_tokenURI))\n    self.uniqueHashesForToken[uniqueHash] = _tokenId\n\n\n@internal\ndef _removeTokenFrom(_from: address, _tokenId: uint256):\n    \"\"\"\n    @dev Remove a NFT from a given address\n         Throws if `_from` is not the current owner.\n    \"\"\"\n    # Throws if `_from` is not the current owner\n    assert self.idToOwner[_tokenId] == _from\n    # Change the owner\n    self.idToOwner[_tokenId] = empty(address)\n    # Change count tracking\n    self.ownerToNFTokenCount[_from] -= 1\n\n\n@internal\ndef _clearApproval(_owner: address, _tokenId: uint256):\n    \"\"\"\n    @dev Clear an approval of a given address\n         Throws if `_owner` is not the current owner.\n    \"\"\"\n    # Throws if `_owner` is not the current owner\n    assert self.idToOwner[_tokenId] == _owner\n    if self.idToApprovals[_tokenId] != empty(address):\n        # Reset approvals\n        self.idToApprovals[_tokenId] = empty(address)\n\n\n@internal\ndef _transferFrom(_from: address, _to: address, _tokenId: uint256, _sender: address):\n    \"\"\"\n    @dev Exeute transfer of a NFT.\n         Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n         address for this NFT. (NOTE: `msg.sender` not allowed in private function so pass `_sender`.)\n         Throws if `_to` is the zero address.\n         Throws if `_from` is not the current owner.\n         Throws if `_tokenId` is not a valid NFT.\n    \"\"\"\n    # Check requirements\n    assert self._isApprovedOrOwner(_sender, _tokenId)\n    # Throws if `_to` is the zero address\n    assert _to != empty(address)\n    # Clear approval. Throws if `_from` is not the current owner\n    self._clearApproval(_from, _tokenId)\n    # Remove NFT. Throws if `_tokenId` is not a valid NFT\n    self._removeTokenFrom(_from, _tokenId)\n    # Add NFT\n    self._addTokenTo(_to, _tokenId)\n    # Log the transfer\n    log Transfer(_from, _to, _tokenId)\n\n\n### TRANSFER FUNCTIONS ###\n\n@external\n@payable\ndef transferFrom(_from: address, _to: address, _tokenId: uint256):\n    \"\"\"\n    @dev Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n         address for this NFT.\n         Throws if `_from` is not the current owner.\n         Throws if `_to` is the zero address.\n         Throws if `_tokenId` is not a valid NFT.\n    @notice The caller is responsible to confirm that `_to` is capable of receiving NFTs or else\n            they maybe be permanently lost.\n    @param _from The current owner of the NFT.\n    @param _to The new owner.\n    @param _tokenId The NFT to transfer.\n    \"\"\"\n    self._transferFrom(_from, _to, _tokenId, msg.sender)\n\n\n@external\n@payable\ndef safeTransferFrom(\n        _from: address,\n        _to: address,\n        _tokenId: uint256,\n        _data: Bytes[1024]=b\"\"\n    ):\n    \"\"\"\n    @dev Transfers the ownership of an NFT from one address to another address.\n         Throws unless `msg.sender` is the current owner, an authorized operator, or the\n         approved address for this NFT.\n         Throws if `_from` is not the current owner.\n         Throws if `_to` is the zero address.\n         Throws if `_tokenId` is not a valid NFT.\n         If `_to` is a smart contract, it calls `onERC721Received` on `_to` and throws if\n         the return value is not `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n    @param _from The current owner of the NFT.\n    @param _to The new owner.\n    @param _tokenId The NFT to transfer.\n    @param _data Additional data with no specified format, sent in call to `_to`.\n    \"\"\"\n    self._transferFrom(_from, _to, _tokenId, msg.sender)\n    if _to.is_contract: # check if `_to` is a contract address\n        returnValue: bytes4 = ERC721Receiver(_to).onERC721Received(msg.sender, _from, _tokenId, _data)\n        # Throws if transfer destination is a contract which does not implement 'onERC721Received'\n        assert returnValue == method_id(\"onERC721Received(address,address,uint256,bytes)\", output_type=bytes4)\n\n\n@external\n@payable\ndef approve(_approved: address, _tokenId: uint256):\n    \"\"\"\n    @dev Set or reaffirm the approved address for an NFT. The zero address indicates there is no approved address.\n         Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\n         Throws if `_tokenId` is not a valid NFT. (NOTE: This is not written the EIP)\n         Throws if `_approved` is the current owner. (NOTE: This is not written the EIP)\n    @param _approved Address to be approved for the given NFT ID.\n    @param _tokenId ID of the token to be approved.\n    \"\"\"\n    owner: address = self.idToOwner[_tokenId]\n    # Throws if `_tokenId` is not a valid NFT\n    assert owner != empty(address)\n    # Throws if `_approved` is the current owner\n    assert _approved != owner\n    # Check requirements\n    senderIsOwner: bool = self.idToOwner[_tokenId] == msg.sender\n    senderIsApprovedForAll: bool = (self.ownerToOperators[owner])[msg.sender]\n    assert (senderIsOwner or senderIsApprovedForAll)\n    # Set the approval\n    self.idToApprovals[_tokenId] = _approved\n    log Approval(owner, _approved, _tokenId)\n\n\n@external\ndef setApprovalForAll(_operator: address, _approved: bool):\n    \"\"\"\n    @dev Enables or disables approval for a third party (\"operator\") to manage all of\n         `msg.sender`'s assets. It also emits the ApprovalForAll event.\n         Throws if `_operator` is the `msg.sender`. (NOTE: This is not written the EIP)\n    @notice This works even if sender doesn't own any tokens at the time.\n    @param _operator Address to add to the set of authorized operators.\n    @param _approved True if the operators is approved, false to revoke approval.\n    \"\"\"\n    # Throws if `_operator` is the `msg.sender`\n    assert _operator != msg.sender\n    self.ownerToOperators[msg.sender][_operator] = _approved\n    log ApprovalForAll(msg.sender, _operator, _approved)\n\n\n### MINT & BURN FUNCTIONS ###\n\n@external\ndef mint(_to: address, _tokenURI: String[64]) -> bool:\n    \"\"\"\n    @dev Function to mint tokens\n         Throws if `msg.sender` is not the minter.\n         Throws if `_to` is zero address.\n         Throws if `_tokenId` is owned by someone.\n    @param _to The address that will receive the minted tokens.\n    @param _tokenURI The token uri of next token to mint.\n    @return A boolean that indicates if the operation was successful.\n    \"\"\"\n    # Throws if `msg.sender` is not the minter\n    assert msg.sender == self.minter\n    # Throws if `_to` is zero address\n    assert _to != empty(address)\n    # Add NFT. Throws if `_tokenId` is owned by someone\n    # assert token does not exist uniqueHashesForToken\n    uniqueHash: bytes32 = keccak256(_abi_encode(_tokenURI))\n    assert self.uniqueHashesForToken[uniqueHash] == 0, \"token is non-unique\"\n\n    self._addTokenTo(_to, self.tokenCount)\n    # Writes the tokenURI for the tokenId\n    self._addTokenURI(self.tokenCount, _tokenURI)\n    log Transfer(empty(address), _to, self.tokenCount)\n    # Increase token count\n    self.tokenCount += 1\n    return True\n\n\n@external\ndef burn(_tokenId: uint256):\n    \"\"\"\n    @dev Burns a specific ERC721 token.\n         Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n         address for this NFT.\n         Throws if `_tokenId` is not a valid NFT.\n    @param _tokenId uint256 id of the ERC721 token to be burned.\n    \"\"\"\n    # Check requirements\n    assert self._isApprovedOrOwner(msg.sender, _tokenId)\n    owner: address = self.idToOwner[_tokenId]\n    # Throws if `_tokenId` is not a valid NFT\n    assert owner != empty(address)\n    self._clearApproval(owner, _tokenId)\n    self._removeTokenFrom(owner, _tokenId)\n    log Transfer(owner, empty(address), _tokenId)\n\n\n\n@external\ndef transferMinter(_new_address: address):\n    assert msg.sender == self.minter\n    self.minter = _new_address\n\n\n@external\ndef setBaseURI(_uri: String[32]):\n    # Throws if `msg.sender` is not the minter\n    assert msg.sender == self.minter\n    self.baseURI = _uri\n\n\n@view\n@external\ndef tokenURI(_tokenId: uint256) -> String[160]:\n    return concat(self.baseURI, self.tokenURIs[_tokenId])\n\n@external\n@view\ndef contractURI() -> String[128]:\n    \"\"\"\n    @notice URI for contract level metadata\n    @return Contract URI\n    \"\"\"\n    return self.contract_uri\n\n@external\ndef set_contract_uri(new_uri: String[66]):\n    \"\"\"\n    @notice Admin function to set a new contract URI\n    @param new_uri New URI for the contract\n    \"\"\"\n\n   # assert msg.sender in [self.owner, self.minter]  # dev: Only Admin\n    assert self.minter == msg.sender\n    self.contract_uri = new_uri\n\n\n@external\ndef admin_withdraw_erc20(coin: address, target: address, amount: uint256):\n    \"\"\"\n    @notice Withdraw ERC20 tokens accidentally sent to contract\n    @param coin ERC20 address\n    @param target Address to receive\n    @param amount Wei\n    \"\"\"\n    assert self.minter == msg.sender  # dev: \"Admin Only\"\n    ERC20(coin).transfer(target, amount)\n\n\n\n@external\n@view\ndef totalSupply() -> uint256:\n    \"\"\"\n    @notice Enumerate valid NFTs\n    @dev Throws if `_index` >= `totalSupply()`.\n    @return The token identifier for the `_index`th NFT\n    \"\"\"\n    return self.tokenCount\n\n\n@external\n@view\ndef tokenByIndex(_index: uint256) -> uint256:\n    \"\"\"\n    @notice Enumerate valid NFTs\n    @dev With no burn and direct minting, this is simple\n    @param _index A counter less than `totalSupply()`\n    @return The token identifier for the `_index`th NFT,\n    \"\"\"\n    return _index\n\n\n@external\n@view\ndef tokenOfOwnerByIndex(owner: address, index: uint256) -> uint256:\n    \"\"\"\n    @notice Enumerate NFTs assigned to an owner\n    @dev Throws if `index` >= `balanceOf(owner)` or if `owner` is the zero address, representing invalid NFTs.\n    @param owner An address where we are interested in NFTs owned by them\n    @param index A counter less than `balanceOf(owner)`\n    @return The token identifier for the `index`th NFT assigned to `owner`, (sort order not specified)\n    \"\"\"\n    assert owner != empty(address)\n    return self.ownerToNFTokenCount[owner]\n",
  "sourceMap": "",
  "sourcePath": "contracts/NFT.vy",
  "type": "contract"
}