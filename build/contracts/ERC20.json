{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "name": "_supply",
          "type": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "arg0",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "arg0",
          "type": "address"
        },
        {
          "name": "arg1",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ERC20.vy"
  },
  "ast": {
    "ast_type": "Module",
    "body": [
      {
        "alias": null,
        "ast_type": "ImportFrom",
        "col_offset": 0,
        "end_col_offset": 34,
        "end_lineno": 7,
        "level": 0,
        "lineno": 7,
        "module": "vyper.interfaces",
        "name": "ERC20",
        "node_id": 1,
        "src": "168:34:0"
      },
      {
        "alias": null,
        "ast_type": "ImportFrom",
        "col_offset": 0,
        "end_col_offset": 42,
        "end_lineno": 8,
        "level": 0,
        "lineno": 8,
        "module": "vyper.interfaces",
        "name": "ERC20Detailed",
        "node_id": 3,
        "src": "203:42:0"
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 12,
          "end_col_offset": 17,
          "end_lineno": 10,
          "id": "ERC20",
          "lineno": 10,
          "node_id": 8,
          "src": "259:5:0"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 17,
        "end_lineno": 10,
        "lineno": 10,
        "node_id": 5,
        "simple": 1,
        "src": "247:17:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 10,
          "end_lineno": 10,
          "id": "implements",
          "lineno": 10,
          "node_id": 6,
          "src": "247:10:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 12,
          "end_col_offset": 25,
          "end_lineno": 11,
          "id": "ERC20Detailed",
          "lineno": 11,
          "node_id": 13,
          "src": "277:13:0"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 25,
        "end_lineno": 11,
        "lineno": 11,
        "node_id": 10,
        "simple": 1,
        "src": "265:25:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 10,
          "end_lineno": 11,
          "id": "implements",
          "lineno": 11,
          "node_id": 11,
          "src": "265:10:0"
        },
        "value": null
      },
      {
        "ast_type": "EventDef",
        "body": [
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 27,
                  "end_lineno": 14,
                  "id": "address",
                  "lineno": 14,
                  "node_id": 22,
                  "src": "328:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 12,
              "end_col_offset": 28,
              "end_lineno": 14,
              "func": {
                "ast_type": "Name",
                "col_offset": 12,
                "end_col_offset": 19,
                "end_lineno": 14,
                "id": "indexed",
                "lineno": 14,
                "node_id": 20,
                "src": "320:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 14,
              "node_id": 19,
              "src": "320:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 28,
            "end_lineno": 14,
            "lineno": 14,
            "node_id": 16,
            "simple": 1,
            "src": "312:24:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 10,
              "end_lineno": 14,
              "id": "sender",
              "lineno": 14,
              "node_id": 17,
              "src": "312:6:0"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 22,
                  "end_col_offset": 29,
                  "end_lineno": 15,
                  "id": "address",
                  "lineno": 15,
                  "node_id": 30,
                  "src": "359:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 14,
              "end_col_offset": 30,
              "end_lineno": 15,
              "func": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 21,
                "end_lineno": 15,
                "id": "indexed",
                "lineno": 15,
                "node_id": 28,
                "src": "351:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 15,
              "node_id": 27,
              "src": "351:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 15,
            "lineno": 15,
            "node_id": 24,
            "simple": 1,
            "src": "341:26:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 15,
              "id": "receiver",
              "lineno": 15,
              "node_id": 25,
              "src": "341:8:0"
            },
            "value": null
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 16,
              "id": "uint256",
              "lineno": 16,
              "node_id": 35,
              "src": "379:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 18,
            "end_lineno": 16,
            "lineno": 16,
            "node_id": 32,
            "simple": 1,
            "src": "372:14:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 16,
              "id": "value",
              "lineno": 16,
              "node_id": 33,
              "src": "372:5:0"
            },
            "value": null
          }
        ],
        "col_offset": 0,
        "end_col_offset": 18,
        "end_lineno": 16,
        "lineno": 13,
        "name": "Transfer",
        "node_id": 15,
        "src": "292:94:0"
      },
      {
        "ast_type": "EventDef",
        "body": [
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 26,
                  "end_lineno": 19,
                  "id": "address",
                  "lineno": 19,
                  "node_id": 44,
                  "src": "423:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 11,
              "end_col_offset": 27,
              "end_lineno": 19,
              "func": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 18,
                "end_lineno": 19,
                "id": "indexed",
                "lineno": 19,
                "node_id": 42,
                "src": "415:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 19,
              "node_id": 41,
              "src": "415:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 19,
            "lineno": 19,
            "node_id": 38,
            "simple": 1,
            "src": "408:23:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 19,
              "id": "owner",
              "lineno": 19,
              "node_id": 39,
              "src": "408:5:0"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 28,
                  "end_lineno": 20,
                  "id": "address",
                  "lineno": 20,
                  "node_id": 52,
                  "src": "453:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 13,
              "end_col_offset": 29,
              "end_lineno": 20,
              "func": {
                "ast_type": "Name",
                "col_offset": 13,
                "end_col_offset": 20,
                "end_lineno": 20,
                "id": "indexed",
                "lineno": 20,
                "node_id": 50,
                "src": "445:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 20,
              "node_id": 49,
              "src": "445:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 20,
            "lineno": 20,
            "node_id": 46,
            "simple": 1,
            "src": "436:25:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 11,
              "end_lineno": 20,
              "id": "spender",
              "lineno": 20,
              "node_id": 47,
              "src": "436:7:0"
            },
            "value": null
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 21,
              "id": "uint256",
              "lineno": 21,
              "node_id": 57,
              "src": "473:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 18,
            "end_lineno": 21,
            "lineno": 21,
            "node_id": 54,
            "simple": 1,
            "src": "466:14:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 21,
              "id": "value",
              "lineno": 21,
              "node_id": 55,
              "src": "466:5:0"
            },
            "value": null
          }
        ],
        "col_offset": 0,
        "end_col_offset": 18,
        "end_lineno": 21,
        "lineno": 18,
        "name": "Approval",
        "node_id": 37,
        "src": "388:92:0"
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 13,
          "end_col_offset": 23,
          "end_lineno": 23,
          "lineno": 23,
          "node_id": 65,
          "slice": {
            "ast_type": "Index",
            "col_offset": 13,
            "end_col_offset": 23,
            "end_lineno": 23,
            "lineno": 23,
            "node_id": 70,
            "src": "495:10:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 20,
              "end_col_offset": 22,
              "end_lineno": 23,
              "lineno": 23,
              "node_id": 68,
              "src": "502:2:0",
              "value": 32
            }
          },
          "src": "495:10:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 13,
            "end_col_offset": 19,
            "end_lineno": 23,
            "id": "String",
            "lineno": 23,
            "node_id": 66,
            "src": "495:6:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 24,
        "end_lineno": 23,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 23,
        "node_id": 59,
        "src": "482:24:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 4,
          "end_lineno": 23,
          "id": "name",
          "lineno": 23,
          "node_id": 60,
          "src": "482:4:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 15,
          "end_col_offset": 25,
          "end_lineno": 24,
          "lineno": 24,
          "node_id": 77,
          "slice": {
            "ast_type": "Index",
            "col_offset": 15,
            "end_col_offset": 25,
            "end_lineno": 24,
            "lineno": 24,
            "node_id": 82,
            "src": "522:10:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 22,
              "end_col_offset": 24,
              "end_lineno": 24,
              "lineno": 24,
              "node_id": 80,
              "src": "529:2:0",
              "value": 32
            }
          },
          "src": "522:10:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 15,
            "end_col_offset": 21,
            "end_lineno": 24,
            "id": "String",
            "lineno": 24,
            "node_id": 78,
            "src": "522:6:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 26,
        "end_lineno": 24,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 24,
        "node_id": 71,
        "src": "507:26:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 6,
          "end_lineno": 24,
          "id": "symbol",
          "lineno": 24,
          "node_id": 72,
          "src": "507:6:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 17,
          "end_col_offset": 22,
          "end_lineno": 25,
          "id": "uint8",
          "lineno": 25,
          "node_id": 89,
          "src": "551:5:0"
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 23,
        "end_lineno": 25,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 25,
        "node_id": 83,
        "src": "534:23:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 8,
          "end_lineno": 25,
          "id": "decimals",
          "lineno": 25,
          "node_id": 84,
          "src": "534:8:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 18,
          "end_col_offset": 43,
          "end_lineno": 31,
          "lineno": 31,
          "node_id": 97,
          "slice": {
            "ast_type": "Index",
            "col_offset": 18,
            "end_col_offset": 43,
            "end_lineno": 31,
            "lineno": 31,
            "node_id": 107,
            "src": "922:25:0",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 26,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 33,
                  "end_lineno": 31,
                  "id": "address",
                  "lineno": 31,
                  "node_id": 101,
                  "src": "930:7:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 35,
                  "end_col_offset": 42,
                  "end_lineno": 31,
                  "id": "uint256",
                  "lineno": 31,
                  "node_id": 103,
                  "src": "939:7:0"
                }
              ],
              "end_col_offset": 42,
              "end_lineno": 31,
              "lineno": 31,
              "node_id": 100,
              "src": "930:16:0"
            }
          },
          "src": "922:25:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 18,
            "end_col_offset": 25,
            "end_lineno": 31,
            "id": "HashMap",
            "lineno": 31,
            "node_id": 98,
            "src": "922:7:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 44,
        "end_lineno": 31,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 31,
        "node_id": 91,
        "src": "904:44:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 9,
          "end_lineno": 31,
          "id": "balanceOf",
          "lineno": 31,
          "node_id": 92,
          "src": "904:9:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 18,
          "end_col_offset": 61,
          "end_lineno": 33,
          "lineno": 33,
          "node_id": 114,
          "slice": {
            "ast_type": "Index",
            "col_offset": 18,
            "end_col_offset": 61,
            "end_lineno": 33,
            "lineno": 33,
            "node_id": 133,
            "src": "1060:43:0",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 26,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 33,
                  "end_lineno": 33,
                  "id": "address",
                  "lineno": 33,
                  "node_id": 118,
                  "src": "1068:7:0"
                },
                {
                  "ast_type": "Subscript",
                  "col_offset": 35,
                  "end_col_offset": 60,
                  "end_lineno": 33,
                  "lineno": 33,
                  "node_id": 120,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 35,
                    "end_col_offset": 60,
                    "end_lineno": 33,
                    "lineno": 33,
                    "node_id": 130,
                    "src": "1077:25:0",
                    "value": {
                      "ast_type": "Tuple",
                      "col_offset": 43,
                      "elements": [
                        {
                          "ast_type": "Name",
                          "col_offset": 43,
                          "end_col_offset": 50,
                          "end_lineno": 33,
                          "id": "address",
                          "lineno": 33,
                          "node_id": 124,
                          "src": "1085:7:0"
                        },
                        {
                          "ast_type": "Name",
                          "col_offset": 52,
                          "end_col_offset": 59,
                          "end_lineno": 33,
                          "id": "uint256",
                          "lineno": 33,
                          "node_id": 126,
                          "src": "1094:7:0"
                        }
                      ],
                      "end_col_offset": 59,
                      "end_lineno": 33,
                      "lineno": 33,
                      "node_id": 123,
                      "src": "1085:16:0"
                    }
                  },
                  "src": "1077:25:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 35,
                    "end_col_offset": 42,
                    "end_lineno": 33,
                    "id": "HashMap",
                    "lineno": 33,
                    "node_id": 121,
                    "src": "1077:7:0"
                  }
                }
              ],
              "end_col_offset": 60,
              "end_lineno": 33,
              "lineno": 33,
              "node_id": 117,
              "src": "1068:34:0"
            }
          },
          "src": "1060:43:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 18,
            "end_col_offset": 25,
            "end_lineno": 33,
            "id": "HashMap",
            "lineno": 33,
            "node_id": 115,
            "src": "1060:7:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 62,
        "end_lineno": 33,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 33,
        "node_id": 108,
        "src": "1042:62:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 9,
          "end_lineno": 33,
          "id": "allowance",
          "lineno": 33,
          "node_id": 109,
          "src": "1042:9:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 20,
          "end_col_offset": 27,
          "end_lineno": 35,
          "id": "uint256",
          "lineno": 35,
          "node_id": 140,
          "src": "1216:7:0"
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 28,
        "end_lineno": 35,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 35,
        "node_id": 134,
        "src": "1196:28:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 11,
          "end_lineno": 35,
          "id": "totalSupply",
          "lineno": 35,
          "node_id": 135,
          "src": "1196:11:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 8,
          "end_col_offset": 15,
          "end_lineno": 36,
          "id": "address",
          "lineno": 36,
          "node_id": 145,
          "src": "1233:7:0"
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 15,
        "end_lineno": 36,
        "is_constant": false,
        "is_immutable": false,
        "is_public": false,
        "lineno": 36,
        "node_id": 142,
        "src": "1225:15:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 6,
          "end_lineno": 36,
          "id": "minter",
          "lineno": 36,
          "node_id": 143,
          "src": "1225:6:0"
        },
        "value": null
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 20,
                "end_col_offset": 30,
                "end_lineno": 40,
                "lineno": 40,
                "node_id": 150,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 20,
                  "end_col_offset": 30,
                  "end_lineno": 40,
                  "lineno": 40,
                  "node_id": 155,
                  "src": "1273:10:0",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 27,
                    "end_col_offset": 29,
                    "end_lineno": 40,
                    "lineno": 40,
                    "node_id": 153,
                    "src": "1280:2:0",
                    "value": 32
                  }
                },
                "src": "1273:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 26,
                  "end_lineno": 40,
                  "id": "String",
                  "lineno": 40,
                  "node_id": 151,
                  "src": "1273:6:0"
                }
              },
              "arg": "_name",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 30,
              "end_lineno": 40,
              "lineno": 40,
              "node_id": 149,
              "src": "1266:17:0"
            },
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 41,
                "end_col_offset": 51,
                "end_lineno": 40,
                "lineno": 40,
                "node_id": 157,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 41,
                  "end_col_offset": 51,
                  "end_lineno": 40,
                  "lineno": 40,
                  "node_id": 162,
                  "src": "1294:10:0",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 48,
                    "end_col_offset": 50,
                    "end_lineno": 40,
                    "lineno": 40,
                    "node_id": 160,
                    "src": "1301:2:0",
                    "value": 32
                  }
                },
                "src": "1294:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 41,
                  "end_col_offset": 47,
                  "end_lineno": 40,
                  "id": "String",
                  "lineno": 40,
                  "node_id": 158,
                  "src": "1294:6:0"
                }
              },
              "arg": "_symbol",
              "ast_type": "arg",
              "col_offset": 32,
              "end_col_offset": 51,
              "end_lineno": 40,
              "lineno": 40,
              "node_id": 156,
              "src": "1285:19:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 64,
                "end_col_offset": 69,
                "end_lineno": 40,
                "id": "uint8",
                "lineno": 40,
                "node_id": 164,
                "src": "1317:5:0"
              },
              "arg": "_decimals",
              "ast_type": "arg",
              "col_offset": 53,
              "end_col_offset": 69,
              "end_lineno": 40,
              "lineno": 40,
              "node_id": 163,
              "src": "1306:16:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 80,
                "end_col_offset": 87,
                "end_lineno": 40,
                "id": "uint256",
                "lineno": 40,
                "node_id": 167,
                "src": "1333:7:0"
              },
              "arg": "_supply",
              "ast_type": "arg",
              "col_offset": 71,
              "end_col_offset": 87,
              "end_lineno": 40,
              "lineno": 40,
              "node_id": 166,
              "src": "1324:16:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 87,
          "end_lineno": 40,
          "lineno": 40,
          "node_id": 148,
          "src": "1266:74:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 17,
              "end_col_offset": 24,
              "end_lineno": 41,
              "id": "uint256",
              "lineno": 41,
              "node_id": 172,
              "src": "1360:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 70,
            "end_lineno": 41,
            "lineno": 41,
            "node_id": 169,
            "simple": 1,
            "src": "1347:66:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 15,
              "end_lineno": 41,
              "id": "init_supply",
              "lineno": 41,
              "node_id": 170,
              "src": "1347:11:0"
            },
            "value": {
              "ast_type": "BinOp",
              "col_offset": 27,
              "end_col_offset": 70,
              "end_lineno": 41,
              "left": {
                "ast_type": "Name",
                "col_offset": 27,
                "end_col_offset": 34,
                "end_lineno": 41,
                "id": "_supply",
                "lineno": 41,
                "node_id": 175,
                "src": "1370:7:0"
              },
              "lineno": 41,
              "node_id": 174,
              "op": {
                "ast_type": "Mult",
                "col_offset": 27,
                "end_col_offset": 70,
                "end_lineno": 41,
                "lineno": 41,
                "node_id": 177,
                "src": "1370:43:0"
              },
              "right": {
                "ast_type": "BinOp",
                "col_offset": 37,
                "end_col_offset": 70,
                "end_lineno": 41,
                "left": {
                  "ast_type": "Int",
                  "col_offset": 37,
                  "end_col_offset": 39,
                  "end_lineno": 41,
                  "lineno": 41,
                  "node_id": 179,
                  "src": "1380:2:0",
                  "value": 10
                },
                "lineno": 41,
                "node_id": 178,
                "op": {
                  "ast_type": "Pow",
                  "col_offset": 37,
                  "end_col_offset": 70,
                  "end_lineno": 41,
                  "lineno": 41,
                  "node_id": 180,
                  "src": "1380:33:0"
                },
                "right": {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 51,
                      "end_col_offset": 60,
                      "end_lineno": 41,
                      "id": "_decimals",
                      "lineno": 41,
                      "node_id": 184,
                      "src": "1394:9:0"
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 62,
                      "end_col_offset": 69,
                      "end_lineno": 41,
                      "id": "uint256",
                      "lineno": 41,
                      "node_id": 186,
                      "src": "1405:7:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 43,
                  "end_col_offset": 70,
                  "end_lineno": 41,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 43,
                    "end_col_offset": 50,
                    "end_lineno": 41,
                    "id": "convert",
                    "lineno": 41,
                    "node_id": 182,
                    "src": "1386:7:0"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 41,
                  "node_id": 181,
                  "src": "1386:27:0"
                },
                "src": "1380:33:0"
              },
              "src": "1370:43:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 21,
            "end_lineno": 42,
            "lineno": 42,
            "node_id": 188,
            "src": "1418:17:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "name",
              "col_offset": 4,
              "end_col_offset": 13,
              "end_lineno": 42,
              "lineno": 42,
              "node_id": 189,
              "src": "1418:9:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 42,
                "id": "self",
                "lineno": 42,
                "node_id": 190,
                "src": "1418:4:0"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 16,
              "end_col_offset": 21,
              "end_lineno": 42,
              "id": "_name",
              "lineno": 42,
              "node_id": 193,
              "src": "1430:5:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 25,
            "end_lineno": 43,
            "lineno": 43,
            "node_id": 195,
            "src": "1440:21:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "symbol",
              "col_offset": 4,
              "end_col_offset": 15,
              "end_lineno": 43,
              "lineno": 43,
              "node_id": 196,
              "src": "1440:11:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 43,
                "id": "self",
                "lineno": 43,
                "node_id": 197,
                "src": "1440:4:0"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 18,
              "end_col_offset": 25,
              "end_lineno": 43,
              "id": "_symbol",
              "lineno": 43,
              "node_id": 200,
              "src": "1454:7:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 44,
            "lineno": 44,
            "node_id": 202,
            "src": "1466:25:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "decimals",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 44,
              "lineno": 44,
              "node_id": 203,
              "src": "1466:13:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 44,
                "id": "self",
                "lineno": 44,
                "node_id": 204,
                "src": "1466:4:0"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 20,
              "end_col_offset": 29,
              "end_lineno": 44,
              "id": "_decimals",
              "lineno": 44,
              "node_id": 207,
              "src": "1482:9:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 44,
            "end_lineno": 45,
            "lineno": 45,
            "node_id": 209,
            "src": "1496:40:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 30,
              "end_lineno": 45,
              "lineno": 45,
              "node_id": 210,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 30,
                "end_lineno": 45,
                "lineno": 45,
                "node_id": 220,
                "src": "1496:26:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 19,
                  "end_col_offset": 29,
                  "end_lineno": 45,
                  "lineno": 45,
                  "node_id": 215,
                  "src": "1511:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 22,
                    "end_lineno": 45,
                    "id": "msg",
                    "lineno": 45,
                    "node_id": 216,
                    "src": "1511:3:0"
                  }
                }
              },
              "src": "1496:26:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 45,
                "lineno": 45,
                "node_id": 211,
                "src": "1496:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 45,
                  "id": "self",
                  "lineno": 45,
                  "node_id": 212,
                  "src": "1496:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 33,
              "end_col_offset": 44,
              "end_lineno": 45,
              "id": "init_supply",
              "lineno": 45,
              "node_id": 221,
              "src": "1525:11:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 46,
            "lineno": 46,
            "node_id": 223,
            "src": "1541:30:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "totalSupply",
              "col_offset": 4,
              "end_col_offset": 20,
              "end_lineno": 46,
              "lineno": 46,
              "node_id": 224,
              "src": "1541:16:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 46,
                "id": "self",
                "lineno": 46,
                "node_id": 225,
                "src": "1541:4:0"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 23,
              "end_col_offset": 34,
              "end_lineno": 46,
              "id": "init_supply",
              "lineno": 46,
              "node_id": 228,
              "src": "1560:11:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 28,
            "end_lineno": 47,
            "lineno": 47,
            "node_id": 230,
            "src": "1576:24:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "minter",
              "col_offset": 4,
              "end_col_offset": 15,
              "end_lineno": 47,
              "lineno": 47,
              "node_id": 231,
              "src": "1576:11:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 47,
                "id": "self",
                "lineno": 47,
                "node_id": 232,
                "src": "1576:4:0"
              }
            },
            "value": {
              "ast_type": "Attribute",
              "attr": "sender",
              "col_offset": 18,
              "end_col_offset": 28,
              "end_lineno": 47,
              "lineno": 47,
              "node_id": 235,
              "src": "1590:10:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 18,
                "end_col_offset": 21,
                "end_lineno": 47,
                "id": "msg",
                "lineno": 47,
                "node_id": 236,
                "src": "1590:3:0"
              }
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 57,
            "end_lineno": 48,
            "lineno": 48,
            "node_id": 240,
            "src": "1605:53:0",
            "value": {
              "args": [
                {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 23,
                      "end_col_offset": 30,
                      "end_lineno": 48,
                      "id": "address",
                      "lineno": 48,
                      "node_id": 247,
                      "src": "1624:7:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 17,
                  "end_col_offset": 31,
                  "end_lineno": 48,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 17,
                    "end_col_offset": 22,
                    "end_lineno": 48,
                    "id": "empty",
                    "lineno": 48,
                    "node_id": 245,
                    "src": "1618:5:0"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 48,
                  "node_id": 244,
                  "src": "1618:14:0"
                },
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 33,
                  "end_col_offset": 43,
                  "end_lineno": 48,
                  "lineno": 48,
                  "node_id": 249,
                  "src": "1634:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 33,
                    "end_col_offset": 36,
                    "end_lineno": 48,
                    "id": "msg",
                    "lineno": 48,
                    "node_id": 250,
                    "src": "1634:3:0"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 45,
                  "end_col_offset": 56,
                  "end_lineno": 48,
                  "id": "init_supply",
                  "lineno": 48,
                  "node_id": 253,
                  "src": "1646:11:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 57,
              "end_lineno": 48,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 48,
                "id": "Transfer",
                "lineno": 48,
                "node_id": 242,
                "src": "1609:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 48,
              "node_id": 241,
              "src": "1609:49:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 39,
            "id": "external",
            "lineno": 39,
            "node_id": 255,
            "src": "1244:8:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 57,
        "end_lineno": 48,
        "lineno": 40,
        "name": "__init__",
        "node_id": 147,
        "pos": null,
        "returns": null,
        "src": "1253:405:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 19,
                "end_col_offset": 26,
                "end_lineno": 53,
                "id": "address",
                "lineno": 53,
                "node_id": 260,
                "src": "1691:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 26,
              "end_lineno": 53,
              "lineno": 53,
              "node_id": 259,
              "src": "1685:13:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 37,
                "end_col_offset": 44,
                "end_lineno": 53,
                "id": "uint256",
                "lineno": 53,
                "node_id": 263,
                "src": "1709:7:0"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 28,
              "end_col_offset": 44,
              "end_lineno": 53,
              "lineno": 53,
              "node_id": 262,
              "src": "1700:16:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 44,
          "end_lineno": 53,
          "lineno": 53,
          "node_id": 258,
          "src": "1685:31:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 40,
            "end_lineno": 61,
            "lineno": 61,
            "node_id": 267,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 40,
              "end_lineno": 61,
              "lineno": 61,
              "node_id": 617,
              "src": "2008:36:0"
            },
            "src": "2008:36:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 30,
              "end_lineno": 61,
              "lineno": 61,
              "node_id": 268,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 30,
                "end_lineno": 61,
                "lineno": 61,
                "node_id": 278,
                "src": "2008:26:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 19,
                  "end_col_offset": 29,
                  "end_lineno": 61,
                  "lineno": 61,
                  "node_id": 273,
                  "src": "2023:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 22,
                    "end_lineno": 61,
                    "id": "msg",
                    "lineno": 61,
                    "node_id": 274,
                    "src": "2023:3:0"
                  }
                }
              },
              "src": "2008:26:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 61,
                "lineno": 61,
                "node_id": 269,
                "src": "2008:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 61,
                  "id": "self",
                  "lineno": 61,
                  "node_id": 270,
                  "src": "2008:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 34,
              "end_col_offset": 40,
              "end_lineno": 61,
              "id": "_value",
              "lineno": 61,
              "node_id": 280,
              "src": "2038:6:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 33,
            "end_lineno": 62,
            "lineno": 62,
            "node_id": 282,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 33,
              "end_lineno": 62,
              "lineno": 62,
              "node_id": 490,
              "src": "2049:29:0"
            },
            "src": "2049:29:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 62,
              "lineno": 62,
              "node_id": 283,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 23,
                "end_lineno": 62,
                "lineno": 62,
                "node_id": 291,
                "src": "2049:19:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 22,
                  "end_lineno": 62,
                  "id": "_to",
                  "lineno": 62,
                  "node_id": 288,
                  "src": "2064:3:0"
                }
              },
              "src": "2049:19:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 62,
                "lineno": 62,
                "node_id": 284,
                "src": "2049:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 62,
                  "id": "self",
                  "lineno": 62,
                  "node_id": 285,
                  "src": "2049:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 27,
              "end_col_offset": 33,
              "end_lineno": 62,
              "id": "_value",
              "lineno": 62,
              "node_id": 293,
              "src": "2072:6:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 41,
            "end_lineno": 63,
            "lineno": 63,
            "node_id": 296,
            "src": "2083:37:0",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 17,
                  "end_col_offset": 27,
                  "end_lineno": 63,
                  "lineno": 63,
                  "node_id": 300,
                  "src": "2096:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 17,
                    "end_col_offset": 20,
                    "end_lineno": 63,
                    "id": "msg",
                    "lineno": 63,
                    "node_id": 301,
                    "src": "2096:3:0"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 32,
                  "end_lineno": 63,
                  "id": "_to",
                  "lineno": 63,
                  "node_id": 304,
                  "src": "2108:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 34,
                  "end_col_offset": 40,
                  "end_lineno": 63,
                  "id": "_value",
                  "lineno": 63,
                  "node_id": 306,
                  "src": "2113:6:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 41,
              "end_lineno": 63,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 63,
                "id": "Transfer",
                "lineno": 63,
                "node_id": 298,
                "src": "2087:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 63,
              "node_id": 297,
              "src": "2087:33:0"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 64,
            "lineno": 64,
            "node_id": 308,
            "src": "2125:11:0",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 64,
              "lineno": 64,
              "node_id": 309,
              "src": "2132:4:0",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 52,
            "id": "external",
            "lineno": 52,
            "node_id": 310,
            "src": "1663:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 58,
          "lineno": 54,
          "node_id": 314,
          "src": "1731:150:0",
          "value": "\n    @dev Transfer token for a specified address\n    @param _to The address to transfer to.\n    @param _value The amount to be transferred.\n    "
        },
        "end_col_offset": 15,
        "end_lineno": 64,
        "lineno": 53,
        "name": "transfer",
        "node_id": 257,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 49,
          "end_col_offset": 53,
          "end_lineno": 53,
          "id": "bool",
          "lineno": 53,
          "node_id": 312,
          "src": "1721:4:0"
        },
        "src": "1672:464:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 25,
                "end_col_offset": 32,
                "end_lineno": 68,
                "id": "address",
                "lineno": 68,
                "node_id": 318,
                "src": "2174:7:0"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 17,
              "end_col_offset": 32,
              "end_lineno": 68,
              "lineno": 68,
              "node_id": 317,
              "src": "2166:15:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 40,
                "end_col_offset": 47,
                "end_lineno": 68,
                "id": "address",
                "lineno": 68,
                "node_id": 321,
                "src": "2189:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 34,
              "end_col_offset": 47,
              "end_lineno": 68,
              "lineno": 68,
              "node_id": 320,
              "src": "2183:13:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 58,
                "end_col_offset": 65,
                "end_lineno": 68,
                "id": "uint256",
                "lineno": 68,
                "node_id": 324,
                "src": "2207:7:0"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 49,
              "end_col_offset": 65,
              "end_lineno": 68,
              "lineno": 68,
              "node_id": 323,
              "src": "2198:16:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 17,
          "default": null,
          "defaults": [],
          "end_col_offset": 65,
          "end_lineno": 68,
          "lineno": 68,
          "node_id": 316,
          "src": "2166:48:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 35,
            "end_lineno": 77,
            "lineno": 77,
            "node_id": 328,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 35,
              "end_lineno": 77,
              "lineno": 77,
              "node_id": 617,
              "src": "2627:31:0"
            },
            "src": "2627:31:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 25,
              "end_lineno": 77,
              "lineno": 77,
              "node_id": 329,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 25,
                "end_lineno": 77,
                "lineno": 77,
                "node_id": 337,
                "src": "2627:21:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 24,
                  "end_lineno": 77,
                  "id": "_from",
                  "lineno": 77,
                  "node_id": 334,
                  "src": "2642:5:0"
                }
              },
              "src": "2627:21:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 77,
                "lineno": 77,
                "node_id": 330,
                "src": "2627:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 77,
                  "id": "self",
                  "lineno": 77,
                  "node_id": 331,
                  "src": "2627:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 29,
              "end_col_offset": 35,
              "end_lineno": 77,
              "id": "_value",
              "lineno": 77,
              "node_id": 339,
              "src": "2652:6:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 33,
            "end_lineno": 78,
            "lineno": 78,
            "node_id": 341,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 33,
              "end_lineno": 78,
              "lineno": 78,
              "node_id": 490,
              "src": "2663:29:0"
            },
            "src": "2663:29:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 78,
              "lineno": 78,
              "node_id": 342,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 23,
                "end_lineno": 78,
                "lineno": 78,
                "node_id": 350,
                "src": "2663:19:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 22,
                  "end_lineno": 78,
                  "id": "_to",
                  "lineno": 78,
                  "node_id": 347,
                  "src": "2678:3:0"
                }
              },
              "src": "2663:19:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 78,
                "lineno": 78,
                "node_id": 343,
                "src": "2663:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 78,
                  "id": "self",
                  "lineno": 78,
                  "node_id": 344,
                  "src": "2663:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 27,
              "end_col_offset": 33,
              "end_lineno": 78,
              "id": "_value",
              "lineno": 78,
              "node_id": 352,
              "src": "2686:6:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 47,
            "end_lineno": 81,
            "lineno": 81,
            "node_id": 354,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 47,
              "end_lineno": 81,
              "lineno": 81,
              "node_id": 617,
              "src": "2820:43:0"
            },
            "src": "2820:43:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 37,
              "end_lineno": 81,
              "lineno": 81,
              "node_id": 355,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 37,
                "end_lineno": 81,
                "lineno": 81,
                "node_id": 370,
                "src": "2820:33:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 26,
                  "end_col_offset": 36,
                  "end_lineno": 81,
                  "lineno": 81,
                  "node_id": 365,
                  "src": "2842:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 29,
                    "end_lineno": 81,
                    "id": "msg",
                    "lineno": 81,
                    "node_id": 366,
                    "src": "2842:3:0"
                  }
                }
              },
              "src": "2820:33:0",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 4,
                "end_col_offset": 25,
                "end_lineno": 81,
                "lineno": 81,
                "node_id": 356,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 4,
                  "end_col_offset": 25,
                  "end_lineno": 81,
                  "lineno": 81,
                  "node_id": 364,
                  "src": "2820:21:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 24,
                    "end_lineno": 81,
                    "id": "_from",
                    "lineno": 81,
                    "node_id": 361,
                    "src": "2835:5:0"
                  }
                },
                "src": "2820:21:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "allowance",
                  "col_offset": 4,
                  "end_col_offset": 18,
                  "end_lineno": 81,
                  "lineno": 81,
                  "node_id": 357,
                  "src": "2820:14:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 4,
                    "end_col_offset": 8,
                    "end_lineno": 81,
                    "id": "self",
                    "lineno": 81,
                    "node_id": 358,
                    "src": "2820:4:0"
                  }
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 41,
              "end_col_offset": 47,
              "end_lineno": 81,
              "id": "_value",
              "lineno": 81,
              "node_id": 372,
              "src": "2857:6:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 36,
            "end_lineno": 82,
            "lineno": 82,
            "node_id": 375,
            "src": "2868:32:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 17,
                  "end_col_offset": 22,
                  "end_lineno": 82,
                  "id": "_from",
                  "lineno": 82,
                  "node_id": 379,
                  "src": "2881:5:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 24,
                  "end_col_offset": 27,
                  "end_lineno": 82,
                  "id": "_to",
                  "lineno": 82,
                  "node_id": 381,
                  "src": "2888:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 35,
                  "end_lineno": 82,
                  "id": "_value",
                  "lineno": 82,
                  "node_id": 383,
                  "src": "2893:6:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 36,
              "end_lineno": 82,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 82,
                "id": "Transfer",
                "lineno": 82,
                "node_id": 377,
                "src": "2872:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 82,
              "node_id": 376,
              "src": "2872:28:0"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 83,
            "lineno": 83,
            "node_id": 385,
            "src": "2905:11:0",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 83,
              "lineno": 83,
              "node_id": 386,
              "src": "2912:4:0",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 67,
            "id": "external",
            "lineno": 67,
            "node_id": 387,
            "src": "2140:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 74,
          "lineno": 69,
          "node_id": 391,
          "src": "2229:271:0",
          "value": "\n     @dev Transfer tokens from one address to another.\n     @param _from address The address which you want to send tokens from\n     @param _to address The address which you want to transfer to\n     @param _value uint256 the amount of tokens to be transferred\n    "
        },
        "end_col_offset": 15,
        "end_lineno": 83,
        "lineno": 68,
        "name": "transferFrom",
        "node_id": 315,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 70,
          "end_col_offset": 74,
          "end_lineno": 68,
          "id": "bool",
          "lineno": 68,
          "node_id": 389,
          "src": "2219:4:0"
        },
        "src": "2149:767:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 23,
                "end_col_offset": 30,
                "end_lineno": 87,
                "id": "address",
                "lineno": 87,
                "node_id": 395,
                "src": "2952:7:0"
              },
              "arg": "_spender",
              "ast_type": "arg",
              "col_offset": 12,
              "end_col_offset": 30,
              "end_lineno": 87,
              "lineno": 87,
              "node_id": 394,
              "src": "2941:18:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 41,
                "end_col_offset": 48,
                "end_lineno": 87,
                "id": "uint256",
                "lineno": 87,
                "node_id": 398,
                "src": "2970:7:0"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 32,
              "end_col_offset": 48,
              "end_lineno": 87,
              "lineno": 87,
              "node_id": 397,
              "src": "2961:16:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 12,
          "default": null,
          "defaults": [],
          "end_col_offset": 48,
          "end_lineno": 87,
          "lineno": 87,
          "node_id": 393,
          "src": "2941:36:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 49,
            "end_lineno": 97,
            "lineno": 97,
            "node_id": 402,
            "src": "3623:45:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 40,
              "end_lineno": 97,
              "lineno": 97,
              "node_id": 403,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 40,
                "end_lineno": 97,
                "lineno": 97,
                "node_id": 418,
                "src": "3623:36:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 39,
                  "end_lineno": 97,
                  "id": "_spender",
                  "lineno": 97,
                  "node_id": 415,
                  "src": "3650:8:0"
                }
              },
              "src": "3623:36:0",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 4,
                "end_col_offset": 30,
                "end_lineno": 97,
                "lineno": 97,
                "node_id": 404,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 4,
                  "end_col_offset": 30,
                  "end_lineno": 97,
                  "lineno": 97,
                  "node_id": 414,
                  "src": "3623:26:0",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "sender",
                    "col_offset": 19,
                    "end_col_offset": 29,
                    "end_lineno": 97,
                    "lineno": 97,
                    "node_id": 409,
                    "src": "3638:10:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 19,
                      "end_col_offset": 22,
                      "end_lineno": 97,
                      "id": "msg",
                      "lineno": 97,
                      "node_id": 410,
                      "src": "3638:3:0"
                    }
                  }
                },
                "src": "3623:26:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "allowance",
                  "col_offset": 4,
                  "end_col_offset": 18,
                  "end_lineno": 97,
                  "lineno": 97,
                  "node_id": 405,
                  "src": "3623:14:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 4,
                    "end_col_offset": 8,
                    "end_lineno": 97,
                    "id": "self",
                    "lineno": 97,
                    "node_id": 406,
                    "src": "3623:4:0"
                  }
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 43,
              "end_col_offset": 49,
              "end_lineno": 97,
              "id": "_value",
              "lineno": 97,
              "node_id": 419,
              "src": "3662:6:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 46,
            "end_lineno": 98,
            "lineno": 98,
            "node_id": 422,
            "src": "3673:42:0",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 17,
                  "end_col_offset": 27,
                  "end_lineno": 98,
                  "lineno": 98,
                  "node_id": 426,
                  "src": "3686:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 17,
                    "end_col_offset": 20,
                    "end_lineno": 98,
                    "id": "msg",
                    "lineno": 98,
                    "node_id": 427,
                    "src": "3686:3:0"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 37,
                  "end_lineno": 98,
                  "id": "_spender",
                  "lineno": 98,
                  "node_id": 430,
                  "src": "3698:8:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 39,
                  "end_col_offset": 45,
                  "end_lineno": 98,
                  "id": "_value",
                  "lineno": 98,
                  "node_id": 432,
                  "src": "3708:6:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 46,
              "end_lineno": 98,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 98,
                "id": "Approval",
                "lineno": 98,
                "node_id": 424,
                "src": "3677:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 98,
              "node_id": 423,
              "src": "3677:38:0"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 99,
            "lineno": 99,
            "node_id": 434,
            "src": "3720:11:0",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 99,
              "lineno": 99,
              "node_id": 435,
              "src": "3727:4:0",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 86,
            "id": "external",
            "lineno": 86,
            "node_id": 436,
            "src": "2920:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 96,
          "lineno": 88,
          "node_id": 440,
          "src": "2992:626:0",
          "value": "\n    @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n         Beware that changing an allowance with this method brings the risk that someone may use both the old\n         and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n         race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n         https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    @param _spender The address which will spend the funds.\n    @param _value The amount of tokens to be spent.\n    "
        },
        "end_col_offset": 15,
        "end_lineno": 99,
        "lineno": 87,
        "name": "approve",
        "node_id": 392,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 53,
          "end_col_offset": 57,
          "end_lineno": 87,
          "id": "bool",
          "lineno": 87,
          "node_id": 438,
          "src": "2982:4:0"
        },
        "src": "2929:802:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 21,
                "end_lineno": 103,
                "id": "address",
                "lineno": 103,
                "node_id": 444,
                "src": "3758:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 9,
              "end_col_offset": 21,
              "end_lineno": 103,
              "lineno": 103,
              "node_id": 443,
              "src": "3753:12:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 31,
                "end_col_offset": 38,
                "end_lineno": 103,
                "id": "uint256",
                "lineno": 103,
                "node_id": 447,
                "src": "3775:7:0"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 23,
              "end_col_offset": 38,
              "end_lineno": 103,
              "lineno": 103,
              "node_id": 446,
              "src": "3767:15:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 9,
          "default": null,
          "defaults": [],
          "end_col_offset": 38,
          "end_lineno": 103,
          "lineno": 103,
          "node_id": 442,
          "src": "3753:29:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 36,
            "end_lineno": 111,
            "lineno": 111,
            "msg": null,
            "node_id": 451,
            "src": "4094:32:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 36,
              "end_lineno": 111,
              "left": {
                "ast_type": "Attribute",
                "attr": "sender",
                "col_offset": 11,
                "end_col_offset": 21,
                "end_lineno": 111,
                "lineno": 111,
                "node_id": 453,
                "src": "4101:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 14,
                  "end_lineno": 111,
                  "id": "msg",
                  "lineno": 111,
                  "node_id": 454,
                  "src": "4101:3:0"
                }
              },
              "lineno": 111,
              "node_id": 452,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 36,
                "end_lineno": 111,
                "lineno": 111,
                "node_id": 457,
                "src": "4101:25:0"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "minter",
                "col_offset": 25,
                "end_col_offset": 36,
                "end_lineno": 111,
                "lineno": 111,
                "node_id": 458,
                "src": "4115:11:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 25,
                  "end_col_offset": 29,
                  "end_lineno": 111,
                  "id": "self",
                  "lineno": 111,
                  "node_id": 459,
                  "src": "4115:4:0"
                }
              },
              "src": "4101:25:0"
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 32,
            "end_lineno": 112,
            "lineno": 112,
            "msg": null,
            "node_id": 462,
            "src": "4131:28:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 32,
              "end_lineno": 112,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 14,
                "end_lineno": 112,
                "id": "_to",
                "lineno": 112,
                "node_id": 464,
                "src": "4138:3:0"
              },
              "lineno": 112,
              "node_id": 463,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 32,
                "end_lineno": 112,
                "lineno": 112,
                "node_id": 524,
                "src": "4138:21:0"
              },
              "right": {
                "args": [
                  {
                    "ast_type": "Name",
                    "col_offset": 24,
                    "end_col_offset": 31,
                    "end_lineno": 112,
                    "id": "address",
                    "lineno": 112,
                    "node_id": 470,
                    "src": "4151:7:0"
                  }
                ],
                "ast_type": "Call",
                "col_offset": 18,
                "end_col_offset": 32,
                "end_lineno": 112,
                "func": {
                  "ast_type": "Name",
                  "col_offset": 18,
                  "end_col_offset": 23,
                  "end_lineno": 112,
                  "id": "empty",
                  "lineno": 112,
                  "node_id": 468,
                  "src": "4145:5:0"
                },
                "keyword": null,
                "keywords": [],
                "lineno": 112,
                "node_id": 467,
                "src": "4145:14:0"
              },
              "src": "4138:21:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 113,
            "lineno": 113,
            "node_id": 472,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 30,
              "end_lineno": 113,
              "lineno": 113,
              "node_id": 490,
              "src": "4164:26:0"
            },
            "src": "4164:26:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "totalSupply",
              "col_offset": 4,
              "end_col_offset": 20,
              "end_lineno": 113,
              "lineno": 113,
              "node_id": 473,
              "src": "4164:16:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 113,
                "id": "self",
                "lineno": 113,
                "node_id": 474,
                "src": "4164:4:0"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 24,
              "end_col_offset": 30,
              "end_lineno": 113,
              "id": "_value",
              "lineno": 113,
              "node_id": 478,
              "src": "4184:6:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 33,
            "end_lineno": 114,
            "lineno": 114,
            "node_id": 480,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 33,
              "end_lineno": 114,
              "lineno": 114,
              "node_id": 490,
              "src": "4195:29:0"
            },
            "src": "4195:29:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 114,
              "lineno": 114,
              "node_id": 481,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 23,
                "end_lineno": 114,
                "lineno": 114,
                "node_id": 489,
                "src": "4195:19:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 22,
                  "end_lineno": 114,
                  "id": "_to",
                  "lineno": 114,
                  "node_id": 486,
                  "src": "4210:3:0"
                }
              },
              "src": "4195:19:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 114,
                "lineno": 114,
                "node_id": 482,
                "src": "4195:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 114,
                  "id": "self",
                  "lineno": 114,
                  "node_id": 483,
                  "src": "4195:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 27,
              "end_col_offset": 33,
              "end_lineno": 114,
              "id": "_value",
              "lineno": 114,
              "node_id": 491,
              "src": "4218:6:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 115,
            "lineno": 115,
            "node_id": 494,
            "src": "4229:41:0",
            "value": {
              "args": [
                {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 23,
                      "end_col_offset": 30,
                      "end_lineno": 115,
                      "id": "address",
                      "lineno": 115,
                      "node_id": 501,
                      "src": "4248:7:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 17,
                  "end_col_offset": 31,
                  "end_lineno": 115,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 17,
                    "end_col_offset": 22,
                    "end_lineno": 115,
                    "id": "empty",
                    "lineno": 115,
                    "node_id": 499,
                    "src": "4242:5:0"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 115,
                  "node_id": 498,
                  "src": "4242:14:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 33,
                  "end_col_offset": 36,
                  "end_lineno": 115,
                  "id": "_to",
                  "lineno": 115,
                  "node_id": 503,
                  "src": "4258:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 38,
                  "end_col_offset": 44,
                  "end_lineno": 115,
                  "id": "_value",
                  "lineno": 115,
                  "node_id": 505,
                  "src": "4263:6:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 45,
              "end_lineno": 115,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 115,
                "id": "Transfer",
                "lineno": 115,
                "node_id": 496,
                "src": "4233:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 115,
              "node_id": 495,
              "src": "4233:37:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 102,
            "id": "external",
            "lineno": 102,
            "node_id": 507,
            "src": "3735:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 110,
          "lineno": 104,
          "node_id": 509,
          "src": "3789:300:0",
          "value": "\n    @dev Mint an amount of the token and assigns it to an account.\n         This encapsulates the modification of balances such that the\n         proper events are emitted.\n    @param _to The account that will receive the created tokens.\n    @param _value The amount that will be created.\n    "
        },
        "end_col_offset": 45,
        "end_lineno": 115,
        "lineno": 103,
        "name": "mint",
        "node_id": 441,
        "pos": null,
        "returns": null,
        "src": "3744:526:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 15,
                "end_col_offset": 22,
                "end_lineno": 119,
                "id": "address",
                "lineno": 119,
                "node_id": 513,
                "src": "4298:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 10,
              "end_col_offset": 22,
              "end_lineno": 119,
              "lineno": 119,
              "node_id": 512,
              "src": "4293:12:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 32,
                "end_col_offset": 39,
                "end_lineno": 119,
                "id": "uint256",
                "lineno": 119,
                "node_id": 516,
                "src": "4315:7:0"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 24,
              "end_col_offset": 39,
              "end_lineno": 119,
              "lineno": 119,
              "node_id": 515,
              "src": "4307:15:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 10,
          "default": null,
          "defaults": [],
          "end_col_offset": 39,
          "end_lineno": 119,
          "lineno": 119,
          "node_id": 511,
          "src": "4293:29:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 32,
            "end_lineno": 126,
            "lineno": 126,
            "msg": null,
            "node_id": 520,
            "src": "4541:28:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 32,
              "end_lineno": 126,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 14,
                "end_lineno": 126,
                "id": "_to",
                "lineno": 126,
                "node_id": 522,
                "src": "4548:3:0"
              },
              "lineno": 126,
              "node_id": 521,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 32,
                "end_lineno": 126,
                "lineno": 126,
                "node_id": 524,
                "src": "4548:21:0"
              },
              "right": {
                "args": [
                  {
                    "ast_type": "Name",
                    "col_offset": 24,
                    "end_col_offset": 31,
                    "end_lineno": 126,
                    "id": "address",
                    "lineno": 126,
                    "node_id": 528,
                    "src": "4561:7:0"
                  }
                ],
                "ast_type": "Call",
                "col_offset": 18,
                "end_col_offset": 32,
                "end_lineno": 126,
                "func": {
                  "ast_type": "Name",
                  "col_offset": 18,
                  "end_col_offset": 23,
                  "end_lineno": 126,
                  "id": "empty",
                  "lineno": 126,
                  "node_id": 526,
                  "src": "4555:5:0"
                },
                "keyword": null,
                "keywords": [],
                "lineno": 126,
                "node_id": 525,
                "src": "4555:14:0"
              },
              "src": "4548:21:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 127,
            "lineno": 127,
            "node_id": 530,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 30,
              "end_lineno": 127,
              "lineno": 127,
              "node_id": 617,
              "src": "4574:26:0"
            },
            "src": "4574:26:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "totalSupply",
              "col_offset": 4,
              "end_col_offset": 20,
              "end_lineno": 127,
              "lineno": 127,
              "node_id": 531,
              "src": "4574:16:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 127,
                "id": "self",
                "lineno": 127,
                "node_id": 532,
                "src": "4574:4:0"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 24,
              "end_col_offset": 30,
              "end_lineno": 127,
              "id": "_value",
              "lineno": 127,
              "node_id": 536,
              "src": "4594:6:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 33,
            "end_lineno": 128,
            "lineno": 128,
            "node_id": 538,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 33,
              "end_lineno": 128,
              "lineno": 128,
              "node_id": 617,
              "src": "4605:29:0"
            },
            "src": "4605:29:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 128,
              "lineno": 128,
              "node_id": 539,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 23,
                "end_lineno": 128,
                "lineno": 128,
                "node_id": 547,
                "src": "4605:19:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 22,
                  "end_lineno": 128,
                  "id": "_to",
                  "lineno": 128,
                  "node_id": 544,
                  "src": "4620:3:0"
                }
              },
              "src": "4605:19:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 128,
                "lineno": 128,
                "node_id": 540,
                "src": "4605:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 128,
                  "id": "self",
                  "lineno": 128,
                  "node_id": 541,
                  "src": "4605:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 27,
              "end_col_offset": 33,
              "end_lineno": 128,
              "id": "_value",
              "lineno": 128,
              "node_id": 549,
              "src": "4628:6:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 129,
            "lineno": 129,
            "node_id": 552,
            "src": "4639:41:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 17,
                  "end_col_offset": 20,
                  "end_lineno": 129,
                  "id": "_to",
                  "lineno": 129,
                  "node_id": 556,
                  "src": "4652:3:0"
                },
                {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 28,
                      "end_col_offset": 35,
                      "end_lineno": 129,
                      "id": "address",
                      "lineno": 129,
                      "node_id": 561,
                      "src": "4663:7:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 22,
                  "end_col_offset": 36,
                  "end_lineno": 129,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 22,
                    "end_col_offset": 27,
                    "end_lineno": 129,
                    "id": "empty",
                    "lineno": 129,
                    "node_id": 559,
                    "src": "4657:5:0"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 129,
                  "node_id": 558,
                  "src": "4657:14:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 38,
                  "end_col_offset": 44,
                  "end_lineno": 129,
                  "id": "_value",
                  "lineno": 129,
                  "node_id": 563,
                  "src": "4673:6:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 45,
              "end_lineno": 129,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 129,
                "id": "Transfer",
                "lineno": 129,
                "node_id": 554,
                "src": "4643:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 129,
              "node_id": 553,
              "src": "4643:37:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 118,
            "id": "internal",
            "lineno": 118,
            "node_id": 565,
            "src": "4274:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 125,
          "lineno": 120,
          "node_id": 567,
          "src": "4329:207:0",
          "value": "\n    @dev Internal function that burns an amount of the token of a given\n         account.\n    @param _to The account whose tokens will be burned.\n    @param _value The amount that will be burned.\n    "
        },
        "end_col_offset": 45,
        "end_lineno": 129,
        "lineno": 119,
        "name": "_burn",
        "node_id": 510,
        "pos": null,
        "returns": null,
        "src": "4283:397:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 17,
                "end_col_offset": 24,
                "end_lineno": 133,
                "id": "uint256",
                "lineno": 133,
                "node_id": 571,
                "src": "4710:7:0"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 9,
              "end_col_offset": 24,
              "end_lineno": 133,
              "lineno": 133,
              "node_id": 570,
              "src": "4702:15:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 9,
          "default": null,
          "defaults": [],
          "end_col_offset": 24,
          "end_lineno": 133,
          "lineno": 133,
          "node_id": 569,
          "src": "4702:15:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 138,
            "lineno": 138,
            "node_id": 575,
            "src": "4842:30:0",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 15,
                  "end_col_offset": 25,
                  "end_lineno": 138,
                  "lineno": 138,
                  "node_id": 581,
                  "src": "4853:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 15,
                    "end_col_offset": 18,
                    "end_lineno": 138,
                    "id": "msg",
                    "lineno": 138,
                    "node_id": 582,
                    "src": "4853:3:0"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 27,
                  "end_col_offset": 33,
                  "end_lineno": 138,
                  "id": "_value",
                  "lineno": 138,
                  "node_id": 585,
                  "src": "4865:6:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 34,
              "end_lineno": 138,
              "func": {
                "ast_type": "Attribute",
                "attr": "_burn",
                "col_offset": 4,
                "end_col_offset": 14,
                "end_lineno": 138,
                "lineno": 138,
                "node_id": 577,
                "src": "4842:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 138,
                  "id": "self",
                  "lineno": 138,
                  "node_id": 578,
                  "src": "4842:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 138,
              "node_id": 576,
              "src": "4842:30:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 132,
            "id": "external",
            "lineno": 132,
            "node_id": 587,
            "src": "4684:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 137,
          "lineno": 134,
          "node_id": 589,
          "src": "4724:113:0",
          "value": "\n    @dev Burn an amount of the token of msg.sender.\n    @param _value The amount that will be burned.\n    "
        },
        "end_col_offset": 34,
        "end_lineno": 138,
        "lineno": 133,
        "name": "burn",
        "node_id": 568,
        "pos": null,
        "returns": null,
        "src": "4693:179:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 18,
                "end_col_offset": 25,
                "end_lineno": 142,
                "id": "address",
                "lineno": 142,
                "node_id": 593,
                "src": "4903:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 25,
              "end_lineno": 142,
              "lineno": 142,
              "node_id": 592,
              "src": "4898:12:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 35,
                "end_col_offset": 42,
                "end_lineno": 142,
                "id": "uint256",
                "lineno": 142,
                "node_id": 596,
                "src": "4920:7:0"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 27,
              "end_col_offset": 42,
              "end_lineno": 142,
              "lineno": 142,
              "node_id": 595,
              "src": "4912:15:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 42,
          "end_lineno": 142,
          "lineno": 142,
          "node_id": 591,
          "src": "4898:29:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 148,
            "lineno": 148,
            "node_id": 600,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 45,
              "end_lineno": 148,
              "lineno": 148,
              "node_id": 617,
              "src": "5115:41:0"
            },
            "src": "5115:41:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 35,
              "end_lineno": 148,
              "lineno": 148,
              "node_id": 601,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 35,
                "end_lineno": 148,
                "lineno": 148,
                "node_id": 616,
                "src": "5115:31:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 24,
                  "end_col_offset": 34,
                  "end_lineno": 148,
                  "lineno": 148,
                  "node_id": 611,
                  "src": "5135:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 24,
                    "end_col_offset": 27,
                    "end_lineno": 148,
                    "id": "msg",
                    "lineno": 148,
                    "node_id": 612,
                    "src": "5135:3:0"
                  }
                }
              },
              "src": "5115:31:0",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 4,
                "end_col_offset": 23,
                "end_lineno": 148,
                "lineno": 148,
                "node_id": 602,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 4,
                  "end_col_offset": 23,
                  "end_lineno": 148,
                  "lineno": 148,
                  "node_id": 610,
                  "src": "5115:19:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 22,
                    "end_lineno": 148,
                    "id": "_to",
                    "lineno": 148,
                    "node_id": 607,
                    "src": "5130:3:0"
                  }
                },
                "src": "5115:19:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "allowance",
                  "col_offset": 4,
                  "end_col_offset": 18,
                  "end_lineno": 148,
                  "lineno": 148,
                  "node_id": 603,
                  "src": "5115:14:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 4,
                    "end_col_offset": 8,
                    "end_lineno": 148,
                    "id": "self",
                    "lineno": 148,
                    "node_id": 604,
                    "src": "5115:4:0"
                  }
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 39,
              "end_col_offset": 45,
              "end_lineno": 148,
              "id": "_value",
              "lineno": 148,
              "node_id": 618,
              "src": "5150:6:0"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 149,
            "lineno": 149,
            "node_id": 620,
            "src": "5161:23:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 15,
                  "end_col_offset": 18,
                  "end_lineno": 149,
                  "id": "_to",
                  "lineno": 149,
                  "node_id": 626,
                  "src": "5172:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 26,
                  "end_lineno": 149,
                  "id": "_value",
                  "lineno": 149,
                  "node_id": 628,
                  "src": "5177:6:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 27,
              "end_lineno": 149,
              "func": {
                "ast_type": "Attribute",
                "attr": "_burn",
                "col_offset": 4,
                "end_col_offset": 14,
                "end_lineno": 149,
                "lineno": 149,
                "node_id": 622,
                "src": "5161:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 149,
                  "id": "self",
                  "lineno": 149,
                  "node_id": 623,
                  "src": "5161:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 149,
              "node_id": 621,
              "src": "5161:23:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 141,
            "id": "external",
            "lineno": 141,
            "node_id": 630,
            "src": "4876:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 147,
          "lineno": 143,
          "node_id": 632,
          "src": "4934:176:0",
          "value": "\n    @dev Burn an amount of the token from a given account.\n    @param _to The account whose tokens will be burned.\n    @param _value The amount that will be burned.\n    "
        },
        "end_col_offset": 27,
        "end_lineno": 149,
        "lineno": 142,
        "name": "burnFrom",
        "node_id": 590,
        "pos": null,
        "returns": null,
        "src": "4885:299:0"
      }
    ],
    "col_offset": 0,
    "doc_string": null,
    "end_col_offset": 27,
    "end_lineno": 149,
    "lineno": 1,
    "name": "contracts/ERC20.vy",
    "node_id": 0,
    "src": "0:5184:0"
  },
  "bytecode": "0x60206106d560003960005160206020826106d501600039600051116106d0576020816106d50160003960005180604052602082016020816106d50160003960005160605250505060206106f560003960005160206020826106d501600039600051116106d0576020816106d50160003960005180608052602082016020816106d50160003960005160a05250505060206107156000396000518060081c6106d05760c052346106d057602061073560003960005160c051604d81116106d05780600a0a90508082028115838383041417156106d0579050905060e05260405180600055606051600155506080518060025560a0516003555060c05160045560e05160053360205260005260406000205560e051600755336008553360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60e051610100526020610100a361057361015c61000039610573610000f36003361161000c576104e3565b60003560e01c346105615763a9059cbb81186100bd5760443610610561576004358060a01c610561576040526005336020526000526040600020805460243580820382811161056157905090508155506005604051602052600052604060002080546024358082018281106105615790509050815550604051337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60243560605260206060a3600160605260206060f35b6323b872dd81186101aa5760643610610561576004358060a01c610561576040526024358060a01c610561576060526005604051602052600052604060002080546044358082038281116105615790509050815550600560605160205260005260406000208054604435808201828110610561579050905081555060066040516020526000526040600020803360205260005260406000209050805460443580820382811161056157905090508155506060516040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60443560805260206080a3600160805260206080f35b63095ea7b381186102295760443610610561576004358060a01c610561576040526024356006336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560243560605260206060a3600160605260206060f35b6340c10f1981186102cb5760443610610561576004358060a01c6105615760405260085433186105615760405115610561576007546024358082018281106105615790509050600755600560405160205260005260406000208054602435808201828110610561579050905081555060405160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60243560605260206060a3005b6342966c6881186102f2576024361061056157336040526004356060526102f06104e9565b005b6379cc6790811861035e5760443610610561576004358060a01c6105615760a052600660a05160205260005260406000208033602052600052604060002090508054602435808203828111610561579050905081555060a05160405260243560605261035c6104e9565b005b6306fdde0381186103b65760043610610561576020806040528060400160005480825260208201600154815250508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b6395d89b41811861040e5760043610610561576020806040528060400160025480825260208201600354815250508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b63313ce567811861042d57600436106105615760045460405260206040f35b6370a0823181186104685760243610610561576004358060a01c61056157604052600560405160205260005260406000205460605260206060f35b63dd62ed3e81186104c25760443610610561576004358060a01c610561576040526024358060a01c610561576060526006604051602052600052604060002080606051602052600052604060002090505460805260206080f35b6318160ddd81186104e157600436106105615760075460405260206040f35b505b60006000fd5b60405115610561576007546060518082038281116105615790509050600755600560405160205260005260406000208054606051808203828111610561579050905081555060006040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60605160805260206080a3565b600080fda165767970657283000307000b005b600080fd",
  "bytecodeSha1": "ed18f7176799ef070baeb860f08e3c37f557ffd3",
  "compiler": {
    "evm_version": "istanbul",
    "version": "0.3.7"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20._burn": {
          "23": [
            4541,
            4569,
            true
          ]
        },
        "ERC20.mint": {
          "13": [
            4094,
            4126,
            true
          ],
          "15": [
            4131,
            4159,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "ERC20._burn": {
          "22": [
            4541,
            4569
          ],
          "24": [
            4574,
            4600
          ],
          "25": [
            4605,
            4634
          ],
          "26": [
            4639,
            4680
          ]
        },
        "ERC20.approve": {
          "9": [
            3673,
            3715
          ],
          "10": [
            3623,
            3668
          ],
          "11": [
            3720,
            3731
          ]
        },
        "ERC20.burn": {
          "19": [
            4842,
            4872
          ]
        },
        "ERC20.burnFrom": {
          "20": [
            5115,
            5156
          ],
          "21": [
            5161,
            5184
          ]
        },
        "ERC20.mint": {
          "12": [
            4094,
            4126
          ],
          "14": [
            4131,
            4159
          ],
          "16": [
            4164,
            4190
          ],
          "17": [
            4229,
            4270
          ],
          "18": [
            4195,
            4224
          ]
        },
        "ERC20.transfer": {
          "0": [
            2008,
            2044
          ],
          "1": [
            2083,
            2120
          ],
          "2": [
            2049,
            2078
          ],
          "3": [
            2125,
            2136
          ]
        },
        "ERC20.transferFrom": {
          "4": [
            2627,
            2658
          ],
          "5": [
            2868,
            2900
          ],
          "6": [
            2663,
            2692
          ],
          "7": [
            2820,
            2863
          ],
          "8": [
            2905,
            2916
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "0x6003361161000c576104e3565b60003560e01c346105615763a9059cbb81186100bd5760443610610561576004358060a01c610561576040526005336020526000526040600020805460243580820382811161056157905090508155506005604051602052600052604060002080546024358082018281106105615790509050815550604051337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60243560605260206060a3600160605260206060f35b6323b872dd81186101aa5760643610610561576004358060a01c610561576040526024358060a01c610561576060526005604051602052600052604060002080546044358082038281116105615790509050815550600560605160205260005260406000208054604435808201828110610561579050905081555060066040516020526000526040600020803360205260005260406000209050805460443580820382811161056157905090508155506060516040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60443560805260206080a3600160805260206080f35b63095ea7b381186102295760443610610561576004358060a01c610561576040526024356006336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560243560605260206060a3600160605260206060f35b6340c10f1981186102cb5760443610610561576004358060a01c6105615760405260085433186105615760405115610561576007546024358082018281106105615790509050600755600560405160205260005260406000208054602435808201828110610561579050905081555060405160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60243560605260206060a3005b6342966c6881186102f2576024361061056157336040526004356060526102f06104e9565b005b6379cc6790811861035e5760443610610561576004358060a01c6105615760a052600660a05160205260005260406000208033602052600052604060002090508054602435808203828111610561579050905081555060a05160405260243560605261035c6104e9565b005b6306fdde0381186103b65760043610610561576020806040528060400160005480825260208201600154815250508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b6395d89b41811861040e5760043610610561576020806040528060400160025480825260208201600354815250508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b63313ce567811861042d57600436106105615760045460405260206040f35b6370a0823181186104685760243610610561576004358060a01c61056157604052600560405160205260005260406000205460605260206060f35b63dd62ed3e81186104c25760443610610561576004358060a01c610561576040526024358060a01c610561576060526006604051602052600052604060002080606051602052600052604060002090505460805260206080f35b6318160ddd81186104e157600436106105615760075460405260206040f35b505b60006000fd5b60405115610561576007546060518082038281116105615790509050600755600560405160205260005260406000208054606051808203828111610561579050905081555060006040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60605160805260206080a3565b600080fda165767970657283000307000b",
  "deployedSourceMap": "-1:-1:0:-;;;;:::-;;:::-;:::-;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;1685:13;;2008:14;2023:10;2008:26;;;;;;;:36;;2113:6;-1:-1;;2008:36;-1:-1;2008:36;-1:-1;;;:::-;2008:36;;;;;-1:-1;2008:36;2049:14;2064:3;-1:-1;2049:19;;;;;;;:29;;2113:6;-1:-1;;2049:29;-1:-1;2049:29;-1:-1;;;:::-;2049:29;;;;;-1:-1;2049:29;2108:3;2083:37;2096:10;2083:37;2113:6;-1:-1;;;;2083:37;;2132:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;2166:15;;-1:-1;;;;;;:::-;2183:13;;2627:14;2642:5;-1:-1;2627:21;;;;;;;:31;;2893:6;-1:-1;;2627:31;-1:-1;2627:31;-1:-1;;;:::-;2627:31;;;;;-1:-1;2627:31;2663:14;2678:3;-1:-1;2663:19;;;;;;;:29;;2893:6;-1:-1;;2663:29;-1:-1;2663:29;-1:-1;;;:::-;2663:29;;;;;-1:-1;2663:29;2820:14;2835:5;-1:-1;2820:21;;;;;;;-1:-1;2842:10;-1:-1;;;;;;;2820:33;;:43;;2893:6;-1:-1;;2820:43;-1:-1;2820:43;-1:-1;;;:::-;2820:43;;;;;-1:-1;2820:43;2888:3;2868:32;2881:5;2868:32;;2893:6;-1:-1;;;;2868:32;;2912:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;2941:18;;3708:6;-1:-1;3623:14;3638:10;3623:26;;;;;;;-1:-1;3650:8;-1:-1;;;;;;;;3623:36;;:45;3698:8;3673:42;3686:10;3673:42;3708:6;-1:-1;;;;3673:42;;3727:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;3753:12;;4115:11;4101:25;:10;:25;4094:32;:::-;4138:3;:21;;4131:28;:::-;4164:16;:26;4263:6;-1:-1;;4164:26;-1:-1;4164:26;-1:-1;;;:::-;4164:26;;;;:16;:26;4195:14;4210:3;-1:-1;4195:19;;;;;;;:29;;4263:6;-1:-1;;4195:29;-1:-1;4195:29;-1:-1;;;:::-;4195:29;;;;;-1:-1;4195:29;4258:3;4229:41;;;4263:6;-1:-1;;;;4229:41;;-1:-1;:::-;;;;;:::-;;;;;:::-;4853:10;-1:-1;;4865:6;-1:-1;;;;4842:30;:::i;-1:-1::-;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;4898:12;;5115:14;5130:3;-1:-1;5115:19;;;;;;;-1:-1;5135:10;-1:-1;;;;;;;5115:31;;:41;;5177:6;-1:-1;;5115:41;-1:-1;5115:41;-1:-1;;;:::-;5115:41;;;;;-1:-1;5115:41;5172:3;-1:-1;;;5177:6;-1:-1;;;;5161:23;:::i;-1:-1::-;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;:::-;;;;4283:397::-;4548:3;:21;;4541:28;:::-;4574:16;-1:-1;4594:6;-1:-1;;;;;;;;:::-;;;4574:26;;:16;-1:-1;4605:14;4620:3;-1:-1;4605:19;;;;;;;-1:-1;;4628:6;-1:-1;;;;;;;;:::-;;;4605:29;;-1:-1;;4605:29;4639:41;4652:3;4639:41;;4673:6;-1:-1;;;;4639:41;;-1:-1::-;:::-;;;",
  "language": "Vyper",
  "natspec": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        }
      },
      "burn(uint256)": {
        "details": "Burn an amount of the token of msg.sender.",
        "params": {
          "_value": "The amount that will be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burn an amount of the token from a given account.",
        "params": {
          "_to": "The account whose tokens will be burned.",
          "_value": "The amount that will be burned."
        }
      },
      "mint(address,uint256)": {
        "details": "Mint an amount of the token and assigns it to an account. This encapsulates the modification of balances such that the proper events are emitted.",
        "params": {
          "_to": "The account that will receive the created tokens.",
          "_value": "The amount that will be created."
        }
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another.",
        "params": {
          "_from": "address The address which you want to send tokens from",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "offset": [
    0,
    5184
  ],
  "opcodes": "PUSH1 0x3 CALLDATASIZE GT PUSH2 0x0C JUMPI PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR CALLVALUE PUSH2 0x561 JUMPI PUSH4 0xA959CBB DUP2 XOR PUSH2 0x0BD JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x561 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x561 JUMPI PUSH1 0x40 MSTORE PUSH1 0x5 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP1 DUP3 SUB DUP3 DUP2 GT PUSH2 0x561 JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x5 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP1 DUP3 ADD DUP3 DUP2 LT PUSH2 0x561 JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x40 MLOAD CALLER PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x24 CALLDATALOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 LOG3 PUSH1 0x1 PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 RETURN JUMPDEST PUSH4 0x23B872DD DUP2 XOR PUSH2 0x1AA JUMPI PUSH1 0x64 CALLDATASIZE LT PUSH2 0x561 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x561 JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x561 JUMPI PUSH1 0x60 MSTORE PUSH1 0x5 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x44 CALLDATALOAD DUP1 DUP3 SUB DUP3 DUP2 GT PUSH2 0x561 JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x5 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x44 CALLDATALOAD DUP1 DUP3 ADD DUP3 DUP2 LT PUSH2 0x561 JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP DUP1 SLOAD PUSH1 0x44 CALLDATALOAD DUP1 DUP3 SUB DUP3 DUP2 GT PUSH2 0x561 JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x60 MLOAD PUSH1 0x40 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x44 CALLDATALOAD PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 LOG3 PUSH1 0x1 PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 RETURN JUMPDEST PUSH4 0x95EA7B3 DUP2 XOR PUSH2 0x229 JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x561 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x561 JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x6 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SSTORE PUSH1 0x40 MLOAD CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925 PUSH1 0x24 CALLDATALOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 LOG3 PUSH1 0x1 PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 RETURN JUMPDEST PUSH4 0x40C1F19 DUP2 XOR PUSH2 0x2CB JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x561 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x561 JUMPI PUSH1 0x40 MSTORE PUSH1 0x8 SLOAD CALLER XOR PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD ISZERO PUSH2 0x561 JUMPI PUSH1 0x7 SLOAD PUSH1 0x24 CALLDATALOAD DUP1 DUP3 ADD DUP3 DUP2 LT PUSH2 0x561 JUMPI SWAP1 POP SWAP1 POP PUSH1 0x7 SSTORE PUSH1 0x5 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP1 DUP3 ADD DUP3 DUP2 LT PUSH2 0x561 JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x24 CALLDATALOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 LOG3 STOP JUMPDEST PUSH4 0x42966C68 DUP2 XOR PUSH2 0x2F2 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x561 JUMPI CALLER PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x60 MSTORE PUSH2 0x2F0 PUSH2 0x4E9 JUMP JUMPDEST STOP JUMPDEST PUSH4 0x79CC6790 DUP2 XOR PUSH2 0x35E JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x561 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x561 JUMPI PUSH1 0xA0 MSTORE PUSH1 0x6 PUSH1 0xA0 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP1 DUP3 SUB DUP3 DUP2 GT PUSH2 0x561 JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0xA0 MLOAD PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x60 MSTORE PUSH2 0x35C PUSH2 0x4E9 JUMP JUMPDEST STOP JUMPDEST PUSH4 0x6FDDE3 DUP2 XOR PUSH2 0x3B6 JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x561 JUMPI PUSH1 0x20 DUP1 PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 ADD PUSH1 0x0 SLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x1 SLOAD DUP2 MSTORE POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP DUP2 ADD SWAP1 POP PUSH1 0x40 RETURN JUMPDEST PUSH4 0x95D89B41 DUP2 XOR PUSH2 0x4E JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x561 JUMPI PUSH1 0x20 DUP1 PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 ADD PUSH1 0x2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x3 SLOAD DUP2 MSTORE POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP DUP2 ADD SWAP1 POP PUSH1 0x40 RETURN JUMPDEST PUSH4 0x313CE567 DUP2 XOR PUSH2 0x42D JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x561 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0x70A08231 DUP2 XOR PUSH2 0x468 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x561 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x561 JUMPI PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 RETURN JUMPDEST PUSH4 0xDD62ED3E DUP2 XOR PUSH2 0x4C2 JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x561 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x561 JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x561 JUMPI PUSH1 0x60 MSTORE PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SLOAD PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 RETURN JUMPDEST PUSH4 0x1816DDD DUP2 XOR PUSH2 0x4E1 JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x561 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD ISZERO PUSH2 0x561 JUMPI PUSH1 0x7 SLOAD PUSH1 0x60 MLOAD DUP1 DUP3 SUB DUP3 DUP2 GT PUSH2 0x561 JUMPI SWAP1 POP SWAP1 POP PUSH1 0x7 SSTORE PUSH1 0x5 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x60 MLOAD DUP1 DUP3 SUB DUP3 DUP2 GT PUSH2 0x561 JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x60 MLOAD PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 LOG3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT LOG1 PUSH6 0x767970657283 STOP SUB SMOD STOP SIGNEXTEND",
  "pcMap": {
    "0": {
      "offset": [
        0,
        5184
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2": {
      "op": "CALLDATASIZE"
    },
    "3": {
      "op": "GT"
    },
    "4": {
      "op": "PUSH2",
      "value": "0x0C"
    },
    "7": {
      "op": "JUMPI"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x4E3"
    },
    "11": {
      "op": "JUMP"
    },
    "12": {
      "op": "JUMPDEST"
    },
    "13": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15": {
      "op": "CALLDATALOAD"
    },
    "16": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18": {
      "op": "SHR"
    },
    "19": {
      "op": "CALLVALUE"
    },
    "20": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "23": {
      "op": "JUMPI"
    },
    "24": {
      "op": "PUSH4",
      "value": "0xA959CBB"
    },
    "29": {
      "op": "DUP2"
    },
    "30": {
      "op": "XOR"
    },
    "31": {
      "op": "PUSH2",
      "value": "0x0BD"
    },
    "34": {
      "op": "JUMPI"
    },
    "35": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "37": {
      "op": "CALLDATASIZE"
    },
    "38": {
      "op": "LT"
    },
    "39": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "42": {
      "op": "JUMPI"
    },
    "43": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "45": {
      "op": "CALLDATALOAD"
    },
    "46": {
      "op": "DUP1"
    },
    "47": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "49": {
      "op": "SHR"
    },
    "50": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "53": {
      "op": "JUMPI"
    },
    "54": {
      "fn": "ERC20.transfer",
      "offset": [
        1685,
        1698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "56": {
      "fn": "ERC20.transfer",
      "offset": [
        1685,
        1698
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "57": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2022
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x5"
    },
    "59": {
      "fn": "ERC20.transfer",
      "offset": [
        2023,
        2033
      ],
      "op": "CALLER",
      "path": "0"
    },
    "60": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "62": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2034
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "63": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "65": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2034
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "66": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "68": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "70": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2034
      ],
      "op": "SHA3",
      "path": "0"
    },
    "71": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2044
      ],
      "op": "DUP1",
      "path": "0"
    },
    "72": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2044
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "73": {
      "fn": "ERC20.transfer",
      "offset": [
        2113,
        2119
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x24"
    },
    "75": {
      "op": "CALLDATALOAD"
    },
    "76": {
      "op": "DUP1"
    },
    "77": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2044
      ],
      "op": "DUP3",
      "path": "0"
    },
    "78": {
      "op": "SUB"
    },
    "79": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2044
      ],
      "op": "DUP3",
      "path": "0"
    },
    "80": {
      "op": "DUP2"
    },
    "81": {
      "op": "GT"
    },
    "82": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "85": {
      "op": "JUMPI"
    },
    "86": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2044
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "87": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2044
      ],
      "op": "POP",
      "path": "0"
    },
    "88": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2044
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "89": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2044
      ],
      "op": "POP",
      "path": "0"
    },
    "90": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2044
      ],
      "op": "DUP2",
      "path": "0"
    },
    "91": {
      "op": "SSTORE"
    },
    "92": {
      "fn": "ERC20.transfer",
      "offset": [
        2008,
        2044
      ],
      "op": "POP",
      "path": "0"
    },
    "93": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2063
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x5"
    },
    "95": {
      "fn": "ERC20.transfer",
      "offset": [
        2064,
        2067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "97": {
      "op": "MLOAD"
    },
    "98": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "100": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2068
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "101": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "103": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2068
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "104": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "106": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "108": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2068
      ],
      "op": "SHA3",
      "path": "0"
    },
    "109": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2078
      ],
      "op": "DUP1",
      "path": "0"
    },
    "110": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2078
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "111": {
      "fn": "ERC20.transfer",
      "offset": [
        2113,
        2119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "113": {
      "op": "CALLDATALOAD"
    },
    "114": {
      "op": "DUP1"
    },
    "115": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2078
      ],
      "op": "DUP3",
      "path": "0"
    },
    "116": {
      "op": "ADD"
    },
    "117": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2078
      ],
      "op": "DUP3",
      "path": "0"
    },
    "118": {
      "op": "DUP2"
    },
    "119": {
      "op": "LT"
    },
    "120": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "123": {
      "op": "JUMPI"
    },
    "124": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2078
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "125": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2078
      ],
      "op": "POP",
      "path": "0"
    },
    "126": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2078
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "127": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2078
      ],
      "op": "POP",
      "path": "0"
    },
    "128": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2078
      ],
      "op": "DUP2",
      "path": "0"
    },
    "129": {
      "op": "SSTORE"
    },
    "130": {
      "fn": "ERC20.transfer",
      "offset": [
        2049,
        2078
      ],
      "op": "POP",
      "path": "0"
    },
    "131": {
      "fn": "ERC20.transfer",
      "offset": [
        2108,
        2111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "133": {
      "fn": "ERC20.transfer",
      "offset": [
        2083,
        2120
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "134": {
      "fn": "ERC20.transfer",
      "offset": [
        2096,
        2106
      ],
      "op": "CALLER",
      "path": "0"
    },
    "135": {
      "fn": "ERC20.transfer",
      "offset": [
        2083,
        2120
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "168": {
      "fn": "ERC20.transfer",
      "offset": [
        2113,
        2119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "170": {
      "op": "CALLDATALOAD"
    },
    "171": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "173": {
      "op": "MSTORE"
    },
    "174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "176": {
      "fn": "ERC20.transfer",
      "offset": [
        2083,
        2120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "178": {
      "fn": "ERC20.transfer",
      "offset": [
        2083,
        2120
      ],
      "op": "LOG3",
      "path": "0"
    },
    "179": {
      "fn": "ERC20.transfer",
      "offset": [
        2132,
        2136
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x1"
    },
    "181": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "183": {
      "op": "MSTORE"
    },
    "184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "186": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "188": {
      "op": "RETURN"
    },
    "189": {
      "op": "JUMPDEST"
    },
    "190": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "195": {
      "op": "DUP2"
    },
    "196": {
      "op": "XOR"
    },
    "197": {
      "op": "PUSH2",
      "value": "0x1AA"
    },
    "200": {
      "op": "JUMPI"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "203": {
      "op": "CALLDATASIZE"
    },
    "204": {
      "op": "LT"
    },
    "205": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "208": {
      "op": "JUMPI"
    },
    "209": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "211": {
      "op": "CALLDATALOAD"
    },
    "212": {
      "op": "DUP1"
    },
    "213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "215": {
      "op": "SHR"
    },
    "216": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "219": {
      "op": "JUMPI"
    },
    "220": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2166,
        2181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "222": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2166,
        2181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "223": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "225": {
      "op": "CALLDATALOAD"
    },
    "226": {
      "op": "DUP1"
    },
    "227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "229": {
      "op": "SHR"
    },
    "230": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "233": {
      "op": "JUMPI"
    },
    "234": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2183,
        2196
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "236": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2183,
        2196
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "237": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2641
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x5"
    },
    "239": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2642,
        2647
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "241": {
      "op": "MLOAD"
    },
    "242": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "244": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2648
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "245": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "247": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2648
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "248": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "250": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "252": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2648
      ],
      "op": "SHA3",
      "path": "0"
    },
    "253": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2658
      ],
      "op": "DUP1",
      "path": "0"
    },
    "254": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2658
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "255": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2893,
        2899
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x44"
    },
    "257": {
      "op": "CALLDATALOAD"
    },
    "258": {
      "op": "DUP1"
    },
    "259": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2658
      ],
      "op": "DUP3",
      "path": "0"
    },
    "260": {
      "op": "SUB"
    },
    "261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2658
      ],
      "op": "DUP3",
      "path": "0"
    },
    "262": {
      "op": "DUP2"
    },
    "263": {
      "op": "GT"
    },
    "264": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "267": {
      "op": "JUMPI"
    },
    "268": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2658
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "269": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2658
      ],
      "op": "POP",
      "path": "0"
    },
    "270": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2658
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2658
      ],
      "op": "POP",
      "path": "0"
    },
    "272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2658
      ],
      "op": "DUP2",
      "path": "0"
    },
    "273": {
      "op": "SSTORE"
    },
    "274": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2627,
        2658
      ],
      "op": "POP",
      "path": "0"
    },
    "275": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2677
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x5"
    },
    "277": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2678,
        2681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "279": {
      "op": "MLOAD"
    },
    "280": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "282": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2682
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "283": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "285": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2682
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "286": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "288": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "290": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2682
      ],
      "op": "SHA3",
      "path": "0"
    },
    "291": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2692
      ],
      "op": "DUP1",
      "path": "0"
    },
    "292": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2692
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "293": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2893,
        2899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "295": {
      "op": "CALLDATALOAD"
    },
    "296": {
      "op": "DUP1"
    },
    "297": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2692
      ],
      "op": "DUP3",
      "path": "0"
    },
    "298": {
      "op": "ADD"
    },
    "299": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2692
      ],
      "op": "DUP3",
      "path": "0"
    },
    "300": {
      "op": "DUP2"
    },
    "301": {
      "op": "LT"
    },
    "302": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "305": {
      "op": "JUMPI"
    },
    "306": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2692
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "307": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2692
      ],
      "op": "POP",
      "path": "0"
    },
    "308": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2692
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "309": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2692
      ],
      "op": "POP",
      "path": "0"
    },
    "310": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2692
      ],
      "op": "DUP2",
      "path": "0"
    },
    "311": {
      "op": "SSTORE"
    },
    "312": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2692
      ],
      "op": "POP",
      "path": "0"
    },
    "313": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2834
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x6"
    },
    "315": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2835,
        2840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "317": {
      "op": "MLOAD"
    },
    "318": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "320": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2841
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "321": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "323": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2841
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "324": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "326": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "328": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2841
      ],
      "op": "SHA3",
      "path": "0"
    },
    "329": {
      "op": "DUP1"
    },
    "330": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2842,
        2852
      ],
      "op": "CALLER",
      "path": "0"
    },
    "331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "333": {
      "op": "MSTORE"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "336": {
      "op": "MSTORE"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "341": {
      "op": "SHA3"
    },
    "342": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "343": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2853
      ],
      "op": "POP",
      "path": "0"
    },
    "344": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2863
      ],
      "op": "DUP1",
      "path": "0"
    },
    "345": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2863
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "346": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2893,
        2899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "348": {
      "op": "CALLDATALOAD"
    },
    "349": {
      "op": "DUP1"
    },
    "350": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2863
      ],
      "op": "DUP3",
      "path": "0"
    },
    "351": {
      "op": "SUB"
    },
    "352": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2863
      ],
      "op": "DUP3",
      "path": "0"
    },
    "353": {
      "op": "DUP2"
    },
    "354": {
      "op": "GT"
    },
    "355": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "358": {
      "op": "JUMPI"
    },
    "359": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2863
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "360": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2863
      ],
      "op": "POP",
      "path": "0"
    },
    "361": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2863
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "362": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2863
      ],
      "op": "POP",
      "path": "0"
    },
    "363": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2863
      ],
      "op": "DUP2",
      "path": "0"
    },
    "364": {
      "op": "SSTORE"
    },
    "365": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2863
      ],
      "op": "POP",
      "path": "0"
    },
    "366": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2888,
        2891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "368": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2868,
        2900
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "369": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2881,
        2886
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "371": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2868,
        2900
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "372": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2868,
        2900
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "405": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2893,
        2899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "407": {
      "op": "CALLDATALOAD"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "410": {
      "op": "MSTORE"
    },
    "411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "413": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2868,
        2900
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "415": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2868,
        2900
      ],
      "op": "LOG3",
      "path": "0"
    },
    "416": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2912,
        2916
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x1"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "420": {
      "op": "MSTORE"
    },
    "421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "423": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "425": {
      "op": "RETURN"
    },
    "426": {
      "op": "JUMPDEST"
    },
    "427": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "432": {
      "op": "DUP2"
    },
    "433": {
      "op": "XOR"
    },
    "434": {
      "op": "PUSH2",
      "value": "0x229"
    },
    "437": {
      "op": "JUMPI"
    },
    "438": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "440": {
      "op": "CALLDATASIZE"
    },
    "441": {
      "op": "LT"
    },
    "442": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "445": {
      "op": "JUMPI"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "448": {
      "op": "CALLDATALOAD"
    },
    "449": {
      "op": "DUP1"
    },
    "450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "452": {
      "op": "SHR"
    },
    "453": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "456": {
      "op": "JUMPI"
    },
    "457": {
      "fn": "ERC20.approve",
      "offset": [
        2941,
        2959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "459": {
      "fn": "ERC20.approve",
      "offset": [
        2941,
        2959
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "460": {
      "fn": "ERC20.approve",
      "offset": [
        3708,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x24"
    },
    "462": {
      "op": "CALLDATALOAD"
    },
    "463": {
      "fn": "ERC20.approve",
      "offset": [
        3623,
        3637
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x6"
    },
    "465": {
      "fn": "ERC20.approve",
      "offset": [
        3638,
        3648
      ],
      "op": "CALLER",
      "path": "0"
    },
    "466": {
      "fn": "ERC20.approve",
      "offset": [
        3623,
        3649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "468": {
      "fn": "ERC20.approve",
      "offset": [
        3623,
        3649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "469": {
      "fn": "ERC20.approve",
      "offset": [
        3623,
        3649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "471": {
      "fn": "ERC20.approve",
      "offset": [
        3623,
        3649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "472": {
      "fn": "ERC20.approve",
      "offset": [
        3623,
        3649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "474": {
      "fn": "ERC20.approve",
      "offset": [
        3623,
        3649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "476": {
      "fn": "ERC20.approve",
      "offset": [
        3623,
        3649
      ],
      "op": "SHA3",
      "path": "0"
    },
    "477": {
      "op": "DUP1"
    },
    "478": {
      "fn": "ERC20.approve",
      "offset": [
        3650,
        3658
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "480": {
      "op": "MLOAD"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "483": {
      "op": "MSTORE"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "486": {
      "op": "MSTORE"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "491": {
      "op": "SHA3"
    },
    "492": {
      "fn": "ERC20.approve",
      "offset": [
        3623,
        3659
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "493": {
      "fn": "ERC20.approve",
      "offset": [
        3623,
        3659
      ],
      "op": "POP",
      "path": "0"
    },
    "494": {
      "fn": "ERC20.approve",
      "offset": [
        3623,
        3668
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "495": {
      "fn": "ERC20.approve",
      "offset": [
        3698,
        3706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "497": {
      "fn": "ERC20.approve",
      "offset": [
        3673,
        3715
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "498": {
      "fn": "ERC20.approve",
      "offset": [
        3686,
        3696
      ],
      "op": "CALLER",
      "path": "0"
    },
    "499": {
      "fn": "ERC20.approve",
      "offset": [
        3673,
        3715
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925"
    },
    "532": {
      "fn": "ERC20.approve",
      "offset": [
        3708,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "534": {
      "op": "CALLDATALOAD"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "537": {
      "op": "MSTORE"
    },
    "538": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "540": {
      "fn": "ERC20.approve",
      "offset": [
        3673,
        3715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "542": {
      "fn": "ERC20.approve",
      "offset": [
        3673,
        3715
      ],
      "op": "LOG3",
      "path": "0"
    },
    "543": {
      "fn": "ERC20.approve",
      "offset": [
        3727,
        3731
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "547": {
      "op": "MSTORE"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "552": {
      "op": "RETURN"
    },
    "553": {
      "op": "JUMPDEST"
    },
    "554": {
      "op": "PUSH4",
      "value": "0x40C1F19"
    },
    "559": {
      "op": "DUP2"
    },
    "560": {
      "op": "XOR"
    },
    "561": {
      "op": "PUSH2",
      "value": "0x2CB"
    },
    "564": {
      "op": "JUMPI"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "567": {
      "op": "CALLDATASIZE"
    },
    "568": {
      "op": "LT"
    },
    "569": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "572": {
      "op": "JUMPI"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "575": {
      "op": "CALLDATALOAD"
    },
    "576": {
      "op": "DUP1"
    },
    "577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "579": {
      "op": "SHR"
    },
    "580": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "583": {
      "op": "JUMPI"
    },
    "584": {
      "fn": "ERC20.mint",
      "offset": [
        3753,
        3765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "586": {
      "fn": "ERC20.mint",
      "offset": [
        3753,
        3765
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "587": {
      "fn": "ERC20.mint",
      "offset": [
        4115,
        4126
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x8"
    },
    "589": {
      "fn": "ERC20.mint",
      "offset": [
        4101,
        4126
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "590": {
      "fn": "ERC20.mint",
      "offset": [
        4101,
        4111
      ],
      "op": "CALLER",
      "path": "0"
    },
    "591": {
      "fn": "ERC20.mint",
      "offset": [
        4101,
        4126
      ],
      "op": "XOR",
      "path": "0"
    },
    "592": {
      "fn": "ERC20.mint",
      "offset": [
        4094,
        4126
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x561"
    },
    "595": {
      "branch": 13,
      "fn": "ERC20.mint",
      "offset": [
        4094,
        4126
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "596": {
      "fn": "ERC20.mint",
      "offset": [
        4138,
        4141
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x40"
    },
    "598": {
      "fn": "ERC20.mint",
      "offset": [
        4138,
        4159
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "599": {
      "fn": "ERC20.mint",
      "offset": [
        4138,
        4159
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "600": {
      "fn": "ERC20.mint",
      "offset": [
        4131,
        4159
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x561"
    },
    "603": {
      "branch": 15,
      "fn": "ERC20.mint",
      "offset": [
        4131,
        4159
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "604": {
      "fn": "ERC20.mint",
      "offset": [
        4164,
        4180
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x7"
    },
    "606": {
      "fn": "ERC20.mint",
      "offset": [
        4164,
        4190
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "607": {
      "fn": "ERC20.mint",
      "offset": [
        4263,
        4269
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x24"
    },
    "609": {
      "op": "CALLDATALOAD"
    },
    "610": {
      "op": "DUP1"
    },
    "611": {
      "fn": "ERC20.mint",
      "offset": [
        4164,
        4190
      ],
      "op": "DUP3",
      "path": "0"
    },
    "612": {
      "op": "ADD"
    },
    "613": {
      "fn": "ERC20.mint",
      "offset": [
        4164,
        4190
      ],
      "op": "DUP3",
      "path": "0"
    },
    "614": {
      "op": "DUP2"
    },
    "615": {
      "op": "LT"
    },
    "616": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "619": {
      "op": "JUMPI"
    },
    "620": {
      "fn": "ERC20.mint",
      "offset": [
        4164,
        4190
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "621": {
      "fn": "ERC20.mint",
      "offset": [
        4164,
        4190
      ],
      "op": "POP",
      "path": "0"
    },
    "622": {
      "fn": "ERC20.mint",
      "offset": [
        4164,
        4190
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "623": {
      "fn": "ERC20.mint",
      "offset": [
        4164,
        4190
      ],
      "op": "POP",
      "path": "0"
    },
    "624": {
      "fn": "ERC20.mint",
      "offset": [
        4164,
        4180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "626": {
      "fn": "ERC20.mint",
      "offset": [
        4164,
        4190
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "627": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4209
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x5"
    },
    "629": {
      "fn": "ERC20.mint",
      "offset": [
        4210,
        4213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "631": {
      "op": "MLOAD"
    },
    "632": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4214
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "634": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4214
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "635": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4214
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "637": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4214
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "638": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4214
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "640": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4214
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "642": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4214
      ],
      "op": "SHA3",
      "path": "0"
    },
    "643": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4224
      ],
      "op": "DUP1",
      "path": "0"
    },
    "644": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4224
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "645": {
      "fn": "ERC20.mint",
      "offset": [
        4263,
        4269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "647": {
      "op": "CALLDATALOAD"
    },
    "648": {
      "op": "DUP1"
    },
    "649": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4224
      ],
      "op": "DUP3",
      "path": "0"
    },
    "650": {
      "op": "ADD"
    },
    "651": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4224
      ],
      "op": "DUP3",
      "path": "0"
    },
    "652": {
      "op": "DUP2"
    },
    "653": {
      "op": "LT"
    },
    "654": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "657": {
      "op": "JUMPI"
    },
    "658": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4224
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "659": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4224
      ],
      "op": "POP",
      "path": "0"
    },
    "660": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4224
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "661": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4224
      ],
      "op": "POP",
      "path": "0"
    },
    "662": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4224
      ],
      "op": "DUP2",
      "path": "0"
    },
    "663": {
      "op": "SSTORE"
    },
    "664": {
      "fn": "ERC20.mint",
      "offset": [
        4195,
        4224
      ],
      "op": "POP",
      "path": "0"
    },
    "665": {
      "fn": "ERC20.mint",
      "offset": [
        4258,
        4261
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "667": {
      "fn": "ERC20.mint",
      "offset": [
        4229,
        4270
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "668": {
      "fn": "ERC20.mint",
      "offset": [
        4229,
        4270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "670": {
      "fn": "ERC20.mint",
      "offset": [
        4229,
        4270
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "703": {
      "fn": "ERC20.mint",
      "offset": [
        4263,
        4269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "705": {
      "op": "CALLDATALOAD"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "708": {
      "op": "MSTORE"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "711": {
      "fn": "ERC20.mint",
      "offset": [
        4229,
        4270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "713": {
      "fn": "ERC20.mint",
      "offset": [
        4229,
        4270
      ],
      "op": "LOG3",
      "path": "0"
    },
    "714": {
      "op": "STOP"
    },
    "715": {
      "op": "JUMPDEST"
    },
    "716": {
      "op": "PUSH4",
      "value": "0x42966C68"
    },
    "721": {
      "op": "DUP2"
    },
    "722": {
      "op": "XOR"
    },
    "723": {
      "op": "PUSH2",
      "value": "0x2F2"
    },
    "726": {
      "op": "JUMPI"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "729": {
      "op": "CALLDATASIZE"
    },
    "730": {
      "op": "LT"
    },
    "731": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "734": {
      "op": "JUMPI"
    },
    "735": {
      "fn": "ERC20.burn",
      "offset": [
        4853,
        4863
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 19
    },
    "736": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "738": {
      "op": "MSTORE"
    },
    "739": {
      "fn": "ERC20.burn",
      "offset": [
        4865,
        4871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "741": {
      "op": "CALLDATALOAD"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "744": {
      "op": "MSTORE"
    },
    "745": {
      "op": "PUSH2",
      "value": "0x2F0"
    },
    "748": {
      "fn": "ERC20.burn",
      "offset": [
        4842,
        4872
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E9"
    },
    "751": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        4842,
        4872
      ],
      "op": "JUMP",
      "path": "0"
    },
    "752": {
      "op": "JUMPDEST"
    },
    "753": {
      "op": "STOP"
    },
    "754": {
      "op": "JUMPDEST"
    },
    "755": {
      "op": "PUSH4",
      "value": "0x79CC6790"
    },
    "760": {
      "op": "DUP2"
    },
    "761": {
      "op": "XOR"
    },
    "762": {
      "op": "PUSH2",
      "value": "0x35E"
    },
    "765": {
      "op": "JUMPI"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "768": {
      "op": "CALLDATASIZE"
    },
    "769": {
      "op": "LT"
    },
    "770": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "773": {
      "op": "JUMPI"
    },
    "774": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "776": {
      "op": "CALLDATALOAD"
    },
    "777": {
      "op": "DUP1"
    },
    "778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "780": {
      "op": "SHR"
    },
    "781": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "784": {
      "op": "JUMPI"
    },
    "785": {
      "fn": "ERC20.burnFrom",
      "offset": [
        4898,
        4910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "787": {
      "fn": "ERC20.burnFrom",
      "offset": [
        4898,
        4910
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "788": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5129
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x6"
    },
    "790": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5130,
        5133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "792": {
      "op": "MLOAD"
    },
    "793": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "795": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5134
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "796": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "798": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5134
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "799": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "801": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "803": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5134
      ],
      "op": "SHA3",
      "path": "0"
    },
    "804": {
      "op": "DUP1"
    },
    "805": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5135,
        5145
      ],
      "op": "CALLER",
      "path": "0"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "808": {
      "op": "MSTORE"
    },
    "809": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "811": {
      "op": "MSTORE"
    },
    "812": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "816": {
      "op": "SHA3"
    },
    "817": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5146
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "818": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5146
      ],
      "op": "POP",
      "path": "0"
    },
    "819": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5156
      ],
      "op": "DUP1",
      "path": "0"
    },
    "820": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5156
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "821": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5177,
        5183
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x24"
    },
    "823": {
      "op": "CALLDATALOAD"
    },
    "824": {
      "op": "DUP1"
    },
    "825": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5156
      ],
      "op": "DUP3",
      "path": "0"
    },
    "826": {
      "op": "SUB"
    },
    "827": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5156
      ],
      "op": "DUP3",
      "path": "0"
    },
    "828": {
      "op": "DUP2"
    },
    "829": {
      "op": "GT"
    },
    "830": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "833": {
      "op": "JUMPI"
    },
    "834": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5156
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "835": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5156
      ],
      "op": "POP",
      "path": "0"
    },
    "836": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5156
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "837": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5156
      ],
      "op": "POP",
      "path": "0"
    },
    "838": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5156
      ],
      "op": "DUP2",
      "path": "0"
    },
    "839": {
      "op": "SSTORE"
    },
    "840": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5115,
        5156
      ],
      "op": "POP",
      "path": "0"
    },
    "841": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5172,
        5175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "843": {
      "op": "MLOAD"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "846": {
      "op": "MSTORE"
    },
    "847": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5177,
        5183
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "849": {
      "op": "CALLDATALOAD"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "852": {
      "op": "MSTORE"
    },
    "853": {
      "op": "PUSH2",
      "value": "0x35C"
    },
    "856": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5161,
        5184
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E9"
    },
    "859": {
      "fn": "ERC20.burnFrom",
      "jump": "i",
      "offset": [
        5161,
        5184
      ],
      "op": "JUMP",
      "path": "0"
    },
    "860": {
      "op": "JUMPDEST"
    },
    "861": {
      "op": "STOP"
    },
    "862": {
      "op": "JUMPDEST"
    },
    "863": {
      "op": "PUSH4",
      "value": "0x6FDDE3"
    },
    "868": {
      "op": "DUP2"
    },
    "869": {
      "op": "XOR"
    },
    "870": {
      "op": "PUSH2",
      "value": "0x3B6"
    },
    "873": {
      "op": "JUMPI"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "876": {
      "op": "CALLDATASIZE"
    },
    "877": {
      "op": "LT"
    },
    "878": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "881": {
      "op": "JUMPI"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "884": {
      "op": "DUP1"
    },
    "885": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "887": {
      "op": "MSTORE"
    },
    "888": {
      "op": "DUP1"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "891": {
      "op": "ADD"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "894": {
      "op": "SLOAD"
    },
    "895": {
      "op": "DUP1"
    },
    "896": {
      "op": "DUP3"
    },
    "897": {
      "op": "MSTORE"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "900": {
      "op": "DUP3"
    },
    "901": {
      "op": "ADD"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "904": {
      "op": "SLOAD"
    },
    "905": {
      "op": "DUP2"
    },
    "906": {
      "op": "MSTORE"
    },
    "907": {
      "op": "POP"
    },
    "908": {
      "op": "POP"
    },
    "909": {
      "op": "DUP1"
    },
    "910": {
      "op": "MLOAD"
    },
    "911": {
      "op": "DUP1"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "914": {
      "op": "DUP4"
    },
    "915": {
      "op": "ADD"
    },
    "916": {
      "op": "ADD"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "919": {
      "op": "DUP3"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "922": {
      "op": "SUB"
    },
    "923": {
      "op": "AND"
    },
    "924": {
      "op": "CALLDATASIZE"
    },
    "925": {
      "op": "DUP3"
    },
    "926": {
      "op": "CALLDATACOPY"
    },
    "927": {
      "op": "POP"
    },
    "928": {
      "op": "POP"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "931": {
      "op": "NOT"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "934": {
      "op": "DUP3"
    },
    "935": {
      "op": "MLOAD"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "938": {
      "op": "ADD"
    },
    "939": {
      "op": "ADD"
    },
    "940": {
      "op": "AND"
    },
    "941": {
      "op": "SWAP1"
    },
    "942": {
      "op": "POP"
    },
    "943": {
      "op": "DUP2"
    },
    "944": {
      "op": "ADD"
    },
    "945": {
      "op": "SWAP1"
    },
    "946": {
      "op": "POP"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "949": {
      "op": "RETURN"
    },
    "950": {
      "op": "JUMPDEST"
    },
    "951": {
      "op": "PUSH4",
      "value": "0x95D89B41"
    },
    "956": {
      "op": "DUP2"
    },
    "957": {
      "op": "XOR"
    },
    "958": {
      "op": "PUSH2",
      "value": "0x4E"
    },
    "961": {
      "op": "JUMPI"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "964": {
      "op": "CALLDATASIZE"
    },
    "965": {
      "op": "LT"
    },
    "966": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "969": {
      "op": "JUMPI"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "972": {
      "op": "DUP1"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "975": {
      "op": "MSTORE"
    },
    "976": {
      "op": "DUP1"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "979": {
      "op": "ADD"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "982": {
      "op": "SLOAD"
    },
    "983": {
      "op": "DUP1"
    },
    "984": {
      "op": "DUP3"
    },
    "985": {
      "op": "MSTORE"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "988": {
      "op": "DUP3"
    },
    "989": {
      "op": "ADD"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "992": {
      "op": "SLOAD"
    },
    "993": {
      "op": "DUP2"
    },
    "994": {
      "op": "MSTORE"
    },
    "995": {
      "op": "POP"
    },
    "996": {
      "op": "POP"
    },
    "997": {
      "op": "DUP1"
    },
    "998": {
      "op": "MLOAD"
    },
    "999": {
      "op": "DUP1"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1002": {
      "op": "DUP4"
    },
    "1003": {
      "op": "ADD"
    },
    "1004": {
      "op": "ADD"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1007": {
      "op": "DUP3"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1010": {
      "op": "SUB"
    },
    "1011": {
      "op": "AND"
    },
    "1012": {
      "op": "CALLDATASIZE"
    },
    "1013": {
      "op": "DUP3"
    },
    "1014": {
      "op": "CALLDATACOPY"
    },
    "1015": {
      "op": "POP"
    },
    "1016": {
      "op": "POP"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1019": {
      "op": "NOT"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1022": {
      "op": "DUP3"
    },
    "1023": {
      "op": "MLOAD"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1026": {
      "op": "ADD"
    },
    "1027": {
      "op": "ADD"
    },
    "1028": {
      "op": "AND"
    },
    "1029": {
      "op": "SWAP1"
    },
    "1030": {
      "op": "POP"
    },
    "1031": {
      "op": "DUP2"
    },
    "1032": {
      "op": "ADD"
    },
    "1033": {
      "op": "SWAP1"
    },
    "1034": {
      "op": "POP"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1037": {
      "op": "RETURN"
    },
    "1038": {
      "op": "JUMPDEST"
    },
    "1039": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "1044": {
      "op": "DUP2"
    },
    "1045": {
      "op": "XOR"
    },
    "1046": {
      "op": "PUSH2",
      "value": "0x42D"
    },
    "1049": {
      "op": "JUMPI"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1052": {
      "op": "CALLDATASIZE"
    },
    "1053": {
      "op": "LT"
    },
    "1054": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "1057": {
      "op": "JUMPI"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1060": {
      "op": "SLOAD"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1063": {
      "op": "MSTORE"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1068": {
      "op": "RETURN"
    },
    "1069": {
      "op": "JUMPDEST"
    },
    "1070": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1075": {
      "op": "DUP2"
    },
    "1076": {
      "op": "XOR"
    },
    "1077": {
      "op": "PUSH2",
      "value": "0x468"
    },
    "1080": {
      "op": "JUMPI"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1083": {
      "op": "CALLDATASIZE"
    },
    "1084": {
      "op": "LT"
    },
    "1085": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "1088": {
      "op": "JUMPI"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1091": {
      "op": "CALLDATALOAD"
    },
    "1092": {
      "op": "DUP1"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1095": {
      "op": "SHR"
    },
    "1096": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "1099": {
      "op": "JUMPI"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1102": {
      "op": "MSTORE"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1107": {
      "op": "MLOAD"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1110": {
      "op": "MSTORE"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1113": {
      "op": "MSTORE"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1118": {
      "op": "SHA3"
    },
    "1119": {
      "op": "SLOAD"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1122": {
      "op": "MSTORE"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1127": {
      "op": "RETURN"
    },
    "1128": {
      "op": "JUMPDEST"
    },
    "1129": {
      "op": "PUSH4",
      "value": "0xDD62ED3E"
    },
    "1134": {
      "op": "DUP2"
    },
    "1135": {
      "op": "XOR"
    },
    "1136": {
      "op": "PUSH2",
      "value": "0x4C2"
    },
    "1139": {
      "op": "JUMPI"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1142": {
      "op": "CALLDATASIZE"
    },
    "1143": {
      "op": "LT"
    },
    "1144": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "1147": {
      "op": "JUMPI"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1150": {
      "op": "CALLDATALOAD"
    },
    "1151": {
      "op": "DUP1"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1154": {
      "op": "SHR"
    },
    "1155": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "1158": {
      "op": "JUMPI"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1161": {
      "op": "MSTORE"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1164": {
      "op": "CALLDATALOAD"
    },
    "1165": {
      "op": "DUP1"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1168": {
      "op": "SHR"
    },
    "1169": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "1172": {
      "op": "JUMPI"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1175": {
      "op": "MSTORE"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1180": {
      "op": "MLOAD"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1183": {
      "op": "MSTORE"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1186": {
      "op": "MSTORE"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1191": {
      "op": "SHA3"
    },
    "1192": {
      "op": "DUP1"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1195": {
      "op": "MLOAD"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1198": {
      "op": "MSTORE"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1201": {
      "op": "MSTORE"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1206": {
      "op": "SHA3"
    },
    "1207": {
      "op": "SWAP1"
    },
    "1208": {
      "op": "POP"
    },
    "1209": {
      "op": "SLOAD"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1212": {
      "op": "MSTORE"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1217": {
      "op": "RETURN"
    },
    "1218": {
      "op": "JUMPDEST"
    },
    "1219": {
      "op": "PUSH4",
      "value": "0x1816DDD"
    },
    "1224": {
      "op": "DUP2"
    },
    "1225": {
      "op": "XOR"
    },
    "1226": {
      "op": "PUSH2",
      "value": "0x4E1"
    },
    "1229": {
      "op": "JUMPI"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1232": {
      "op": "CALLDATASIZE"
    },
    "1233": {
      "op": "LT"
    },
    "1234": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "1237": {
      "op": "JUMPI"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "1240": {
      "op": "SLOAD"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1243": {
      "op": "MSTORE"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1248": {
      "op": "RETURN"
    },
    "1249": {
      "op": "JUMPDEST"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "op": "JUMPDEST"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1256": {
      "op": "REVERT"
    },
    "1257": {
      "fn": "ERC20._burn",
      "offset": [
        4283,
        4680
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1258": {
      "fn": "ERC20._burn",
      "offset": [
        4548,
        4551
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x40"
    },
    "1260": {
      "fn": "ERC20._burn",
      "offset": [
        4548,
        4569
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1261": {
      "fn": "ERC20._burn",
      "offset": [
        4548,
        4569
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1262": {
      "fn": "ERC20._burn",
      "offset": [
        4541,
        4569
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x561"
    },
    "1265": {
      "branch": 23,
      "fn": "ERC20._burn",
      "offset": [
        4541,
        4569
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1266": {
      "fn": "ERC20._burn",
      "offset": [
        4574,
        4590
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x7"
    },
    "1268": {
      "op": "SLOAD"
    },
    "1269": {
      "fn": "ERC20._burn",
      "offset": [
        4594,
        4600
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1271": {
      "op": "MLOAD"
    },
    "1272": {
      "op": "DUP1"
    },
    "1273": {
      "op": "DUP3"
    },
    "1274": {
      "op": "SUB"
    },
    "1275": {
      "op": "DUP3"
    },
    "1276": {
      "op": "DUP2"
    },
    "1277": {
      "op": "GT"
    },
    "1278": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "1281": {
      "op": "JUMPI"
    },
    "1282": {
      "op": "SWAP1"
    },
    "1283": {
      "op": "POP"
    },
    "1284": {
      "fn": "ERC20._burn",
      "offset": [
        4574,
        4600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1285": {
      "fn": "ERC20._burn",
      "offset": [
        4574,
        4600
      ],
      "op": "POP",
      "path": "0"
    },
    "1286": {
      "fn": "ERC20._burn",
      "offset": [
        4574,
        4590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1288": {
      "op": "SSTORE"
    },
    "1289": {
      "fn": "ERC20._burn",
      "offset": [
        4605,
        4619
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x5"
    },
    "1291": {
      "fn": "ERC20._burn",
      "offset": [
        4620,
        4623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1293": {
      "op": "MLOAD"
    },
    "1294": {
      "fn": "ERC20._burn",
      "offset": [
        4605,
        4624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1296": {
      "fn": "ERC20._burn",
      "offset": [
        4605,
        4624
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1297": {
      "fn": "ERC20._burn",
      "offset": [
        4605,
        4624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1299": {
      "fn": "ERC20._burn",
      "offset": [
        4605,
        4624
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1300": {
      "fn": "ERC20._burn",
      "offset": [
        4605,
        4624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1302": {
      "fn": "ERC20._burn",
      "offset": [
        4605,
        4624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1304": {
      "fn": "ERC20._burn",
      "offset": [
        4605,
        4624
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1305": {
      "op": "DUP1"
    },
    "1306": {
      "op": "SLOAD"
    },
    "1307": {
      "fn": "ERC20._burn",
      "offset": [
        4628,
        4634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1309": {
      "op": "MLOAD"
    },
    "1310": {
      "op": "DUP1"
    },
    "1311": {
      "op": "DUP3"
    },
    "1312": {
      "op": "SUB"
    },
    "1313": {
      "op": "DUP3"
    },
    "1314": {
      "op": "DUP2"
    },
    "1315": {
      "op": "GT"
    },
    "1316": {
      "op": "PUSH2",
      "value": "0x561"
    },
    "1319": {
      "op": "JUMPI"
    },
    "1320": {
      "op": "SWAP1"
    },
    "1321": {
      "op": "POP"
    },
    "1322": {
      "fn": "ERC20._burn",
      "offset": [
        4605,
        4634
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1323": {
      "fn": "ERC20._burn",
      "offset": [
        4605,
        4634
      ],
      "op": "POP",
      "path": "0"
    },
    "1324": {
      "op": "DUP2"
    },
    "1325": {
      "op": "SSTORE"
    },
    "1326": {
      "fn": "ERC20._burn",
      "offset": [
        4605,
        4634
      ],
      "op": "POP",
      "path": "0"
    },
    "1327": {
      "fn": "ERC20._burn",
      "offset": [
        4639,
        4680
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x0"
    },
    "1329": {
      "fn": "ERC20._burn",
      "offset": [
        4652,
        4655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1331": {
      "fn": "ERC20._burn",
      "offset": [
        4639,
        4680
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1332": {
      "fn": "ERC20._burn",
      "offset": [
        4639,
        4680
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1365": {
      "fn": "ERC20._burn",
      "offset": [
        4673,
        4679
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1367": {
      "op": "MLOAD"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1370": {
      "op": "MSTORE"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1373": {
      "fn": "ERC20._burn",
      "offset": [
        4639,
        4680
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1375": {
      "fn": "ERC20._burn",
      "offset": [
        4639,
        4680
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1376": {
      "op": "JUMP"
    },
    "1377": {
      "op": "JUMPDEST"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1380": {
      "op": "DUP1"
    },
    "1381": {
      "op": "REVERT"
    }
  },
  "sha1": "4a0a31784d456671a7c07d5949e2856b0d7dc17b",
  "source": "# @version 0.3.7\n\n# @dev Implementation of ERC-20 token standard.\n# @author Takayuki Jimba (@yudetamago)\n# https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\n\nfrom vyper.interfaces import ERC20\nfrom vyper.interfaces import ERC20Detailed\n\nimplements: ERC20\nimplements: ERC20Detailed\n\nevent Transfer:\n    sender: indexed(address)\n    receiver: indexed(address)\n    value: uint256\n\nevent Approval:\n    owner: indexed(address)\n    spender: indexed(address)\n    value: uint256\n\nname: public(String[32])\nsymbol: public(String[32])\ndecimals: public(uint8)\n\n# NOTE: By declaring `balanceOf` as public, vyper automatically generates a 'balanceOf()' getter\n#       method to allow access to account balances.\n#       The _KeyType will become a required parameter for the getter and it will return _ValueType.\n#       See: https://vyper.readthedocs.io/en/v0.1.0-beta.8/types.html?highlight=getter#mappings\nbalanceOf: public(HashMap[address, uint256])\n# By declaring `allowance` as public, vyper automatically generates the `allowance()` getter\nallowance: public(HashMap[address, HashMap[address, uint256]])\n# By declaring `totalSupply` as public, we automatically create the `totalSupply()` getter\ntotalSupply: public(uint256)\nminter: address\n\n\n@external\ndef __init__(_name: String[32], _symbol: String[32], _decimals: uint8, _supply: uint256):\n    init_supply: uint256 = _supply * 10 ** convert(_decimals, uint256)\n    self.name = _name\n    self.symbol = _symbol\n    self.decimals = _decimals\n    self.balanceOf[msg.sender] = init_supply\n    self.totalSupply = init_supply\n    self.minter = msg.sender\n    log Transfer(empty(address), msg.sender, init_supply)\n\n\n\n@external\ndef transfer(_to : address, _value : uint256) -> bool:\n    \"\"\"\n    @dev Transfer token for a specified address\n    @param _to The address to transfer to.\n    @param _value The amount to be transferred.\n    \"\"\"\n    # NOTE: vyper does not allow underflows\n    #       so the following subtraction would revert on insufficient balance\n    self.balanceOf[msg.sender] -= _value\n    self.balanceOf[_to] += _value\n    log Transfer(msg.sender, _to, _value)\n    return True\n\n\n@external\ndef transferFrom(_from : address, _to : address, _value : uint256) -> bool:\n    \"\"\"\n     @dev Transfer tokens from one address to another.\n     @param _from address The address which you want to send tokens from\n     @param _to address The address which you want to transfer to\n     @param _value uint256 the amount of tokens to be transferred\n    \"\"\"\n    # NOTE: vyper does not allow underflows\n    #       so the following subtraction would revert on insufficient balance\n    self.balanceOf[_from] -= _value\n    self.balanceOf[_to] += _value\n    # NOTE: vyper does not allow underflows\n    #      so the following subtraction would revert on insufficient allowance\n    self.allowance[_from][msg.sender] -= _value\n    log Transfer(_from, _to, _value)\n    return True\n\n\n@external\ndef approve(_spender : address, _value : uint256) -> bool:\n    \"\"\"\n    @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n         Beware that changing an allowance with this method brings the risk that someone may use both the old\n         and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n         race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n         https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    @param _spender The address which will spend the funds.\n    @param _value The amount of tokens to be spent.\n    \"\"\"\n    self.allowance[msg.sender][_spender] = _value\n    log Approval(msg.sender, _spender, _value)\n    return True\n\n\n@external\ndef mint(_to: address, _value: uint256):\n    \"\"\"\n    @dev Mint an amount of the token and assigns it to an account.\n         This encapsulates the modification of balances such that the\n         proper events are emitted.\n    @param _to The account that will receive the created tokens.\n    @param _value The amount that will be created.\n    \"\"\"\n    assert msg.sender == self.minter\n    assert _to != empty(address)\n    self.totalSupply += _value\n    self.balanceOf[_to] += _value\n    log Transfer(empty(address), _to, _value)\n\n\n@internal\ndef _burn(_to: address, _value: uint256):\n    \"\"\"\n    @dev Internal function that burns an amount of the token of a given\n         account.\n    @param _to The account whose tokens will be burned.\n    @param _value The amount that will be burned.\n    \"\"\"\n    assert _to != empty(address)\n    self.totalSupply -= _value\n    self.balanceOf[_to] -= _value\n    log Transfer(_to, empty(address), _value)\n\n\n@external\ndef burn(_value: uint256):\n    \"\"\"\n    @dev Burn an amount of the token of msg.sender.\n    @param _value The amount that will be burned.\n    \"\"\"\n    self._burn(msg.sender, _value)\n\n\n@external\ndef burnFrom(_to: address, _value: uint256):\n    \"\"\"\n    @dev Burn an amount of the token from a given account.\n    @param _to The account whose tokens will be burned.\n    @param _value The amount that will be burned.\n    \"\"\"\n    self.allowance[_to][msg.sender] -= _value\n    self._burn(_to, _value)",
  "sourceMap": "",
  "sourcePath": "contracts/ERC20.vy",
  "type": "contract"
}