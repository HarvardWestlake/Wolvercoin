{
  "abi": [
    {
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "name": "productOwner",
          "type": "address"
        },
        {
          "name": "uRL",
          "type": "string"
        }
      ],
      "name": "createBoundNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "NFTid",
          "type": "uint256"
        }
      ],
      "name": "redeemProduct",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "arg0",
          "type": "uint256"
        }
      ],
      "name": "hashie",
      "outputs": [
        {
          "components": [
            {
              "name": "addr",
              "type": "address"
            },
            {
              "name": "decimals",
              "type": "uint256"
            },
            {
              "name": "symbol",
              "type": "string"
            },
            {
              "name": "hashImag",
              "type": "string"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/BookstoreNFT.vy"
  },
  "ast": {
    "ast_type": "Module",
    "body": [
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 5,
          "end_col_offset": 12,
          "end_lineno": 4,
          "id": "uint256",
          "lineno": 4,
          "node_id": 4,
          "src": "73:7:0"
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 12,
        "end_lineno": 4,
        "is_constant": false,
        "is_immutable": false,
        "is_public": false,
        "lineno": 4,
        "node_id": 1,
        "src": "68:12:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 3,
          "end_lineno": 4,
          "id": "num",
          "lineno": 4,
          "node_id": 2,
          "src": "68:3:0"
        },
        "value": null
      },
      {
        "ast_type": "StructDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 10,
              "end_col_offset": 17,
              "end_lineno": 6,
              "id": "address",
              "lineno": 6,
              "node_id": 10,
              "src": "111:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 17,
            "end_lineno": 6,
            "lineno": 6,
            "node_id": 7,
            "simple": 1,
            "src": "105:13:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 8,
              "end_lineno": 6,
              "id": "addr",
              "lineno": 6,
              "node_id": 8,
              "src": "105:4:0"
            },
            "value": null
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 14,
              "end_col_offset": 21,
              "end_lineno": 7,
              "id": "uint256",
              "lineno": 7,
              "node_id": 15,
              "src": "133:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 21,
            "end_lineno": 7,
            "lineno": 7,
            "node_id": 12,
            "simple": 1,
            "src": "123:17:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 7,
              "id": "decimals",
              "lineno": 7,
              "node_id": 13,
              "src": "123:8:0"
            },
            "value": null
          },
          {
            "annotation": {
              "ast_type": "Subscript",
              "col_offset": 12,
              "end_col_offset": 22,
              "end_lineno": 8,
              "lineno": 8,
              "node_id": 20,
              "slice": {
                "ast_type": "Index",
                "col_offset": 12,
                "end_col_offset": 22,
                "end_lineno": 8,
                "lineno": 8,
                "node_id": 25,
                "src": "153:10:0",
                "value": {
                  "ast_type": "Int",
                  "col_offset": 19,
                  "end_col_offset": 21,
                  "end_lineno": 8,
                  "lineno": 8,
                  "node_id": 23,
                  "src": "160:2:0",
                  "value": 16
                }
              },
              "src": "153:10:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 12,
                "end_col_offset": 18,
                "end_lineno": 8,
                "id": "String",
                "lineno": 8,
                "node_id": 21,
                "src": "153:6:0"
              }
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 22,
            "end_lineno": 8,
            "lineno": 8,
            "node_id": 17,
            "simple": 1,
            "src": "145:18:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 10,
              "end_lineno": 8,
              "id": "symbol",
              "lineno": 8,
              "node_id": 18,
              "src": "145:6:0"
            },
            "value": null
          },
          {
            "annotation": {
              "ast_type": "Subscript",
              "col_offset": 14,
              "end_col_offset": 25,
              "end_lineno": 9,
              "lineno": 9,
              "node_id": 29,
              "slice": {
                "ast_type": "Index",
                "col_offset": 14,
                "end_col_offset": 25,
                "end_lineno": 9,
                "lineno": 9,
                "node_id": 34,
                "src": "178:11:0",
                "value": {
                  "ast_type": "Int",
                  "col_offset": 21,
                  "end_col_offset": 24,
                  "end_lineno": 9,
                  "lineno": 9,
                  "node_id": 32,
                  "src": "185:3:0",
                  "value": 100
                }
              },
              "src": "178:11:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 20,
                "end_lineno": 9,
                "id": "String",
                "lineno": 9,
                "node_id": 30,
                "src": "178:6:0"
              }
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 25,
            "end_lineno": 9,
            "lineno": 9,
            "node_id": 26,
            "simple": 1,
            "src": "168:21:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 9,
              "id": "hashImag",
              "lineno": 9,
              "node_id": 27,
              "src": "168:8:0"
            },
            "value": null
          }
        ],
        "col_offset": 0,
        "end_col_offset": 25,
        "end_lineno": 9,
        "lineno": 5,
        "name": "Erc20Token",
        "node_id": 6,
        "src": "82:107:0"
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 16,
          "end_col_offset": 44,
          "end_lineno": 11,
          "lineno": 11,
          "node_id": 41,
          "slice": {
            "ast_type": "Index",
            "col_offset": 16,
            "end_col_offset": 44,
            "end_lineno": 11,
            "lineno": 11,
            "node_id": 51,
            "src": "207:28:0",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 24,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 24,
                  "end_col_offset": 31,
                  "end_lineno": 11,
                  "id": "uint256",
                  "lineno": 11,
                  "node_id": 45,
                  "src": "215:7:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 33,
                  "end_col_offset": 43,
                  "end_lineno": 11,
                  "id": "Erc20Token",
                  "lineno": 11,
                  "node_id": 47,
                  "src": "224:10:0"
                }
              ],
              "end_col_offset": 43,
              "end_lineno": 11,
              "lineno": 11,
              "node_id": 44,
              "src": "215:19:0"
            }
          },
          "src": "207:28:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 16,
            "end_col_offset": 23,
            "end_lineno": 11,
            "id": "HashMap",
            "lineno": 11,
            "node_id": 42,
            "src": "207:7:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 45,
        "end_lineno": 11,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 11,
        "node_id": 35,
        "src": "191:45:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 6,
          "end_lineno": 11,
          "id": "hashie",
          "lineno": 11,
          "node_id": 36,
          "src": "191:6:0"
        },
        "value": null
      },
      {
        "args": {
          "args": [],
          "ast_type": "arguments",
          "col_offset": 0,
          "default": null,
          "defaults": [],
          "end_col_offset": 3,
          "end_lineno": 14,
          "lineno": 14,
          "node_id": 53,
          "src": "248:3:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 10,
            "end_lineno": 15,
            "lineno": 15,
            "node_id": 54,
            "src": "268:6:0",
            "value": null
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 13,
            "id": "external",
            "lineno": 13,
            "node_id": 55,
            "src": "239:8:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 10,
        "end_lineno": 15,
        "lineno": 14,
        "name": "__init__",
        "node_id": 52,
        "pos": null,
        "returns": null,
        "src": "248:26:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 33,
                "end_col_offset": 40,
                "end_lineno": 20,
                "id": "address",
                "lineno": 20,
                "node_id": 60,
                "src": "409:7:0"
              },
              "arg": "productOwner",
              "ast_type": "arg",
              "col_offset": 19,
              "end_col_offset": 40,
              "end_lineno": 20,
              "lineno": 20,
              "node_id": 59,
              "src": "395:21:0"
            },
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 47,
                "end_col_offset": 58,
                "end_lineno": 20,
                "lineno": 20,
                "node_id": 63,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 47,
                  "end_col_offset": 58,
                  "end_lineno": 20,
                  "lineno": 20,
                  "node_id": 68,
                  "src": "423:11:0",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 54,
                    "end_col_offset": 57,
                    "end_lineno": 20,
                    "lineno": 20,
                    "node_id": 66,
                    "src": "430:3:0",
                    "value": 100
                  }
                },
                "src": "423:11:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 47,
                  "end_col_offset": 53,
                  "end_lineno": 20,
                  "id": "String",
                  "lineno": 20,
                  "node_id": 64,
                  "src": "423:6:0"
                }
              },
              "arg": "uRL",
              "ast_type": "arg",
              "col_offset": 42,
              "end_col_offset": 58,
              "end_lineno": 20,
              "lineno": 20,
              "node_id": 62,
              "src": "418:16:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 19,
          "default": null,
          "defaults": [],
          "end_col_offset": 58,
          "end_lineno": 20,
          "lineno": 20,
          "node_id": 58,
          "src": "395:39:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 10,
            "end_lineno": 26,
            "lineno": 21,
            "node_id": 69,
            "src": "441:142:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 25,
              "end_lineno": 21,
              "lineno": 21,
              "node_id": 70,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 25,
                "end_lineno": 21,
                "lineno": 21,
                "node_id": 80,
                "src": "441:21:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "num",
                  "col_offset": 16,
                  "end_col_offset": 24,
                  "end_lineno": 21,
                  "lineno": 21,
                  "node_id": 75,
                  "src": "453:8:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 16,
                    "end_col_offset": 20,
                    "end_lineno": 21,
                    "id": "self",
                    "lineno": 21,
                    "node_id": 76,
                    "src": "453:4:0"
                  }
                }
              },
              "src": "441:21:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "hashie",
                "col_offset": 4,
                "end_col_offset": 15,
                "end_lineno": 21,
                "lineno": 21,
                "node_id": 71,
                "src": "441:11:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 21,
                  "id": "self",
                  "lineno": 21,
                  "node_id": 72,
                  "src": "441:4:0"
                }
              }
            },
            "value": {
              "args": [
                {
                  "ast_type": "Dict",
                  "col_offset": 39,
                  "end_col_offset": 9,
                  "end_lineno": 26,
                  "keys": [
                    {
                      "ast_type": "Name",
                      "col_offset": 8,
                      "end_col_offset": 12,
                      "end_lineno": 22,
                      "id": "addr",
                      "lineno": 22,
                      "node_id": 85,
                      "src": "486:4:0"
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 8,
                      "end_col_offset": 16,
                      "end_lineno": 23,
                      "id": "decimals",
                      "lineno": 23,
                      "node_id": 87,
                      "src": "514:8:0"
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 8,
                      "end_col_offset": 14,
                      "end_lineno": 24,
                      "id": "symbol",
                      "lineno": 24,
                      "node_id": 89,
                      "src": "536:6:0"
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 8,
                      "end_col_offset": 16,
                      "end_lineno": 25,
                      "id": "hashImag",
                      "lineno": 25,
                      "node_id": 91,
                      "src": "559:8:0"
                    }
                  ],
                  "lineno": 21,
                  "node_id": 84,
                  "src": "476:106:0",
                  "values": [
                    {
                      "ast_type": "Name",
                      "col_offset": 14,
                      "end_col_offset": 26,
                      "end_lineno": 22,
                      "id": "productOwner",
                      "lineno": 22,
                      "node_id": 93,
                      "src": "492:12:0"
                    },
                    {
                      "ast_type": "Int",
                      "col_offset": 18,
                      "end_col_offset": 20,
                      "end_lineno": 23,
                      "lineno": 23,
                      "node_id": 95,
                      "src": "524:2:0",
                      "value": 18
                    },
                    {
                      "ast_type": "Str",
                      "col_offset": 16,
                      "end_col_offset": 21,
                      "end_lineno": 24,
                      "lineno": 24,
                      "node_id": 96,
                      "src": "544:5:0",
                      "value": "WVC"
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 18,
                      "end_col_offset": 21,
                      "end_lineno": 25,
                      "id": "uRL",
                      "lineno": 25,
                      "node_id": 97,
                      "src": "569:3:0"
                    }
                  ]
                }
              ],
              "ast_type": "Call",
              "col_offset": 28,
              "end_col_offset": 10,
              "end_lineno": 26,
              "func": {
                "ast_type": "Name",
                "col_offset": 28,
                "end_col_offset": 38,
                "end_lineno": 21,
                "id": "Erc20Token",
                "lineno": 21,
                "node_id": 82,
                "src": "465:10:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 21,
              "node_id": 81,
              "src": "465:118:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 17,
            "end_lineno": 27,
            "lineno": 27,
            "node_id": 99,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 27,
              "lineno": 27,
              "node_id": 104,
              "src": "588:13:0"
            },
            "src": "588:13:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "num",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 27,
              "lineno": 27,
              "node_id": 100,
              "src": "588:8:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 27,
                "id": "self",
                "lineno": 27,
                "node_id": 101,
                "src": "588:4:0"
              }
            },
            "value": {
              "ast_type": "Int",
              "col_offset": 16,
              "end_col_offset": 17,
              "end_lineno": 27,
              "lineno": 27,
              "node_id": 105,
              "src": "600:1:0",
              "value": 1
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 19,
            "id": "external",
            "lineno": 19,
            "node_id": 106,
            "src": "367:8:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 17,
        "end_lineno": 27,
        "lineno": 20,
        "name": "createBoundNFT",
        "node_id": 57,
        "pos": null,
        "returns": null,
        "src": "376:225:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 26,
                "end_col_offset": 33,
                "end_lineno": 30,
                "id": "uint256",
                "lineno": 30,
                "node_id": 111,
                "src": "639:7:0"
              },
              "arg": "NFTid",
              "ast_type": "arg",
              "col_offset": 18,
              "end_col_offset": 33,
              "end_lineno": 30,
              "lineno": 30,
              "node_id": 110,
              "src": "631:15:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 18,
          "default": null,
          "defaults": [],
          "end_col_offset": 33,
          "end_lineno": 30,
          "lineno": 30,
          "node_id": 109,
          "src": "631:15:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "If",
            "body": [
              {
                "ast_type": "Return",
                "col_offset": 8,
                "end_col_offset": 19,
                "end_lineno": 32,
                "lineno": 32,
                "node_id": 131,
                "src": "713:11:0",
                "value": {
                  "ast_type": "NameConstant",
                  "col_offset": 15,
                  "end_col_offset": 19,
                  "end_lineno": 32,
                  "lineno": 32,
                  "node_id": 132,
                  "src": "720:4:0",
                  "value": true
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 20,
            "end_lineno": 34,
            "lineno": 31,
            "node_id": 113,
            "orelse": [
              {
                "ast_type": "Return",
                "col_offset": 8,
                "end_col_offset": 20,
                "end_lineno": 34,
                "lineno": 34,
                "node_id": 133,
                "src": "743:12:0",
                "value": {
                  "ast_type": "NameConstant",
                  "col_offset": 15,
                  "end_col_offset": 20,
                  "end_lineno": 34,
                  "lineno": 34,
                  "node_id": 134,
                  "src": "750:5:0",
                  "value": false
                }
              }
            ],
            "src": "661:94:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 8,
              "end_col_offset": 45,
              "end_lineno": 31,
              "left": {
                "ast_type": "Attribute",
                "attr": "sender",
                "col_offset": 8,
                "end_col_offset": 18,
                "end_lineno": 31,
                "lineno": 31,
                "node_id": 115,
                "src": "665:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 11,
                  "end_lineno": 31,
                  "id": "msg",
                  "lineno": 31,
                  "node_id": 116,
                  "src": "665:3:0"
                }
              },
              "lineno": 31,
              "node_id": 114,
              "op": {
                "ast_type": "Eq",
                "col_offset": 8,
                "end_col_offset": 45,
                "end_lineno": 31,
                "lineno": 31,
                "node_id": 119,
                "src": "665:37:0"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "addr",
                "col_offset": 22,
                "end_col_offset": 45,
                "end_lineno": 31,
                "lineno": 31,
                "node_id": 120,
                "src": "679:23:0",
                "value": {
                  "ast_type": "Subscript",
                  "col_offset": 22,
                  "end_col_offset": 40,
                  "end_lineno": 31,
                  "lineno": 31,
                  "node_id": 121,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 22,
                    "end_col_offset": 40,
                    "end_lineno": 31,
                    "lineno": 31,
                    "node_id": 129,
                    "src": "679:18:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 34,
                      "end_col_offset": 39,
                      "end_lineno": 31,
                      "id": "NFTid",
                      "lineno": 31,
                      "node_id": 126,
                      "src": "691:5:0"
                    }
                  },
                  "src": "679:18:0",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "hashie",
                    "col_offset": 22,
                    "end_col_offset": 33,
                    "end_lineno": 31,
                    "lineno": 31,
                    "node_id": 122,
                    "src": "679:11:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 22,
                      "end_col_offset": 26,
                      "end_lineno": 31,
                      "id": "self",
                      "lineno": 31,
                      "node_id": 123,
                      "src": "679:4:0"
                    }
                  }
                }
              },
              "src": "665:37:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 29,
            "id": "external",
            "lineno": 29,
            "node_id": 135,
            "src": "604:8:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 20,
        "end_lineno": 34,
        "lineno": 30,
        "name": "redeemProduct",
        "node_id": 108,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 38,
          "end_col_offset": 42,
          "end_lineno": 30,
          "id": "bool",
          "lineno": 30,
          "node_id": 137,
          "src": "651:4:0"
        },
        "src": "613:142:0"
      }
    ],
    "col_offset": 0,
    "doc_string": null,
    "end_col_offset": 20,
    "end_lineno": 34,
    "lineno": 1,
    "name": "contracts/BookstoreNFT.vy",
    "node_id": 0,
    "src": "0:755:0"
  },
  "bytecode": "0x346102995761028261001661000039610282610000f36003361161000c5761026a565b60003560e01c346102705763f28abbe181186101185760643610610270576004358060a01c61027057604052602435600401606481351161027057803580606052602082018181608037505050600160005460205260005260406000206040518155601260018201556003610100527f57564300000000000000000000000000000000000000000000000000000000006101205261010080518060028401556020820160016002850101815181555050505060605180600483015560016004830101600082601f0160051c600481116102705780156100fe57905b8060051b60800151818401556001018181186100e7575b505050505060005460018101818110610270579050600055005b6386e908758118610160576024361061027057600160043560205260005260406000205433186101545760016040526020604061015e5661015e565b6000604052602060405bf35b63b13557e981186102685760243610610270576020806040526001600435602052600052604060002081604001608082548252600183015460208301528060408301526002830181830181548082526001830160208301815481525050508051806020830101601f82600003163682375050601f19601f8251602001011690509050810190508060608301526004830181830181548082526001830160208301600083601f0160051c6004811161027057801561022f57905b808401548160051b840152600101818118610219575b50505050508051806020830101601f82600003163682375050601f19601f82516020010116905090508101905090509050810190506040f35b505b60006000fd5b600080fda165767970657283000307000b005b600080fd",
  "bytecodeSha1": "8df1a13fcf8a6a79e9d2f1a756d757a8d45cda9c",
  "compiler": {
    "evm_version": "istanbul",
    "version": "0.3.7"
  },
  "contractName": "BookstoreNFT",
  "coverageMap": {
    "branches": {
      "0": {
        "BookstoreNFT.redeemProduct": {
          "2": [
            665,
            702,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "BookstoreNFT.createBoundNFT": {
          "0": [
            441,
            583
          ],
          "1": [
            588,
            601
          ]
        },
        "BookstoreNFT.redeemProduct": {
          "3": [
            713,
            724
          ],
          "4": [
            743,
            755
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "0x6003361161000c5761026a565b60003560e01c346102705763f28abbe181186101185760643610610270576004358060a01c61027057604052602435600401606481351161027057803580606052602082018181608037505050600160005460205260005260406000206040518155601260018201556003610100527f57564300000000000000000000000000000000000000000000000000000000006101205261010080518060028401556020820160016002850101815181555050505060605180600483015560016004830101600082601f0160051c600481116102705780156100fe57905b8060051b60800151818401556001018181186100e7575b505050505060005460018101818110610270579050600055005b6386e908758118610160576024361061027057600160043560205260005260406000205433186101545760016040526020604061015e5661015e565b6000604052602060405bf35b63b13557e981186102685760243610610270576020806040526001600435602052600052604060002081604001608082548252600183015460208301528060408301526002830181830181548082526001830160208301815481525050508051806020830101601f82600003163682375050601f19601f8251602001011690509050810190508060608301526004830181830181548082526001830160208301600083601f0160051c6004811161027057801561022f57905b808401548160051b840152600101818118610219575b50505050508051806020830101601f82600003163682375050601f19601f82516020010116905090508101905090509050810190506040f35b505b60006000fd5b600080fda165767970657283000307000b",
  "deployedSourceMap": "-1:-1:0:-;;;;:::-;;:::-;:::-;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;395:21;;-1:-1;;;418:16;-1:-1;418:16;-1:-1;;;:::-;418:16;-1:-1;;;;;418:16;-1:-1;;;;;;;418:16;441:11;453:8;-1:-1;441:21;;;;;;;492:12;-1:-1;441:142;-1:-1;524:2;-1:-1;441:142;-1:-1;;;;544:5;-1:-1;;544:5;;-1:-1;;;;441:142;-1:-1;;;;;;;441:142;-1:-1;;;;;;;;;;569:3;-1:-1;;;441:142;-1:-1;;;;441:142;-1:-1;;;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;;;441:142;588:8;-1:-1;600:1;-1:-1;;;;;;:::-;588:13;;:8;-1:-1;;:::-;;;;;:::-;;;;;:::-;679:11;691:5;679:18;;;;;;;;665:37;:10;:37;661:94;:::-;720:4;-1:-1;;;;;:::-;;661:94::-;:::-;750:5;-1:-1;;;;:::-;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;:::-;;;;:::-;;;",
  "language": "Vyper",
  "natspec": {
    "methods": {}
  },
  "offset": [
    0,
    764
  ],
  "opcodes": "PUSH1 0x3 CALLDATASIZE GT PUSH2 0x0C JUMPI PUSH2 0x26A JUMP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR CALLVALUE PUSH2 0x270 JUMPI PUSH4 0xF28ABBE1 DUP2 XOR PUSH2 0x118 JUMPI PUSH1 0x64 CALLDATASIZE LT PUSH2 0x270 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x270 JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 ADD PUSH1 0x64 DUP2 CALLDATALOAD GT PUSH2 0x270 JUMPI DUP1 CALLDATALOAD DUP1 PUSH1 0x60 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 PUSH1 0x80 CALLDATACOPY POP POP POP PUSH1 0x1 PUSH1 0x0 SLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 PUSH1 0x40 MLOAD DUP2 SSTORE PUSH1 0x12 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x3 PUSH2 0x10 MSTORE PUSH32 0x57564300000000000000000000000000000 PUSH2 0x120 MSTORE PUSH2 0x10 DUP1 MLOAD DUP1 PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x1 PUSH1 0x2 DUP6 ADD ADD DUP2 MLOAD DUP2 SSTORE POP POP POP POP PUSH1 0x60 MLOAD DUP1 PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0x1 PUSH1 0x4 DUP4 ADD ADD PUSH1 0x0 DUP3 PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x4 DUP2 GT PUSH2 0x270 JUMPI DUP1 ISZERO PUSH2 0x0FE JUMPI SWAP1 JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x80 ADD MLOAD DUP2 DUP5 ADD SSTORE PUSH1 0x1 ADD DUP2 DUP2 XOR PUSH2 0x0E7 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x0 SLOAD PUSH1 0x1 DUP2 ADD DUP2 DUP2 LT PUSH2 0x270 JUMPI SWAP1 POP PUSH1 0x0 SSTORE STOP JUMPDEST PUSH4 0x86E9875 DUP2 XOR PUSH2 0x160 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x270 JUMPI PUSH1 0x1 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD CALLER XOR PUSH2 0x154 JUMPI PUSH1 0x1 PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH2 0x15E JUMP PUSH2 0x15E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 JUMPDEST RETURN JUMPDEST PUSH4 0xB13557E9 DUP2 XOR PUSH2 0x268 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x270 JUMPI PUSH1 0x20 DUP1 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP2 PUSH1 0x40 ADD PUSH1 0x80 DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x20 DUP4 ADD MSTORE DUP1 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD DUP2 DUP4 ADD DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP2 SLOAD DUP2 MSTORE POP POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP SWAP1 POP DUP2 ADD SWAP1 POP DUP1 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD DUP2 DUP4 ADD DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP4 PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x4 DUP2 GT PUSH2 0x270 JUMPI DUP1 ISZERO PUSH2 0x22F JUMPI SWAP1 JUMPDEST DUP1 DUP5 ADD SLOAD DUP2 PUSH1 0x5 SHL DUP5 ADD MSTORE PUSH1 0x1 ADD DUP2 DUP2 XOR PUSH2 0x219 JUMPI JUMPDEST POP POP POP POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP SWAP1 POP DUP2 ADD SWAP1 POP SWAP1 POP SWAP1 POP DUP2 ADD SWAP1 POP PUSH1 0x40 RETURN JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT LOG1 PUSH6 0x767970657283 STOP SUB SMOD STOP SIGNEXTEND",
  "pcMap": {
    "0": {
      "offset": [
        0,
        755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2": {
      "op": "CALLDATASIZE"
    },
    "3": {
      "op": "GT"
    },
    "4": {
      "op": "PUSH2",
      "value": "0x0C"
    },
    "7": {
      "op": "JUMPI"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x26A"
    },
    "11": {
      "op": "JUMP"
    },
    "12": {
      "op": "JUMPDEST"
    },
    "13": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15": {
      "op": "CALLDATALOAD"
    },
    "16": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18": {
      "op": "SHR"
    },
    "19": {
      "op": "CALLVALUE"
    },
    "20": {
      "op": "PUSH2",
      "value": "0x270"
    },
    "23": {
      "op": "JUMPI"
    },
    "24": {
      "op": "PUSH4",
      "value": "0xF28ABBE1"
    },
    "29": {
      "op": "DUP2"
    },
    "30": {
      "op": "XOR"
    },
    "31": {
      "op": "PUSH2",
      "value": "0x118"
    },
    "34": {
      "op": "JUMPI"
    },
    "35": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "37": {
      "op": "CALLDATASIZE"
    },
    "38": {
      "op": "LT"
    },
    "39": {
      "op": "PUSH2",
      "value": "0x270"
    },
    "42": {
      "op": "JUMPI"
    },
    "43": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "45": {
      "op": "CALLDATALOAD"
    },
    "46": {
      "op": "DUP1"
    },
    "47": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "49": {
      "op": "SHR"
    },
    "50": {
      "op": "PUSH2",
      "value": "0x270"
    },
    "53": {
      "op": "JUMPI"
    },
    "54": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        395,
        416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "56": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        395,
        416
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "57": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "59": {
      "op": "CALLDATALOAD"
    },
    "60": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "62": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        418,
        434
      ],
      "op": "ADD",
      "path": "0"
    },
    "63": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "65": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        418,
        434
      ],
      "op": "DUP2",
      "path": "0"
    },
    "66": {
      "op": "CALLDATALOAD"
    },
    "67": {
      "op": "GT"
    },
    "68": {
      "op": "PUSH2",
      "value": "0x270"
    },
    "71": {
      "op": "JUMPI"
    },
    "72": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        418,
        434
      ],
      "op": "DUP1",
      "path": "0"
    },
    "73": {
      "op": "CALLDATALOAD"
    },
    "74": {
      "op": "DUP1"
    },
    "75": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "77": {
      "op": "MSTORE"
    },
    "78": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "80": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        418,
        434
      ],
      "op": "DUP3",
      "path": "0"
    },
    "81": {
      "op": "ADD"
    },
    "82": {
      "op": "DUP2"
    },
    "83": {
      "op": "DUP2"
    },
    "84": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "86": {
      "op": "CALLDATACOPY"
    },
    "87": {
      "op": "POP"
    },
    "88": {
      "op": "POP"
    },
    "89": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        418,
        434
      ],
      "op": "POP",
      "path": "0"
    },
    "90": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        441,
        452
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x1"
    },
    "92": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        453,
        461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "94": {
      "op": "SLOAD"
    },
    "95": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        441,
        462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "97": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        441,
        462
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "98": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        441,
        462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        441,
        462
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "101": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        441,
        462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "103": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        441,
        462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "105": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        441,
        462
      ],
      "op": "SHA3",
      "path": "0"
    },
    "106": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        492,
        504
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "108": {
      "op": "MLOAD"
    },
    "109": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        441,
        583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "110": {
      "op": "SSTORE"
    },
    "111": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        524,
        526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "115": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        441,
        583
      ],
      "op": "DUP3",
      "path": "0"
    },
    "116": {
      "op": "ADD"
    },
    "117": {
      "op": "SSTORE"
    },
    "118": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "120": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "123": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        544,
        549
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "124": {
      "op": "PUSH32",
      "value": "0x57564300000000000000000000000000000"
    },
    "157": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "160": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        544,
        549
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "161": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        544,
        549
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "164": {
      "op": "DUP1"
    },
    "165": {
      "op": "MLOAD"
    },
    "166": {
      "op": "DUP1"
    },
    "167": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "169": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        441,
        583
      ],
      "op": "DUP5",
      "path": "0"
    },
    "170": {
      "op": "ADD"
    },
    "171": {
      "op": "SSTORE"
    },
    "172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "174": {
      "op": "DUP3"
    },
    "175": {
      "op": "ADD"
    },
    "176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "178": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "180": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        441,
        583
      ],
      "op": "DUP6",
      "path": "0"
    },
    "181": {
      "op": "ADD"
    },
    "182": {
      "op": "ADD"
    },
    "183": {
      "op": "DUP2"
    },
    "184": {
      "op": "MLOAD"
    },
    "185": {
      "op": "DUP2"
    },
    "186": {
      "op": "SSTORE"
    },
    "187": {
      "op": "POP"
    },
    "188": {
      "op": "POP"
    },
    "189": {
      "op": "POP"
    },
    "190": {
      "op": "POP"
    },
    "191": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        569,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "193": {
      "op": "MLOAD"
    },
    "194": {
      "op": "DUP1"
    },
    "195": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "197": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        441,
        583
      ],
      "op": "DUP4",
      "path": "0"
    },
    "198": {
      "op": "ADD"
    },
    "199": {
      "op": "SSTORE"
    },
    "200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "202": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "204": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        441,
        583
      ],
      "op": "DUP4",
      "path": "0"
    },
    "205": {
      "op": "ADD"
    },
    "206": {
      "op": "ADD"
    },
    "207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "209": {
      "op": "DUP3"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "212": {
      "op": "ADD"
    },
    "213": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "215": {
      "op": "SHR"
    },
    "216": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "218": {
      "op": "DUP2"
    },
    "219": {
      "op": "GT"
    },
    "220": {
      "op": "PUSH2",
      "value": "0x270"
    },
    "223": {
      "op": "JUMPI"
    },
    "224": {
      "op": "DUP1"
    },
    "225": {
      "op": "ISZERO"
    },
    "226": {
      "op": "PUSH2",
      "value": "0x0FE"
    },
    "229": {
      "op": "JUMPI"
    },
    "230": {
      "op": "SWAP1"
    },
    "231": {
      "op": "JUMPDEST"
    },
    "232": {
      "op": "DUP1"
    },
    "233": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "235": {
      "op": "SHL"
    },
    "236": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "238": {
      "op": "ADD"
    },
    "239": {
      "op": "MLOAD"
    },
    "240": {
      "op": "DUP2"
    },
    "241": {
      "op": "DUP5"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "op": "SSTORE"
    },
    "244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "246": {
      "op": "ADD"
    },
    "247": {
      "op": "DUP2"
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "XOR"
    },
    "250": {
      "op": "PUSH2",
      "value": "0x0E7"
    },
    "253": {
      "op": "JUMPI"
    },
    "254": {
      "op": "JUMPDEST"
    },
    "255": {
      "op": "POP"
    },
    "256": {
      "op": "POP"
    },
    "257": {
      "op": "POP"
    },
    "258": {
      "op": "POP"
    },
    "259": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        441,
        583
      ],
      "op": "POP",
      "path": "0"
    },
    "260": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        588,
        596
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x0"
    },
    "262": {
      "op": "SLOAD"
    },
    "263": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        600,
        601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "265": {
      "op": "DUP2"
    },
    "266": {
      "op": "ADD"
    },
    "267": {
      "op": "DUP2"
    },
    "268": {
      "op": "DUP2"
    },
    "269": {
      "op": "LT"
    },
    "270": {
      "op": "PUSH2",
      "value": "0x270"
    },
    "273": {
      "op": "JUMPI"
    },
    "274": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        588,
        601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "275": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        588,
        601
      ],
      "op": "POP",
      "path": "0"
    },
    "276": {
      "fn": "BookstoreNFT.createBoundNFT",
      "offset": [
        588,
        596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "278": {
      "op": "SSTORE"
    },
    "279": {
      "op": "STOP"
    },
    "280": {
      "op": "JUMPDEST"
    },
    "281": {
      "op": "PUSH4",
      "value": "0x86E9875"
    },
    "286": {
      "op": "DUP2"
    },
    "287": {
      "op": "XOR"
    },
    "288": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "291": {
      "op": "JUMPI"
    },
    "292": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "294": {
      "op": "CALLDATASIZE"
    },
    "295": {
      "op": "LT"
    },
    "296": {
      "op": "PUSH2",
      "value": "0x270"
    },
    "299": {
      "op": "JUMPI"
    },
    "300": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        679,
        690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "302": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        691,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "304": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        679,
        697
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "305": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        679,
        697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "307": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        679,
        697
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "308": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        679,
        697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "310": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        679,
        697
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "311": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        679,
        697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "313": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        679,
        697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "315": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        679,
        697
      ],
      "op": "SHA3",
      "path": "0"
    },
    "316": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        665,
        702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "317": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "0"
    },
    "318": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        665,
        702
      ],
      "op": "XOR",
      "path": "0"
    },
    "319": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        661,
        755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "322": {
      "branch": 2,
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        661,
        755
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "323": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        720,
        724
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "327": {
      "op": "MSTORE"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "330": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "332": {
      "op": "PUSH2",
      "value": "0x15E"
    },
    "335": {
      "op": "JUMP"
    },
    "336": {
      "op": "PUSH2",
      "value": "0x15E"
    },
    "339": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        661,
        755
      ],
      "op": "JUMP",
      "path": "0"
    },
    "340": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        661,
        755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "341": {
      "fn": "BookstoreNFT.redeemProduct",
      "offset": [
        750,
        755
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "343": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "345": {
      "op": "MSTORE"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "348": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "350": {
      "op": "JUMPDEST"
    },
    "351": {
      "op": "RETURN"
    },
    "352": {
      "op": "JUMPDEST"
    },
    "353": {
      "op": "PUSH4",
      "value": "0xB13557E9"
    },
    "358": {
      "op": "DUP2"
    },
    "359": {
      "op": "XOR"
    },
    "360": {
      "op": "PUSH2",
      "value": "0x268"
    },
    "363": {
      "op": "JUMPI"
    },
    "364": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "366": {
      "op": "CALLDATASIZE"
    },
    "367": {
      "op": "LT"
    },
    "368": {
      "op": "PUSH2",
      "value": "0x270"
    },
    "371": {
      "op": "JUMPI"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "374": {
      "op": "DUP1"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "377": {
      "op": "MSTORE"
    },
    "378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "380": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "382": {
      "op": "CALLDATALOAD"
    },
    "383": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "385": {
      "op": "MSTORE"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "388": {
      "op": "MSTORE"
    },
    "389": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "393": {
      "op": "SHA3"
    },
    "394": {
      "op": "DUP2"
    },
    "395": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "397": {
      "op": "ADD"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "400": {
      "op": "DUP3"
    },
    "401": {
      "op": "SLOAD"
    },
    "402": {
      "op": "DUP3"
    },
    "403": {
      "op": "MSTORE"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "406": {
      "op": "DUP4"
    },
    "407": {
      "op": "ADD"
    },
    "408": {
      "op": "SLOAD"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "411": {
      "op": "DUP4"
    },
    "412": {
      "op": "ADD"
    },
    "413": {
      "op": "MSTORE"
    },
    "414": {
      "op": "DUP1"
    },
    "415": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "417": {
      "op": "DUP4"
    },
    "418": {
      "op": "ADD"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "422": {
      "op": "DUP4"
    },
    "423": {
      "op": "ADD"
    },
    "424": {
      "op": "DUP2"
    },
    "425": {
      "op": "DUP4"
    },
    "426": {
      "op": "ADD"
    },
    "427": {
      "op": "DUP2"
    },
    "428": {
      "op": "SLOAD"
    },
    "429": {
      "op": "DUP1"
    },
    "430": {
      "op": "DUP3"
    },
    "431": {
      "op": "MSTORE"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "434": {
      "op": "DUP4"
    },
    "435": {
      "op": "ADD"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "438": {
      "op": "DUP4"
    },
    "439": {
      "op": "ADD"
    },
    "440": {
      "op": "DUP2"
    },
    "441": {
      "op": "SLOAD"
    },
    "442": {
      "op": "DUP2"
    },
    "443": {
      "op": "MSTORE"
    },
    "444": {
      "op": "POP"
    },
    "445": {
      "op": "POP"
    },
    "446": {
      "op": "POP"
    },
    "447": {
      "op": "DUP1"
    },
    "448": {
      "op": "MLOAD"
    },
    "449": {
      "op": "DUP1"
    },
    "450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "452": {
      "op": "DUP4"
    },
    "453": {
      "op": "ADD"
    },
    "454": {
      "op": "ADD"
    },
    "455": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "457": {
      "op": "DUP3"
    },
    "458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "460": {
      "op": "SUB"
    },
    "461": {
      "op": "AND"
    },
    "462": {
      "op": "CALLDATASIZE"
    },
    "463": {
      "op": "DUP3"
    },
    "464": {
      "op": "CALLDATACOPY"
    },
    "465": {
      "op": "POP"
    },
    "466": {
      "op": "POP"
    },
    "467": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "469": {
      "op": "NOT"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "472": {
      "op": "DUP3"
    },
    "473": {
      "op": "MLOAD"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "476": {
      "op": "ADD"
    },
    "477": {
      "op": "ADD"
    },
    "478": {
      "op": "AND"
    },
    "479": {
      "op": "SWAP1"
    },
    "480": {
      "op": "POP"
    },
    "481": {
      "op": "SWAP1"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "op": "DUP2"
    },
    "484": {
      "op": "ADD"
    },
    "485": {
      "op": "SWAP1"
    },
    "486": {
      "op": "POP"
    },
    "487": {
      "op": "DUP1"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "490": {
      "op": "DUP4"
    },
    "491": {
      "op": "ADD"
    },
    "492": {
      "op": "MSTORE"
    },
    "493": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "495": {
      "op": "DUP4"
    },
    "496": {
      "op": "ADD"
    },
    "497": {
      "op": "DUP2"
    },
    "498": {
      "op": "DUP4"
    },
    "499": {
      "op": "ADD"
    },
    "500": {
      "op": "DUP2"
    },
    "501": {
      "op": "SLOAD"
    },
    "502": {
      "op": "DUP1"
    },
    "503": {
      "op": "DUP3"
    },
    "504": {
      "op": "MSTORE"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "507": {
      "op": "DUP4"
    },
    "508": {
      "op": "ADD"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "511": {
      "op": "DUP4"
    },
    "512": {
      "op": "ADD"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "515": {
      "op": "DUP4"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "518": {
      "op": "ADD"
    },
    "519": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "521": {
      "op": "SHR"
    },
    "522": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "524": {
      "op": "DUP2"
    },
    "525": {
      "op": "GT"
    },
    "526": {
      "op": "PUSH2",
      "value": "0x270"
    },
    "529": {
      "op": "JUMPI"
    },
    "530": {
      "op": "DUP1"
    },
    "531": {
      "op": "ISZERO"
    },
    "532": {
      "op": "PUSH2",
      "value": "0x22F"
    },
    "535": {
      "op": "JUMPI"
    },
    "536": {
      "op": "SWAP1"
    },
    "537": {
      "op": "JUMPDEST"
    },
    "538": {
      "op": "DUP1"
    },
    "539": {
      "op": "DUP5"
    },
    "540": {
      "op": "ADD"
    },
    "541": {
      "op": "SLOAD"
    },
    "542": {
      "op": "DUP2"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "545": {
      "op": "SHL"
    },
    "546": {
      "op": "DUP5"
    },
    "547": {
      "op": "ADD"
    },
    "548": {
      "op": "MSTORE"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "551": {
      "op": "ADD"
    },
    "552": {
      "op": "DUP2"
    },
    "553": {
      "op": "DUP2"
    },
    "554": {
      "op": "XOR"
    },
    "555": {
      "op": "PUSH2",
      "value": "0x219"
    },
    "558": {
      "op": "JUMPI"
    },
    "559": {
      "op": "JUMPDEST"
    },
    "560": {
      "op": "POP"
    },
    "561": {
      "op": "POP"
    },
    "562": {
      "op": "POP"
    },
    "563": {
      "op": "POP"
    },
    "564": {
      "op": "POP"
    },
    "565": {
      "op": "DUP1"
    },
    "566": {
      "op": "MLOAD"
    },
    "567": {
      "op": "DUP1"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "570": {
      "op": "DUP4"
    },
    "571": {
      "op": "ADD"
    },
    "572": {
      "op": "ADD"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "575": {
      "op": "DUP3"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "578": {
      "op": "SUB"
    },
    "579": {
      "op": "AND"
    },
    "580": {
      "op": "CALLDATASIZE"
    },
    "581": {
      "op": "DUP3"
    },
    "582": {
      "op": "CALLDATACOPY"
    },
    "583": {
      "op": "POP"
    },
    "584": {
      "op": "POP"
    },
    "585": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "587": {
      "op": "NOT"
    },
    "588": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "590": {
      "op": "DUP3"
    },
    "591": {
      "op": "MLOAD"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "594": {
      "op": "ADD"
    },
    "595": {
      "op": "ADD"
    },
    "596": {
      "op": "AND"
    },
    "597": {
      "op": "SWAP1"
    },
    "598": {
      "op": "POP"
    },
    "599": {
      "op": "SWAP1"
    },
    "600": {
      "op": "POP"
    },
    "601": {
      "op": "DUP2"
    },
    "602": {
      "op": "ADD"
    },
    "603": {
      "op": "SWAP1"
    },
    "604": {
      "op": "POP"
    },
    "605": {
      "op": "SWAP1"
    },
    "606": {
      "op": "POP"
    },
    "607": {
      "op": "SWAP1"
    },
    "608": {
      "op": "POP"
    },
    "609": {
      "op": "DUP2"
    },
    "610": {
      "op": "ADD"
    },
    "611": {
      "op": "SWAP1"
    },
    "612": {
      "op": "POP"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "615": {
      "op": "RETURN"
    },
    "616": {
      "op": "JUMPDEST"
    },
    "617": {
      "op": "POP"
    },
    "618": {
      "op": "JUMPDEST"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "623": {
      "op": "REVERT"
    },
    "624": {
      "op": "JUMPDEST"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "627": {
      "op": "DUP1"
    },
    "628": {
      "op": "REVERT"
    }
  },
  "sha1": "c946f04a22a06685605034f15c83bc7612f7b0a9",
  "source": "# @version 0.3.7\n#Dependent: None \n#Dependent on me: Idalis Mczeal \nnum: uint256 \nstruct Erc20Token:\n    addr: address\n    decimals: uint256\n    symbol: String[16]\n    hashImag: String[100]\n\nhashie: public (HashMap[uint256, Erc20Token])\n\n@external\ndef __init__():\n    return \n\n# hashmap that contains the product sha and the image url \n# method to add to hashmap ()\n@external\ndef createBoundNFT(productOwner: address, uRL: String[100]):\n    self.hashie[self.num] = Erc20Token({\n        addr: productOwner,\n        decimals: 18,\n        symbol: \"WVC\",\n        hashImag: uRL\n        })\n    self.num += 1\n\n@external\ndef redeemProduct(NFTid : uint256) -> bool:\n    if (msg.sender == self.hashie[NFTid].addr):\n        return True\n    else:\n        return False\n\n\n\n\n\n\n\n\n",
  "sourceMap": "",
  "sourcePath": "contracts/BookstoreNFT.vy",
  "type": "contract"
}